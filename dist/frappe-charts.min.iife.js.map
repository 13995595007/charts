{"version":3,"file":"frappe-charts.min.iife.js","sources":["../src/js/utils/dom.js","../src/js/utils/helpers.js","../src/js/utils/draw-utils.js","../src/js/utils/animate.js","../src/js/utils/draw.js","../src/js/utils/colors.js","../src/js/config.js","../src/js/utils/animation.js","../src/js/objects/ChartComponents.js","../src/js/objects/AxisChartControllers.js","../src/js/utils/intervals.js","../src/js/utils/date-utils.js","../src/js/chart.js","../src/js/objects/SvgTip.js","../src/js/charts/BaseChart.js","../src/js/charts/AxisChart.js","../src/js/utils/margins.js","../src/js/charts/ScatterChart.js","../src/js/charts/LineChart.js","../src/js/charts/MultiAxisChart.js","../src/js/charts/PercentageChart.js","../src/js/charts/PieChart.js","../src/js/charts/Heatmap.js"],"sourcesContent":["export function $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function findNodeIndex(node)\n{\n\tvar i = 0;\n\twhile (node.previousSibling) {\n\t\tnode = node.previousSibling;\n\t\ti++;\n\t}\n\treturn i;\n}\n\n$.create = (tag, o) => {\n\tvar element = document.createElement(tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (i in element ) {\n\t\t\telement[i] = val;\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(i, val);\n\t\t}\n\t}\n\n\treturn element;\n};\n\nexport function getOffset(element) {\n\tlet rect = element.getBoundingClientRect();\n\treturn {\n\t\t// https://stackoverflow.com/a/7436602/6495043\n\t\t// rect.top varies with scroll, so we add whatever has been\n\t\t// scrolled to it to get absolute distance from actual page top\n\t\ttop: rect.top + (document.documentElement.scrollTop || document.body.scrollTop),\n\t\tleft: rect.left + (document.documentElement.scrollLeft || document.body.scrollLeft)\n\t};\n}\n\nexport function isElementInViewport(el) {\n\t// Although straightforward: https://stackoverflow.com/a/7557433/6495043\n\tvar rect = el.getBoundingClientRect();\n\n\treturn (\n\t\trect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\n\t);\n}\n\nexport function getElementContentWidth(element) {\n\tvar styles = window.getComputedStyle(element);\n\tvar padding = parseFloat(styles.paddingLeft) +\n\t\tparseFloat(styles.paddingRight);\n\n\treturn element.clientWidth - padding;\n}\n\nexport function bind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function (event) {\n\t\t\t\telement.addEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function unbind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function(event) {\n\t\t\t\telement.removeEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function fire(target, type, properties) {\n\tvar evt = document.createEvent(\"HTMLEvents\");\n\n\tevt.initEvent(type, true, true );\n\n\tfor (var j in properties) {\n\t\tevt[j] = properties[j];\n\t}\n\n\treturn target.dispatchEvent(evt);\n}\n","/**\n * Returns the value of a number upto 2 decimal places.\n * @param {Number} d Any number\n */\nexport function floatTwo(d) {\n\treturn parseFloat(d.toFixed(2));\n}\n\n/**\n * Returns whether or not two given arrays are equal.\n * @param {Array} arr1 First array\n * @param {Array} arr2 Second array\n */\nexport function arraysEqual(arr1, arr2) {\n\tif(arr1.length !== arr2.length) return false;\n\tlet areEqual = true;\n\tarr1.map((d, i) => {\n\t\tif(arr2[i] !== d) areEqual = false;\n\t});\n\treturn areEqual;\n}\n\n/**\n * Shuffles array in place. ES6 version\n * @param {Array} array An array containing the items.\n */\nexport function shuffle(array) {\n\t// Awesomeness: https://bost.ocks.org/mike/shuffle/\n\t// https://stackoverflow.com/a/2450976/6495043\n\t// https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array?noredirect=1&lq=1\n\n\tfor (let i = array.length - 1; i > 0; i--) {\n\t\tlet j = Math.floor(Math.random() * (i + 1));\n\t\t[array[i], array[j]] = [array[j], array[i]];\n\t}\n\n\treturn array;\n}\n\n/**\n * Fill an array with extra points\n * @param {Array} array Array\n * @param {Number} count number of filler elements\n * @param {Object} element element to fill with\n * @param {Boolean} start fill at start?\n */\nexport function fillArray(array, count, element, start=false) {\n\tif(!element) {\n\t\telement = start ? array[0] : array[array.length - 1];\n\t}\n\tlet fillerArray = new Array(Math.abs(count)).fill(element);\n\tarray = start ? fillerArray.concat(array) : array.concat(fillerArray);\n\treturn array;\n}\n\n/**\n * Returns pixel width of string.\n * @param {String} string\n * @param {Number} charWidth Width of single char in pixels\n */\nexport function getStringWidth(string, charWidth) {\n\treturn (string+\"\").length * charWidth;\n}\n","import { fillArray } from './helpers';\n\nexport function getBarHeightAndYAttr(yTop, zeroLine) {\n\tlet height, y;\n\tif (yTop <= zeroLine) {\n\t\theight = zeroLine - yTop;\n\t\ty = yTop;\n\n\t\t// In case of invisible bars\n\t\tif(height === 0) {\n\t\t\theight = totalHeight * MIN_BAR_PERCENT_HEIGHT;\n\t\t\ty -= height;\n\t\t}\n\t} else {\n\t\theight = yTop - zeroLine;\n\t\ty = zeroLine;\n\t}\n\n\treturn [height, y];\n}\n\nexport function equilizeNoOfElements(array1, array2,\n\textra_count=array2.length - array1.length) {\n\n\tif(extra_count > 0) {\n\t\tarray1 = fillArray(array1, extra_count);\n\t} else {\n\t\tarray2 = fillArray(array2, extra_count);\n\t}\n\treturn [array1, array2];\n}\n\n// let char_width = 8;\n// let allowed_space = avgUnitWidth * 1.5;\n// let allowed_letters = allowed_space / 8;\n\n// return values.map((value, i) => {\n// \tlet space_taken = getStringWidth(value, char_width) + 2;\n// \tif(space_taken > allowed_space) {\n// \t\tif(isSeries) {\n// \t\t\t// Skip some axis lines if X axis is a series\n// \t\t\tlet skips = 1;\n// \t\t\twhile((space_taken/skips)*2 > allowed_space) {\n// \t\t\t\tskips++;\n// \t\t\t}\n// \t\t\tif(i % skips !== 0) {\n// \t\t\t\treturn;\n// \t\t\t}\n// \t\t} else {\n// \t\t\tvalue = value.slice(0, allowed_letters-3) + \" ...\";\n// \t\t}\n// \t}\n","import { getBarHeightAndYAttr } from './draw-utils';\n\nexport const UNIT_ANIM_DUR = 350;\nexport const PATH_ANIM_DUR = 350;\nexport const MARKER_LINE_ANIM_DUR = UNIT_ANIM_DUR;\nexport const REPLACE_ALL_NEW_DUR = 250;\n\nexport const STD_EASING = 'easein';\n\nexport function translate(unit, oldCoord, newCoord, duration) {\n\treturn [\n\t\tunit,\n\t\t{transform: newCoord.join(', ')},\n\t\tduration,\n\t\tSTD_EASING,\n\t\t\"translate\",\n\t\t{transform: oldCoord.join(', ')}\n\t];\n}\n\nexport function translateVertLine(xLine, newX, oldX) {\n\treturn translate(xLine, [oldX, 0], [newX, 0], MARKER_LINE_ANIM_DUR);\n}\n\nexport function translateHoriLine(yLine, newY, oldY) {\n\treturn translate(yLine, [0, oldY], [0, newY], MARKER_LINE_ANIM_DUR);\n}\n\nexport var Animator = (function() {\n\tvar Animator = function(totalHeight, totalWidth, zeroLine, avgUnitWidth) {\n\t\t// constants\n\t\tthis.totalHeight = totalHeight;\n\t\tthis.totalWidth = totalWidth;\n\n\t\t// changeables\n\t\tthis.avgUnitWidth = avgUnitWidth;\n\t\tthis.zeroLine = zeroLine;\n\t};\n\n\tAnimator.prototype = {\n\t\tbar: function(barObj, x, yTop, index, noOfDatasets) {\n\t\t\tlet start = x - this.avgUnitWidth/4;\n\t\t\tlet width = (this.avgUnitWidth/2)/noOfDatasets;\n\t\t\tlet [height, y] = getBarHeightAndYAttr(yTop, this.zeroLine, this.totalHeight);\n\n\t\t\tx = start + (width * index);\n\n\t\t\treturn [barObj, {width: width, height: height, x: x, y: y}, UNIT_ANIM_DUR, STD_EASING];\n\t\t\t// bar.animate({height: args.newHeight, y: yTop}, UNIT_ANIM_DUR, mina.easein);\n\t\t},\n\n\t\tdot: function(dotObj, x, yTop) {\n\t\t\treturn [dotObj, {cx: x, cy: yTop}, UNIT_ANIM_DUR, STD_EASING];\n\t\t\t// dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\n\t\t},\n\n\t\tpath: function(d, pathStr) {\n\t\t\tlet pathComponents = [];\n\t\t\tconst animPath = [{unit: d.path, object: d, key: 'path'}, {d:\"M\"+pathStr}, PATH_ANIM_DUR, STD_EASING];\n\t\t\tpathComponents.push(animPath);\n\n\t\t\tif(d.regionPath) {\n\t\t\t\tlet regStartPt = `0,${this.zeroLine}L`;\n\t\t\t\tlet regEndPt = `L${this.totalWidth}, ${this.zeroLine}`;\n\n\t\t\t\tconst animRegion = [\n\t\t\t\t\t{unit: d.regionPath, object: d, key: 'regionPath'},\n\t\t\t\t\t{d:\"M\" + regStartPt + pathStr + regEndPt},\n\t\t\t\t\tPATH_ANIM_DUR,\n\t\t\t\t\tSTD_EASING\n\t\t\t\t];\n\t\t\t\tpathComponents.push(animRegion);\n\t\t\t}\n\n\t\t\treturn pathComponents;\n\t\t}\n\t};\n\n\treturn Animator;\n})();\n\n\n","import { getBarHeightAndYAttr } from './draw-utils';\nimport { getStringWidth } from './helpers';\nimport { STD_EASING, UNIT_ANIM_DUR, MARKER_LINE_ANIM_DUR, PATH_ANIM_DUR } from './animate';\n\n/*\n\n<filter id=\"glow\" x=\"-10%\" y=\"-10%\" width=\"120%\" height=\"120%\">\n\t<feGaussianBlur stdDeviation=\"0.5 0.5\" result=\"glow\"></feGaussianBlur>\n\t<feMerge>\n\t\t<feMergeNode in=\"glow\"></feMergeNode>\n\t\t<feMergeNode in=\"glow\"></feMergeNode>\n\t\t<feMergeNode in=\"glow\"></feMergeNode>\n\t</feMerge>\n</filter>\n\n    filter: url(#glow);\n    fill: #fff;\n\n*/\n\nconst AXIS_TICK_LENGTH = 6;\nconst LABEL_MARGIN = 4;\nexport const FONT_SIZE = 10;\nconst BASE_LINE_COLOR = '#dadada';\nconst BASE_BG_COLOR = '#F7FAFC';\n\nfunction $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function createSVG(tag, o) {\n\tvar element = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif(i === \"className\") { i = \"class\"; }\n\t\t\tif(i === \"innerHTML\") {\n\t\t\t\telement['textContent'] = val;\n\t\t\t} else {\n\t\t\t\telement.setAttribute(i, val);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn element;\n}\n\nfunction renderVerticalGradient(svgDefElem, gradientId) {\n\treturn createSVG('linearGradient', {\n\t\tinside: svgDefElem,\n\t\tid: gradientId,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: 0,\n\t\ty2: 1\n\t});\n}\n\nfunction setGradientStop(gradElem, offset, color, opacity) {\n\treturn createSVG('stop', {\n\t\t'inside': gradElem,\n\t\t'style': `stop-color: ${color}`,\n\t\t'offset': offset,\n\t\t'stop-opacity': opacity\n\t});\n}\n\nexport function makeSVGContainer(parent, className, width, height) {\n\treturn createSVG('svg', {\n\t\tclassName: className,\n\t\tinside: parent,\n\t\twidth: width,\n\t\theight: height\n\t});\n}\n\nexport function makeSVGDefs(svgContainer) {\n\treturn createSVG('defs', {\n\t\tinside: svgContainer,\n\t});\n}\n\nexport function makeSVGGroup(parent, className, transform='') {\n\treturn createSVG('g', {\n\t\tclassName: className,\n\t\tinside: parent,\n\t\ttransform: transform\n\t});\n}\n\nexport function wrapInSVGGroup(elements, className='') {\n\tlet g = createSVG('g', {\n\t\tclassName: className\n\t});\n\telements.forEach(e => g.appendChild(e));\n\treturn g;\n}\n\nexport function makePath(pathStr, className='', stroke='none', fill='none') {\n\treturn createSVG('path', {\n\t\tclassName: className,\n\t\td: pathStr,\n\t\tstyles: {\n\t\t\tstroke: stroke,\n\t\t\tfill: fill\n\t\t}\n\t});\n}\n\nexport function makeGradient(svgDefElem, color, lighter = false) {\n\tlet gradientId ='path-fill-gradient' + '-' + color;\n\tlet gradientDef = renderVerticalGradient(svgDefElem, gradientId);\n\tlet opacities = [1, 0.6, 0.2];\n\tif(lighter) {\n\t\topacities = [0.4, 0.2, 0];\n\t}\n\n\tsetGradientStop(gradientDef, \"0%\", color, opacities[0]);\n\tsetGradientStop(gradientDef, \"50%\", color, opacities[1]);\n\tsetGradientStop(gradientDef, \"100%\", color, opacities[2]);\n\n\treturn gradientId;\n}\n\nexport function makeHeatSquare(className, x, y, size, fill='none', data={}) {\n\tlet args = {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: size,\n\t\theight: size,\n\t\tfill: 1\n\t};\n\n\tObject.keys(data).map(key => {\n\t\targs[key] = data[key];\n\t});\n\n\treturn createSVG(\"rect\", args);\n}\n\nexport function makeText(className, x, y, content) {\n\treturn createSVG('text', {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\tdy: (FONT_SIZE / 2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\tinnerHTML: content\n\t});\n}\n\nfunction makeVertLine(x, label, y1, y2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tlet l = createSVG('line', {\n\t\tclassName: 'line-vertical ' + options.className,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: y1,\n\t\ty2: y2,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: 0,\n\t\ty: y1 > y2 ? y1 + LABEL_MARGIN : y1 - LABEL_MARGIN - FONT_SIZE,\n\t\tdy: FONT_SIZE + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'middle',\n\t\tinnerHTML: label\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(${ x }, 0)`\n\t});\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nfunction makeHoriLine(y, label, x1, x2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.lineType) options.lineType = '';\n\tlet className = 'line-horizontal ' + options.className +\n\t\t(options.lineType === \"dashed\" ? \"dashed\": \"\");\n\n\tlet l = createSVG('line', {\n\t\tclassName: className,\n\t\tx1: x1,\n\t\tx2: x2,\n\t\ty1: 0,\n\t\ty2: 0,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: x1 < x2 ? x1 - LABEL_MARGIN : x1 + LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / 2 - 2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': x1 < x2 ? 'end' : 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(0, ${y})`,\n\t\t'stroke-opacity': 1\n\t});\n\n\tif(text === 0 || text === '0') {\n\t\tline.style.stroke = \"rgba(27, 31, 35, 0.6)\";\n\t}\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nexport function yLine(y, label, width, options={}) {\n\tif(!options.pos) options.pos = 'left';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\tlet x1 = -1 * AXIS_TICK_LENGTH;\n\tlet x2 = options.mode === 'span' ? width + AXIS_TICK_LENGTH : 0;\n\n\tif(options.mode === 'tick' && options.pos === 'right') {\n\t\tx1 = width + AXIS_TICK_LENGTH\n\t\tx2 = width;\n\t}\n\n\tlet offset = options.pos === 'left' ? -1 * options.offset : options.offset;\n\n\tx1 += options.offset;\n\tx2 += options.offset;\n\n\treturn makeHoriLine(y, label, x1, x2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType\n\t});\n}\n\nexport function xLine(x, label, height, options={}) {\n\tif(!options.pos) options.pos = 'bottom';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\t// Draw X axis line in span/tick mode with optional label\n\t//                        \ty2(span)\n\t// \t\t\t\t\t\t|\n\t// \t\t\t\t\t\t|\n\t//\t\t\t\tx line\t|\n\t//\t\t\t\t\t\t|\n\t// \t\t\t\t\t   \t|\n\t// ---------------------+-- y2(tick)\n\t//\t\t\t\t\t\t|\n\t//\t\t\t\t\t\t\ty1\n\n\tlet y1 = height + AXIS_TICK_LENGTH;\n\tlet y2 = options.mode === 'span' ? -1 * AXIS_TICK_LENGTH : height;\n\n\tif(options.mode === 'tick' && options.pos === 'top') {\n\t\t// top axis ticks\n\t\ty1 = -1 * AXIS_TICK_LENGTH;\n\t\ty2 = 0;\n\t}\n\n\treturn makeVertLine(x, label, y1, y2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType\n\t});\n}\n\nexport class AxisChartRenderer {\n\tconstructor(state) {\n\t\tthis.refreshState(state);\n\t}\n\n\trefreshState(state) {\n\t\tthis.totalHeight = state.totalHeight;\n\t\tthis.totalWidth = state.totalWidth;\n\t\tthis.zeroLine = state.zeroLine;\n\t\tthis.unitWidth = state.unitWidth;\n\t\tthis.xAxisMode = state.xAxisMode;\n\t\tthis.yAxisMode = state.yAxisMode;\n\t}\n\n\tsetZeroline(zeroLine) {\n\t\tthis.zeroLine = zeroLine;\n\t}\n\n\txMarker() {}\n\tyMarker(y, label, options={}) {\n\t\tlet labelSvg = createSVG('text', {\n\t\t\tclassName: 'chart-label',\n\t\t\tx: this.totalWidth - getStringWidth(label, 5) - LABEL_MARGIN,\n\t\t\ty: y - FONT_SIZE - 2,\n\t\t\tdy: (FONT_SIZE / 2) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'start',\n\t\t\tinnerHTML: label+\"\"\n\t\t});\n\n\t\tlet line = makeHoriLine(y, '', 0, this.totalWidth, {\n\t\t\tstroke: options.stroke || BASE_LINE_COLOR,\n\t\t\tclassName: options.className || '',\n\t\t\tlineType: options.lineType\n\t\t});\n\n\t\tline.appendChild(labelSvg);\n\n\t\treturn line;\n\t}\n\n\txRegion() {\n\t\treturn createSVG('rect', {\n\t\t\tclassName: `bar mini`, // remove class\n\t\t\tstyle: `fill: rgba(228, 234, 239, 0.49)`,\n\t\t\t// 'data-point-index': index,\n\t\t\tx: 0,\n\t\t\ty: y2,\n\t\t\twidth: this.totalWidth,\n\t\t\theight: y1 - y2\n\t\t});\n\n\t\treturn region;\n\t}\n\n\tyRegion(y1, y2, label) {\n\t\t// return a group\n\n\t\tlet rect = createSVG('rect', {\n\t\t\tclassName: `bar mini`, // remove class\n\t\t\tstyle: `fill: rgba(228, 234, 239, 0.49)`,\n\t\t\t// 'data-point-index': index,\n\t\t\tx: 0,\n\t\t\ty: y2,\n\t\t\twidth: this.totalWidth,\n\t\t\theight: y1 - y2\n\t\t});\n\n\t\tlet upperBorder = createSVG('line', {\n\t\t\tclassName: 'line-horizontal',\n\t\t\tx1: 0,\n\t\t\tx2: this.totalWidth,\n\t\t\ty1: y2,\n\t\t\ty2: y2,\n\t\t\tstyles: {\n\t\t\t\tstroke: BASE_LINE_COLOR\n\t\t\t}\n\t\t});\n\t\tlet lowerBorder = createSVG('line', {\n\t\t\tclassName: 'line-horizontal',\n\t\t\tx1: 0,\n\t\t\tx2: this.totalWidth,\n\t\t\ty1: y1,\n\t\t\ty2: y1,\n\t\t\tstyles: {\n\t\t\t\tstroke: BASE_LINE_COLOR\n\t\t\t}\n\t\t});\n\n\t\tlet labelSvg = createSVG('text', {\n\t\t\tclassName: 'chart-label',\n\t\t\tx: this.totalWidth - getStringWidth(label, 4.5) - LABEL_MARGIN,\n\t\t\ty: y2 - FONT_SIZE - 2,\n\t\t\tdy: (FONT_SIZE / 2) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'start',\n\t\t\tinnerHTML: label+\"\"\n\t\t});\n\n\t\tlet region = createSVG('g', {});\n\n\t\tregion.appendChild(rect);\n\t\tregion.appendChild(upperBorder);\n\t\tregion.appendChild(lowerBorder);\n\t\tregion.appendChild(labelSvg);\n\n\t\treturn region;\n\t}\n\n\tanimatebar(bar, x, yTop, index, noOfDatasets) {\n\t\tlet start = x - this.avgUnitWidth/4;\n\t\tlet width = (this.avgUnitWidth/2)/noOfDatasets;\n\t\tlet [height, y] = getBarHeightAndYAttr(yTop, this.zeroLine, this.totalHeight);\n\n\t\tx = start + (width * index);\n\n\t\treturn [bar, {width: width, height: height, x: x, y: y}, UNIT_ANIM_DUR, STD_EASING];\n\t\t// bar.animate({height: args.newHeight, y: yTop}, UNIT_ANIM_DUR, mina.easein);\n\t}\n\n\tanimatedot(dot, x, yTop) {\n\t\treturn [dot, {cx: x, cy: yTop}, UNIT_ANIM_DUR, STD_EASING];\n\t\t// dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\n\t}\n\n\tanimatepath(paths, pathStr) {\n\t\tlet pathComponents = [];\n\t\tconst animPath = [paths[0], {d:\"M\"+pathStr}, PATH_ANIM_DUR, STD_EASING];\n\t\tpathComponents.push(animPath);\n\n\t\tif(paths[1]) {\n\t\t\tlet regStartPt = `0,${this.zeroLine}L`;\n\t\t\tlet regEndPt = `L${this.totalWidth}, ${this.zeroLine}`;\n\n\t\t\tconst animRegion = [\n\t\t\t\tpaths[1],\n\t\t\t\t{d:\"M\" + regStartPt + pathStr + regEndPt},\n\t\t\t\tPATH_ANIM_DUR,\n\t\t\t\tSTD_EASING\n\t\t\t];\n\t\t\tpathComponents.push(animRegion);\n\t\t}\n\n\t\treturn pathComponents;\n\t}\n}\n","const PRESET_COLOR_MAP = {\n\t'light-blue': '#7cd6fd',\n\t'blue': '#5e64ff',\n\t'violet': '#743ee2',\n\t'red': '#ff5858',\n\t'orange': '#ffa00a',\n\t'yellow': '#feef72',\n\t'green': '#28a745',\n\t'light-green': '#98d85b',\n\t'purple': '#b554ff',\n\t'magenta': '#ffa3ef',\n\t'black': '#36114C',\n\t'grey': '#bdd3e6',\n\t'light-grey': '#f0f4f7',\n\t'dark-grey': '#b8c2cc'\n};\n\nexport const DEFAULT_COLORS = ['light-blue', 'blue', 'violet', 'red', 'orange',\n\t'yellow', 'green', 'light-green', 'purple', 'magenta'];\n\nfunction limitColor(r){\n\tif (r > 255) return 255;\n\telse if (r < 0) return 0;\n\treturn r;\n}\n\nexport function lightenDarkenColor(color, amt) {\n\tlet col = getColor(color);\n\tlet usePound = false;\n\tif (col[0] == \"#\") {\n\t\tcol = col.slice(1);\n\t\tusePound = true;\n\t}\n\tlet num = parseInt(col,16);\n\tlet r = limitColor((num >> 16) + amt);\n\tlet b = limitColor(((num >> 8) & 0x00FF) + amt);\n\tlet g = limitColor((num & 0x0000FF) + amt);\n\treturn (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\nexport function isValidColor(string) {\n\t// https://stackoverflow.com/a/8027444/6495043\n\treturn /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(string);\n}\n\nexport const getColor = (color) => {\n\treturn PRESET_COLOR_MAP[color] || color;\n};\n","import Chart from './chart';\n\nconst ALL_CHART_TYPES = ['line', 'scatter', 'bar', 'percentage', 'heatmap', 'pie'];\n\nconst COMPATIBLE_CHARTS = {\n\tbar: ['line', 'scatter', 'percentage', 'pie'],\n\tline: ['scatter', 'bar', 'percentage', 'pie'],\n\tpie: ['line', 'scatter', 'percentage', 'bar'],\n\tscatter: ['line', 'bar', 'percentage', 'pie'],\n\tpercentage: ['bar', 'line', 'scatter', 'pie'],\n\theatmap: []\n};\n\n// Needs structure as per only labels/datasets\nconst COLOR_COMPATIBLE_CHARTS = {\n\tbar: ['line', 'scatter'],\n\tline: ['scatter', 'bar'],\n\tpie: ['percentage'],\n\tscatter: ['line', 'bar'],\n\tpercentage: ['pie'],\n\theatmap: []\n};\n\nexport function getDifferentChart(type, current_type, args) {\n\tif(type === current_type) return;\n\n\tif(!ALL_CHART_TYPES.includes(type)) {\n\t\tconsole.error(`'${type}' is not a valid chart type.`);\n\t}\n\n\tif(!COMPATIBLE_CHARTS[current_type].includes(type)) {\n\t\tconsole.error(`'${current_type}' chart cannot be converted to a '${type}' chart.`);\n\t}\n\n\t// whether the new chart can use the existing colors\n\tconst useColor = COLOR_COMPATIBLE_CHARTS[current_type].includes(type);\n\n\t// Okay, this is anticlimactic\n\t// this function will need to actually be 'changeChartType(type)'\n\t// that will update only the required elements, but for now ...\n\treturn new Chart({\n\t\tparent: args.parent,\n\t\ttitle: args.title,\n\t\tdata: args.data,\n\t\ttype: type,\n\t\theight: args.height,\n\t\tcolors: useColor ? args.colors : undefined\n\t});\n}","// Leveraging SMIL Animations\n\nimport { REPLACE_ALL_NEW_DUR } from './animate';\n\nconst EASING = {\n\tease: \"0.25 0.1 0.25 1\",\n\tlinear: \"0 0 1 1\",\n\t// easein: \"0.42 0 1 1\",\n\teasein: \"0.1 0.8 0.2 1\",\n\teaseout: \"0 0 0.58 1\",\n\teaseinout: \"0.42 0 0.58 1\"\n};\n\nfunction animateSVGElement(element, props, dur, easingType=\"linear\", type=undefined, oldValues={}) {\n\n\tlet animElement = element.cloneNode(true);\n\tlet newElement = element.cloneNode(true);\n\n\tfor(var attributeName in props) {\n\t\tlet animateElement;\n\t\tif(attributeName === 'transform') {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animateTransform\");\n\t\t} else {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animate\");\n\t\t}\n\t\tlet currentValue = oldValues[attributeName] || element.getAttribute(attributeName);\n\t\tlet value = props[attributeName];\n\n\t\tlet animAttr = {\n\t\t\tattributeName: attributeName,\n\t\t\tfrom: currentValue,\n\t\t\tto: value,\n\t\t\tbegin: \"0s\",\n\t\t\tdur: dur/1000 + \"s\",\n\t\t\tvalues: currentValue + \";\" + value,\n\t\t\tkeySplines: EASING[easingType],\n\t\t\tkeyTimes: \"0;1\",\n\t\t\tcalcMode: \"spline\",\n\t\t\tfill: 'freeze'\n\t\t};\n\n\t\tif(type) {\n\t\t\tanimAttr[\"type\"] = type;\n\t\t}\n\n\t\tfor (var i in animAttr) {\n\t\t\tanimateElement.setAttribute(i, animAttr[i]);\n\t\t}\n\n\t\tanimElement.appendChild(animateElement);\n\n\t\tif(type) {\n\t\t\tnewElement.setAttribute(attributeName, `translate(${value})`);\n\t\t} else {\n\t\t\tnewElement.setAttribute(attributeName, value);\n\t\t}\n\t}\n\n\treturn [animElement, newElement];\n}\n\nexport function transform(element, style) { // eslint-disable-line no-unused-vars\n\telement.style.transform = style;\n\telement.style.webkitTransform = style;\n\telement.style.msTransform = style;\n\telement.style.mozTransform = style;\n\telement.style.oTransform = style;\n}\n\nfunction animateSVG(svgContainer, elements) {\n\tlet newElements = [];\n\tlet animElements = [];\n\n\telements.map(element => {\n\t\tlet unit = element[0];\n\t\tlet parent = unit.parentNode;\n\n\t\tlet animElement, newElement;\n\n\t\telement[0] = unit;\n\t\t[animElement, newElement] = animateSVGElement(...element);\n\n\t\tnewElements.push(newElement);\n\t\tanimElements.push([animElement, parent]);\n\n\t\tparent.replaceChild(animElement, unit);\n\t});\n\n\tlet animSvg = svgContainer.cloneNode(true);\n\n\tanimElements.map((animElement, i) => {\n\t\tanimElement[1].replaceChild(newElements[i], animElement[0]);\n\t\telements[i][0] = newElements[i];\n\t});\n\n\treturn animSvg;\n}\n\nexport function runSMILAnimation(parent, svgElement, elementsToAnimate) {\n\tif(elementsToAnimate.length === 0) return;\n\n\tlet animSvgElement = animateSVG(svgElement, elementsToAnimate);\n\tif(svgElement.parentNode == parent) {\n\t\tparent.removeChild(svgElement);\n\t\tparent.appendChild(animSvgElement);\n\n\t}\n\n\t// Replace the new svgElement (data has already been replaced)\n\tsetTimeout(() => {\n\t\tif(animSvgElement.parentNode == parent) {\n\t\t\tparent.removeChild(animSvgElement);\n\t\t\tparent.appendChild(svgElement);\n\t\t}\n\t}, REPLACE_ALL_NEW_DUR);\n}\n","import { makeSVGGroup } from '../utils/draw';\nimport { xLine, yLine } from '../utils/draw';\nimport { equilizeNoOfElements } from '../utils/draw-utils';\nimport { Animator, translateHoriLine, translateVertLine } from '../utils/animate';\n\nclass ChartComponent {\n\tconstructor({\n\t\tlayerClass = '',\n\t\tlayerTransform = '',\n\t\tparent,\n\t\tconstants,\n\t\tdata,\n\n\t\t// called on update\n\t\tpreMake,\n\t\tmakeElements,\n\t\tpostMake,\n\t\tgetData,\n\t\tanimateElements\n\t}) {\n\t\tthis.parent = parent;\n\t\tthis.layerClass = layerClass;\n\t\tthis.layerTransform = layerTransform;\n\t\tthis.constants = constants;\n\n\t\tthis.preMake = preMake;\n\t\tthis.makeElements = makeElements;\n\t\tthis.postMake = postMake;\n\t\tthis.getData = getData;\n\n\t\tthis.animateElements = animateElements;\n\n\t\tthis.store = [];\n\t\tthis.layer = makeSVGGroup(this.parent, this.layerClass, this.layerTransform);\n\n\t\tthis.data = data;\n\n\t\tthis.make();\n\t}\n\n\trefresh(data) {\n\t\tthis.data = data;\n\t}\n\n\tmake() {\n\t\tthis.preMake && this.preMake();\n\t\tthis.render(this.data);\n\t\tthis.postMake && this.postMake();\n\t\tthis.oldData = this.data;\n\t}\n\n\trender(data) {\n\t\tthis.store = this.makeElements(data);\n\n\t\tthis.layer.textContent = '';\n\t\tthis.store.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t}\n\n\tupdate(animate = true) {\n\t\tlet animateElements = []\n\t\tif(animate) {\n\t\t\tanimateElements = this.animateElements(this.data);\n\t\t}\n\t\t// TODO: Can we remove this?\n\t\tsetTimeout(() => {\n\t\t\tthis.make();\n\t\t}, 1400);\n\t\treturn animateElements;\n\t}\n}\n\nlet componentConfigs = {\n\tyAxis: {\n\t\tlayerClass: 'y axis',\n\t\tmakeElements: function(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\tyLine(position, data.labels[i], this.constants.width,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements: function(newData) {\n\t\t\tlet newPos =  newData.positions;\n\t\t\tlet newLabels =  newData.labels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tlabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\txAxis: {\n\t\tlayerClass: 'x axis',\n\t\tmakeElements: function(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\txLine(position, data.labels[i], this.constants.height,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements: function(newData) {\n\t\t\tlet newPos =  newData.positions;\n\t\t\tlet newLabels =  newData.labels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tlabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateVertLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function getComponent(name, parent, constants, initData, getData) {\n\tlet config = componentConfigs[name];\n\tObject.assign(config, {\n\t\tparent: parent,\n\t\tconstants: constants,\n\t\tdata: initData,\n\t\tgetData: getData\n\t})\n\treturn new ChartComponent(config);\n}\n","import { getBarHeightAndYAttr } from '../utils/draw-utils';\nimport { createSVG, makePath, makeGradient, wrapInSVGGroup, FONT_SIZE } from '../utils/draw';\nimport { STD_EASING, UNIT_ANIM_DUR, MARKER_LINE_ANIM_DUR, PATH_ANIM_DUR } from '../utils/animate';\n\nconst MIN_BAR_PERCENT_HEIGHT = 0.01;\n\nclass AxisChartController {\n\tconstructor(meta) {\n\t\t// TODO: make configurable passing args\n\t\tthis.meta = meta || {};\n\t\tthis.setupArgs();\n\t}\n\n\tsetupArgs() {\n\t\tthis.consts = {};\n\t}\n\n\tsetup() {}\n\n\trefreshMeta(meta) {\n\t\tthis.meta = Object.assign((this.meta || {}), meta);\n\t}\n\n\tdraw() {}\n\tanimate() {}\n}\n\nexport class AxisController extends AxisChartController {\n\tconstructor(meta) {\n\t\tsuper(meta);\n\t}\n\n\tdraw(x, y, color, index) {\n\t\treturn createSVG('circle', {\n\t\t\tstyle: `fill: ${color}`,\n\t\t\t'data-point-index': index,\n\t\t\tcx: x,\n\t\t\tcy: y,\n\t\t\tr: this.consts.radius\n\t\t});\n\t}\n\n\tanimate(dot, x, yTop) {\n\t\treturn [dot, {cx: x, cy: yTop}, UNIT_ANIM_DUR, STD_EASING];\n\t\t// dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\n\t}\n}\n\nexport class BarChartController extends AxisChartController {\n\tconstructor(meta) {\n\t\tsuper(meta);\n\t}\n\n\tsetupArgs() {\n\t\tthis.consts = {\n\t\t\tspaceRatio: 0.5,\n\t\t\tminHeight: this.meta.totalHeight * MIN_BAR_PERCENT_HEIGHT\n\t\t};\n\t}\n\n\trefreshMeta(meta) {\n\t\tif(meta) {\n\t\t\tsuper.refreshMeta(meta);\n\t\t}\n\t\tlet m = this.meta;\n\t\tthis.consts.barsWidth = m.unitWidth - m.unitWidth * this.consts.spaceRatio;\n\n\t\tthis.consts.width = this.consts.barsWidth / (m.options && m.options.stacked\n\t\t\t? m.options.stacked : m.noOfDatasets);\n\t}\n\n\tdraw(x, yTop, color, label='', index=0, offset=0) {\n\t\tlet [height, y] = getBarHeightAndYAttr(yTop, this.meta.zeroLine);\n\n\t\tlet rect = createSVG('rect', {\n\t\t\tclassName: `bar mini`,\n\t\t\tstyle: `fill: ${color}`,\n\t\t\t'data-point-index': index,\n\t\t\tx: x - this.consts.barsWidth/2,\n\t\t\ty: y - offset,\n\t\t\twidth: this.consts.width,\n\t\t\theight: height || this.consts.minHeight\n\t\t});\n\n\t\tif(!label && !label.length) {\n\t\t\treturn rect;\n\t\t} else {\n\t\t\tlet text = createSVG('text', {\n\t\t\t\tclassName: 'data-point-value',\n\t\t\t\tx: x,\n\t\t\t\ty: y - offset,\n\t\t\t\tdy: (FONT_SIZE / 2 * -1) + 'px',\n\t\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t\t'text-anchor': 'middle',\n\t\t\t\tinnerHTML: label\n\t\t\t});\n\n\t\t\treturn wrapInSVGGroup([rect, text]);\n\t\t}\n\t}\n\n\tanimate(bar, x, yTop, index, noOfDatasets) {\n\t\tlet start = x - this.meta.unitWidth/4;\n\t\tlet width = (this.meta.unitWidth/2)/noOfDatasets;\n\t\tlet [height, y] = getBarHeightAndYAttr(yTop, this.meta.zeroLine, this.meta.totalHeight);\n\n\t\tx = start + (width * index);\n\n\t\treturn [bar, {width: width, height: height, x: x, y: y}, UNIT_ANIM_DUR, STD_EASING];\n\t\t// bar.animate({height: args.newHeight, y: yTop}, UNIT_ANIM_DUR, mina.easein);\n\t}\n}\n\nexport class LineChartController extends AxisChartController {\n\tconstructor(meta) {\n\t\tsuper(meta);\n\t}\n\n\tsetupArgs() {\n\t\tthis.consts = {\n\t\t\tradius: this.meta.dotSize || 4\n\t\t};\n\t}\n\n\tdraw(x, y, color, label='', index=0) {\n\t\tlet dot = createSVG('circle', {\n\t\t\tstyle: `fill: ${color}`,\n\t\t\t'data-point-index': index,\n\t\t\tcx: x,\n\t\t\tcy: y,\n\t\t\tr: this.consts.radius\n\t\t});\n\n\t\tif(!label && !label.length) {\n\t\t\treturn dot;\n\t\t} else {\n\t\t\tlet text = createSVG('text', {\n\t\t\t\tclassName: 'data-point-value',\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tdy: (FONT_SIZE / 2 * -1 - this.consts.radius) + 'px',\n\t\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t\t'text-anchor': 'middle',\n\t\t\t\tinnerHTML: label\n\t\t\t});\n\n\t\t\treturn wrapInSVGGroup([dot, text]);\n\t\t}\n\t}\n\n\tanimate(dot, x, yTop) {\n\t\treturn [dot, {cx: x, cy: yTop}, UNIT_ANIM_DUR, STD_EASING];\n\t\t// dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\n\t}\n}\n\nexport function getPaths(yList, xList, color, heatline=false, regionFill=false) {\n\tlet pointsList = yList.map((y, i) => (xList[i] + ',' + y));\n\tlet pointsStr = pointsList.join(\"L\");\n\tlet path = makePath(\"M\"+pointsStr, 'line-graph-path', color);\n\n\t// HeatLine\n\tif(heatline) {\n\t\tlet gradient_id = makeGradient(this.svgDefs, color);\n\t\tpath.style.stroke = `url(#${gradient_id})`;\n\t}\n\n\tlet components = [path];\n\n\t// Region\n\tif(regionFill) {\n\t\tlet gradient_id_region = makeGradient(this.svgDefs, color, true);\n\n\t\tlet zeroLine = this.state.yAxis.zeroLine;\n\t\t// TODO: use zeroLine OR minimum\n\t\tlet pathStr = \"M\" + `0,${zeroLine}L` + pointsStr + `L${this.width},${zeroLine}`;\n\t\tcomponents.push(makePath(pathStr, `region-fill`, 'none', `url(#${gradient_id_region})`));\n\t}\n\n\treturn components;\n}\n\n// class BarChart extends AxisChart {\n// \tconstructor(args) {\n// \t\tsuper(args);\n// \t\tthis.type = 'bar';\n// \t\tthis.setup();\n// \t}\n\n// \tconfigure(args) {\n// \t\tsuper.configure(args);\n// \t\tthis.config.xAxisMode = args.xAxisMode || 'tick';\n// \t\tthis.config.yAxisMode = args.yAxisMode || 'span';\n// \t}\n\n// \t// =================================\n\n// \tmakeOverlay() {\n// \t\t// Just make one out of the first element\n// \t\tlet index = this.xAxisLabels.length - 1;\n// \t\tlet unit = this.y[0].svg_units[index];\n// \t\tthis.setCurrentDataPoint(index);\n\n// \t\tif(this.overlay) {\n// \t\t\tthis.overlay.parentNode.removeChild(this.overlay);\n// \t\t}\n// \t\tthis.overlay = unit.cloneNode();\n// \t\tthis.overlay.style.fill = '#000000';\n// \t\tthis.overlay.style.opacity = '0.4';\n// \t\tthis.drawArea.appendChild(this.overlay);\n// \t}\n\n// \tbindOverlay() {\n// \t\t// on event, update overlay\n// \t\tthis.parent.addEventListener('data-select', (e) => {\n// \t\t\tthis.update_overlay(e.svg_unit);\n// \t\t});\n// \t}\n\n// \tbind_units(units_array) {\n// \t\tunits_array.map(unit => {\n// \t\t\tunit.addEventListener('click', () => {\n// \t\t\t\tlet index = unit.getAttribute('data-point-index');\n// \t\t\t\tthis.setCurrentDataPoint(index);\n// \t\t\t});\n// \t\t});\n// \t}\n\n// \tupdate_overlay(unit) {\n// \t\tlet attributes = [];\n// \t\tObject.keys(unit.attributes).map(index => {\n// \t\t\tattributes.push(unit.attributes[index]);\n// \t\t});\n\n// \t\tattributes.filter(attr => attr.specified).map(attr => {\n// \t\t\tthis.overlay.setAttribute(attr.name, attr.nodeValue);\n// \t\t});\n\n// \t\tthis.overlay.style.fill = '#000000';\n// \t\tthis.overlay.style.opacity = '0.4';\n// \t}\n\n// \tonLeftArrow() {\n// \t\tthis.setCurrentDataPoint(this.currentIndex - 1);\n// \t}\n\n// \tonRightArrow() {\n// \t\tthis.setCurrentDataPoint(this.currentIndex + 1);\n// \t}\n// }\n\n","function normalize(x) {\n\t// Calculates mantissa and exponent of a number\n\t// Returns normalized number and exponent\n\t// https://stackoverflow.com/q/9383593/6495043\n\n\tif(x===0) {\n\t\treturn [0, 0];\n\t}\n\tif(isNaN(x)) {\n\t\treturn {mantissa: -6755399441055744, exponent: 972};\n\t}\n\tvar sig = x > 0 ? 1 : -1;\n\tif(!isFinite(x)) {\n\t\treturn {mantissa: sig * 4503599627370496, exponent: 972};\n\t}\n\n\tx = Math.abs(x);\n\tvar exp = Math.floor(Math.log10(x));\n\tvar man = x/Math.pow(10, exp);\n\n\treturn [sig * man, exp];\n}\n\nfunction getChartRangeIntervals(max, min=0) {\n\tlet upperBound = Math.ceil(max);\n\tlet lowerBound = Math.floor(min);\n\tlet range = upperBound - lowerBound;\n\n\tlet noOfParts = range;\n\tlet partSize = 1;\n\n\t// To avoid too many partitions\n\tif(range > 5) {\n\t\tif(range % 2 !== 0) {\n\t\t\tupperBound++;\n\t\t\t// Recalc range\n\t\t\trange = upperBound - lowerBound;\n\t\t}\n\t\tnoOfParts = range/2;\n\t\tpartSize = 2;\n\t}\n\n\t// Special case: 1 and 2\n\tif(range <= 2) {\n\t\tnoOfParts = 4;\n\t\tpartSize = range/noOfParts;\n\t}\n\n\t// Special case: 0\n\tif(range === 0) {\n\t\tnoOfParts = 5;\n\t\tpartSize = 1;\n\t}\n\n\tlet intervals = [];\n\tfor(var i = 0; i <= noOfParts; i++){\n\t\tintervals.push(lowerBound + partSize * i);\n\t}\n\treturn intervals;\n}\n\nfunction getChartIntervals(maxValue, minValue=0) {\n\tlet [normalMaxValue, exponent] = normalize(maxValue);\n\tlet normalMinValue = minValue ? minValue/Math.pow(10, exponent): 0;\n\n\t// Allow only 7 significant digits\n\tnormalMaxValue = normalMaxValue.toFixed(6);\n\n\tlet intervals = getChartRangeIntervals(normalMaxValue, normalMinValue);\n\tintervals = intervals.map(value => value * Math.pow(10, exponent));\n\treturn intervals;\n}\n\nexport function calcChartIntervals(values, withMinimum=false) {\n\t//*** Where the magic happens ***\n\n\t// Calculates best-fit y intervals from given values\n\t// and returns the interval array\n\n\tlet maxValue = Math.max(...values);\n\tlet minValue = Math.min(...values);\n\n\t// Exponent to be used for pretty print\n\tlet exponent = 0, intervals = []; // eslint-disable-line no-unused-vars\n\n\tfunction getPositiveFirstIntervals(maxValue, absMinValue) {\n\t\tlet intervals = getChartIntervals(maxValue);\n\n\t\tlet intervalSize = intervals[1] - intervals[0];\n\n\t\t// Then unshift the negative values\n\t\tlet value = 0;\n\t\tfor(var i = 1; value < absMinValue; i++) {\n\t\t\tvalue += intervalSize;\n\t\t\tintervals.unshift((-1) * value);\n\t\t}\n\t\treturn intervals;\n\t}\n\n\t// CASE I: Both non-negative\n\n\tif(maxValue >= 0 && minValue >= 0) {\n\t\texponent = normalize(maxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(maxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(maxValue, minValue);\n\t\t}\n\t}\n\n\t// CASE II: Only minValue negative\n\n\telse if(maxValue > 0 && minValue < 0) {\n\t\t// `withMinimum` irrelevant in this case,\n\t\t// We'll be handling both sides of zero separately\n\t\t// (both starting from zero)\n\t\t// Because ceil() and floor() behave differently\n\t\t// in those two regions\n\n\t\tlet absMinValue = Math.abs(minValue);\n\n\t\tif(maxValue >= absMinValue) {\n\t\t\texponent = normalize(maxValue)[1];\n\t\t\tintervals = getPositiveFirstIntervals(maxValue, absMinValue);\n\t\t} else {\n\t\t\t// Mirror: maxValue => absMinValue, then change sign\n\t\t\texponent = normalize(absMinValue)[1];\n\t\t\tlet posIntervals = getPositiveFirstIntervals(absMinValue, maxValue);\n\t\t\tintervals = posIntervals.map(d => d * (-1));\n\t\t}\n\n\t}\n\n\t// CASE III: Both non-positive\n\n\telse if(maxValue <= 0 && minValue <= 0) {\n\t\t// Mirrored Case I:\n\t\t// Work with positives, then reverse the sign and array\n\n\t\tlet pseudoMaxValue = Math.abs(minValue);\n\t\tlet pseudoMinValue = Math.abs(maxValue);\n\n\t\texponent = normalize(pseudoMaxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue, pseudoMinValue);\n\t\t}\n\n\t\tintervals = intervals.reverse().map(d => d * (-1));\n\t}\n\n\treturn intervals;\n}\n\nexport function getZeroIndex(yPts) {\n\tlet zeroIndex;\n\tlet interval = getIntervalSize(yPts);\n\tif(yPts.indexOf(0) >= 0) {\n\t\t// the range has a given zero\n\t\t// zero-line on the chart\n\t\tzeroIndex = yPts.indexOf(0);\n\t} else if(yPts[0] > 0) {\n\t\t// Minimum value is positive\n\t\t// zero-line is off the chart: below\n\t\tlet min = yPts[0];\n\t\tzeroIndex = (-1) * min / interval;\n\t} else {\n\t\t// Maximum value is negative\n\t\t// zero-line is off the chart: above\n\t\tlet max = yPts[yPts.length - 1];\n\t\tzeroIndex = (-1) * max / interval + (yPts.length - 1);\n\t}\n\treturn zeroIndex;\n}\n\nexport function getRealIntervals(max, noOfIntervals, min = 0, asc = 1) {\n\tlet range = max - min;\n\tlet part = range * 1.0 / noOfIntervals;\n\tlet intervals = [];\n\n\tfor(var i = 0; i <= noOfIntervals; i++) {\n\t\tintervals.push(min + part * i);\n\t}\n\n\treturn asc ? intervals : intervals.reverse();\n}\n\nexport function getIntervalSize(orderedArray) {\n\treturn orderedArray[1] - orderedArray[0];\n}\n\nexport function getValueRange(orderedArray) {\n\treturn orderedArray[orderedArray.length-1] - orderedArray[0];\n}\n\nexport function calcDistribution(values, distributionSize) {\n\t// Assume non-negative values,\n\t// implying distribution minimum at zero\n\n\tlet dataMaxValue = Math.max(...values);\n\n\tlet distributionStep = 1 / (distributionSize - 1);\n\tlet distribution = [];\n\n\tfor(var i = 0; i < distributionSize; i++) {\n\t\tlet checkpoint = dataMaxValue * (distributionStep * i);\n\t\tdistribution.push(checkpoint);\n\t}\n\n\treturn distribution;\n}\n\nexport function getMaxCheckpoint(value, distribution) {\n\treturn distribution.filter(d => d < value).length;\n}\n","// Playing around with dates\n\n// https://stackoverflow.com/a/11252167/6495043\nfunction treatAsUtc(dateStr) {\n\tlet result = new Date(dateStr);\n\tresult.setMinutes(result.getMinutes() - result.getTimezoneOffset());\n\treturn result;\n}\n\nexport function getDdMmYyyy(date) {\n\tlet dd = date.getDate();\n\tlet mm = date.getMonth() + 1; // getMonth() is zero-based\n\treturn [\n\t\t(dd>9 ? '' : '0') + dd,\n\t\t(mm>9 ? '' : '0') + mm,\n\t\tdate.getFullYear()\n\t].join('-');\n}\n\nexport function getWeeksBetween(startDateStr, endDateStr) {\n\treturn Math.ceil(getDaysBetween(startDateStr, endDateStr) / 7);\n}\n\nexport function getDaysBetween(startDateStr, endDateStr) {\n\tlet millisecondsPerDay = 24 * 60 * 60 * 1000;\n\treturn (treatAsUtc(endDateStr) - treatAsUtc(startDateStr)) / millisecondsPerDay;\n}\n\n// mutates\nexport function addDays(date, numberOfDays) {\n\tdate.setDate(date.getDate() + numberOfDays);\n}\n\n// export function getMonthName() {}\n","import '../scss/charts.scss';\n\nimport ScatterChart from './charts/ScatterChart';\nimport MultiAxisChart from './charts/MultiAxisChart';\nimport PercentageChart from './charts/PercentageChart';\nimport PieChart from './charts/PieChart';\nimport Heatmap from './charts/Heatmap';\nimport AxisChart from './charts/AxisChart';\n\n// if (ENV !== 'production') {\n// \t// Enable LiveReload\n// \tdocument.write(\n// \t\t'<script src=\"http://' + (location.host || 'localhost').split(':')[0] +\n// \t\t':35729/livereload.js?snipver=1\"></' + 'script>'\n// \t);\n// }\n\n// If type is bar\n\n\n\n\nconst chartTypes = {\n\tmixed: AxisChart,\n\tmultiaxis: MultiAxisChart,\n\tscatter: ScatterChart,\n\tpercentage: PercentageChart,\n\theatmap: Heatmap,\n\tpie: PieChart\n};\n\nfunction getChartByType(chartType = 'line', options) {\n\tdebugger;\n\tif(chartType === 'line') {\n\t\toptions.type = 'line';\n\t\treturn new AxisChart(options);\n\t} else if (chartType === 'bar') {\n\t\toptions.type = 'bar';\n\t\treturn new AxisChart(options);\n\t}\n\n\tif (!chartTypes[chartType]) {\n\t\tconsole.error(\"Undefined chart type: \" + chartType);\n\t\treturn;\n\t}\n\n\treturn new chartTypes[chartType](options);\n}\n\nexport default class Chart {\n\tconstructor(args) {\n\t\treturn getChartByType(args.type, arguments[0]);\n\t}\n}\n","import { $ } from '../utils/dom';\n\nexport default class SvgTip {\n\tconstructor({\n\t\tparent = null,\n\t\tcolors = []\n\t}) {\n\t\tthis.parent = parent;\n\t\tthis.colors = colors;\n\t\tthis.title_name = '';\n\t\tthis.title_value = '';\n\t\tthis.list_values = [];\n\t\tthis.title_value_first = 0;\n\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\n\t\tthis.top = 0;\n\t\tthis.left = 0;\n\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tthis.make_tooltip();\n\t}\n\n\trefresh() {\n\t\tthis.fill();\n\t\tthis.calc_position();\n\t\t// this.show_tip();\n\t}\n\n\tmake_tooltip() {\n\t\tthis.container = $.create('div', {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'graph-svg-tip comparison',\n\t\t\tinnerHTML: `<span class=\"title\"></span>\n\t\t\t\t<ul class=\"data-point-list\"></ul>\n\t\t\t\t<div class=\"svg-pointer\"></div>`\n\t\t});\n\t\tthis.hide_tip();\n\n\t\tthis.title = this.container.querySelector('.title');\n\t\tthis.data_point_list = this.container.querySelector('.data-point-list');\n\n\t\tthis.parent.addEventListener('mouseleave', () => {\n\t\t\tthis.hide_tip();\n\t\t});\n\t}\n\n\tfill() {\n\t\tlet title;\n\t\tif(this.title_value_first) {\n\t\t\ttitle = `<strong>${this.title_value}</strong>${this.title_name}`;\n\t\t} else {\n\t\t\ttitle = `${this.title_name}<strong>${this.title_value}</strong>`;\n\t\t}\n\t\tthis.title.innerHTML = title;\n\t\tthis.data_point_list.innerHTML = '';\n\n\t\tthis.list_values.map((set, i) => {\n\t\t\tconst color = this.colors[i] || 'black';\n\n\t\t\tlet li = $.create('li', {\n\t\t\t\tstyles: {\n\t\t\t\t\t'border-top': `3px solid ${color}`\n\t\t\t\t},\n\t\t\t\tinnerHTML: `<strong style=\"display: block;\">${ set.value === 0 || set.value ? set.value : '' }</strong>\n\t\t\t\t\t${set.title ? set.title : '' }`\n\t\t\t});\n\n\t\t\tthis.data_point_list.appendChild(li);\n\t\t});\n\t}\n\n\tcalc_position() {\n\t\tlet width = this.container.offsetWidth;\n\n\t\tthis.top = this.y - this.container.offsetHeight;\n\t\tthis.left = this.x - width/2;\n\t\tlet max_left = this.parent.offsetWidth - width;\n\n\t\tlet pointer = this.container.querySelector('.svg-pointer');\n\n\t\tif(this.left < 0) {\n\t\t\tpointer.style.left = `calc(50% - ${-1 * this.left}px)`;\n\t\t\tthis.left = 0;\n\t\t} else if(this.left > max_left) {\n\t\t\tlet delta = this.left - max_left;\n\t\t\tlet pointer_offset = `calc(50% + ${delta}px)`;\n\t\t\tpointer.style.left = pointer_offset;\n\n\t\t\tthis.left = max_left;\n\t\t} else {\n\t\t\tpointer.style.left = `50%`;\n\t\t}\n\t}\n\n\tset_values(x, y, title_name = '', title_value = '', list_values = [], title_value_first = 0) {\n\t\tthis.title_name = title_name;\n\t\tthis.title_value = title_value;\n\t\tthis.list_values = list_values;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.title_value_first = title_value_first;\n\t\tthis.refresh();\n\t}\n\n\thide_tip() {\n\t\tthis.container.style.top = '0px';\n\t\tthis.container.style.left = '0px';\n\t\tthis.container.style.opacity = '0';\n\t}\n\n\tshow_tip() {\n\t\tthis.container.style.top = this.top + 'px';\n\t\tthis.container.style.left = this.left + 'px';\n\t\tthis.container.style.opacity = '1';\n\t}\n}\n","import SvgTip from '../objects/SvgTip';\nimport { $, isElementInViewport, getElementContentWidth } from '../utils/dom';\nimport { makeSVGContainer, makeSVGDefs, makeSVGGroup } from '../utils/draw';\nimport { getStringWidth } from '../utils/helpers';\nimport { getColor, DEFAULT_COLORS } from '../utils/colors';\nimport { getDifferentChart } from '../config';\nimport { runSMILAnimation } from '../utils/animation';\n\nexport default class BaseChart {\n\tconstructor({\n\t\theight = 240,\n\n\t\ttitle = '',\n\t\tsubtitle = '',\n\t\tcolors = [],\n\n\t\tisNavigable = 0,\n\t\tshowLegend = 1,\n\n\t\ttype = '',\n\n\t\tparent,\n\t\tdata\n\t}) {\n\t\tthis.rawChartArgs = arguments[0];\n\n\t\tthis.parent = typeof parent === 'string' ? document.querySelector(parent) : parent;\n\t\tthis.title = title;\n\t\tthis.subtitle = subtitle;\n\t\tthis.argHeight = height;\n\n\t\tthis.isNavigable = isNavigable;\n\t\tif(this.isNavigable) {\n\t\t\tthis.currentIndex = 0;\n\t\t}\n\n\t\tthis.configure(arguments[0]);\n\t}\n\n\tconfigure(args) {\n\t\t// Make a this.config, that has stuff like showTooltip,\n\t\t// showLegend, which then all functions will check\n\n\t\tthis.setColors();\n\n\t\t// constants\n\t\tthis.config = {\n\t\t\tshowTooltip: 1, // calculate\n\t\t\tshowLegend: 1,\n\t\t\tisNavigable: 0,\n\t\t\t// animate: 1\n\t\t\tanimate: 0\n\t\t};\n\n\t\tthis.state = {\n\t\t\tcolors: this.colors\n\t\t};\n\t}\n\n\tsetColors() {\n\t\tlet args = this.rawChartArgs;\n\n\t\t// Needs structure as per only labels/datasets, from config\n\t\tconst list = args.type === 'percentage' || args.type === 'pie'\n\t\t\t? args.data.labels\n\t\t\t: args.data.datasets;\n\n\t\tif(!args.colors || (list && args.colors.length < list.length)) {\n\t\t\tthis.colors = DEFAULT_COLORS;\n\t\t} else {\n\t\t\tthis.colors = args.colors;\n\t\t}\n\n\t\tthis.colors = this.colors.map(color => getColor(color));\n\t}\n\n\tsetMargins() {\n\t\t// TODO: think for all\n\t\tlet height = this.argHeight;\n\t\tthis.baseHeight = height;\n\t\tthis.height = height - 40; // change\n\t\tthis.translateY = 20;\n\n\t\tthis.setHorizontalMargin();\n\t}\n\n\tsetHorizontalMargin() {\n\t\tthis.translateXLeft = 60;\n\t\tthis.translateXRight = 40;\n\t}\n\n\tvalidate(){\n\t\tlet args = this.rawChartArgs;\n\t\t// Now yo have the args, set this stuff only after validating\n\t\tif(!this.parent) {\n\t\t\tconsole.error(\"No parent element to render on was provided.\");\n\t\t\treturn false;\n\t\t}\n\t\tif(!this.parseData()) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tparseData() {\n\t\tlet data = this.rawChartArgs.data;\n\t\tlet valid = this.checkData(data);\n\t\tif(!valid) return false;\n\n\t\tif(!this.config.animate) {\n\t\t\tthis.data = data;\n\t\t} else {\n\t\t\t[this.data, this.firstUpdateData] =\n\t\t\t\tthis.getFirstUpdateData(data);\n\t\t}\n\t\treturn true;\n\t}\n\n\tcheckData() {}\n\tgetFirstUpdateData() {}\n\n\tsetup() {\n\t\tif(this.validate()) {\n\t\t\tthis._setup();\n\t\t}\n\t}\n\n\t_setup() {\n\t\tthis.bindWindowEvents();\n\t\tthis.setupConstants();\n\n\t\tthis.setMargins();\n\t\tthis.makeContainer();\n\t\tthis.makeTooltip(); // without binding\n\n\t\tthis.calcWidth();\n\t\tthis.makeChartArea();\n\t\tthis.initComponents();\n\n\t\tthis.setupComponents();\n\t\tthis.draw(true);\n\t}\n\n\tbindWindowEvents() {\n\t\twindow.addEventListener('resize orientationchange', () => this.draw());\n\t}\n\n\tsetupConstants() {}\n\n\tsetupComponents() {\n\t\t// Components config\n\t\tthis.components = [];\n\t}\n\n\tmakeContainer() {\n\t\tthis.container = $.create('div', {\n\t\t\tclassName: 'chart-container',\n\t\t\tinnerHTML: `<h6 class=\"title\">${this.title}</h6>\n\t\t\t\t<h6 class=\"sub-title uppercase\">${this.subtitle}</h6>\n\t\t\t\t<div class=\"frappe-chart graphics\"></div>\n\t\t\t\t<div class=\"graph-stats-container\"></div>`\n\t\t});\n\n\t\t// Chart needs a dedicated parent element\n\t\tthis.parent.innerHTML = '';\n\t\tthis.parent.appendChild(this.container);\n\n\t\tthis.chartWrapper = this.container.querySelector('.frappe-chart');\n\t\tthis.statsWrapper = this.container.querySelector('.graph-stats-container');\n\t}\n\n\tmakeTooltip() {\n\t\tthis.tip = new SvgTip({\n\t\t\tparent: this.chartWrapper,\n\t\t\tcolors: this.colors\n\t\t});\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {}\n\n\tdraw(init=false) {\n\t\tthis.components.forEach(c => c.make()); // or c.build()\n\t\tthis.renderLegend();\n\n\t\tthis.setupNavigation(init);\n\n\t\t// TODO: remove timeout and decrease post animate time in chart component\n\t\tsetTimeout(() => {this.update();}, 1000);\n\t}\n\n\tcalcWidth() {\n\t\tlet outerAnnotationsWidth = 0;\n\t\t// let charWidth = 8;\n\t\t// this.specificValues.map(val => {\n\t\t// \tlet strWidth = getStringWidth((val.title + \"\"), charWidth);\n\t\t// \tif(strWidth > outerAnnotationsWidth) {\n\t\t// \t\touterAnnotationsWidth = strWidth - 40;\n\t\t// \t}\n\t\t// });\n\t\tthis.baseWidth = getElementContentWidth(this.parent) - outerAnnotationsWidth;\n\t\tthis.width = this.baseWidth - (this.translateXLeft + this.translateXRight);\n\t}\n\n\tupdate(data=this.data) {\n\t\tthis.prepareData(data);\n\t\tthis.calc(); // builds state\n\t\tthis.refreshRenderer();\n\t\tthis.render();\n\t}\n\n\tprepareData() {}\n\n\trenderConstants() {}\n\n\tcalc() {} // builds state\n\n\trefreshRenderer() {\n\t\tthis.renderer = {};\n\t}\n\n\trender(animate=true) {\n\t\tthis.refreshComponents();\n\t\tthis.elementsToAnimate = [].concat.apply([], this.components.map(c => c.update(animate)));\n\t\tif(this.elementsToAnimate) {\n\t\t\trunSMILAnimation(this.chartWrapper, this.svg, this.elementsToAnimate);\n\t\t}\n\t}\n\n\trefreshComponents() {}\n\n\tmakeChartArea() {\n\t\tthis.svg = makeSVGContainer(\n\t\t\tthis.chartWrapper,\n\t\t\t'chart',\n\t\t\tthis.baseWidth,\n\t\t\tthis.baseHeight\n\t\t);\n\t\tthis.svgDefs = makeSVGDefs(this.svg);\n\n\t\t// I WISH !!!\n\t\t// this.svg = makeSVGGroup(\n\t\t// \tsvgContainer,\n\t\t// \t'flipped-coord-system',\n\t\t// \t`translate(0, ${this.baseHeight}) scale(1, -1)`\n\t\t// );\n\n\t\tthis.drawArea = makeSVGGroup(\n\t\t\tthis.svg,\n\t\t\tthis.type + '-chart',\n\t\t\t`translate(${this.translateXLeft}, ${this.translateY})`\n\t\t);\n\t}\n\n\trenderLegend() {}\n\n\tsetupNavigation(init=false) {\n\t\tif(this.isNavigable) return;\n\n\t\tthis.makeOverlay();\n\n\t\tif(init) {\n\t\t\tthis.bindOverlay();\n\n\t\t\tdocument.addEventListener('keydown', (e) => {\n\t\t\t\tif(isElementInViewport(this.chartWrapper)) {\n\t\t\t\t\te = e || window.event;\n\n\t\t\t\t\tif (e.keyCode == '37') {\n\t\t\t\t\t\tthis.onLeftArrow();\n\t\t\t\t\t} else if (e.keyCode == '39') {\n\t\t\t\t\t\tthis.onRightArrow();\n\t\t\t\t\t} else if (e.keyCode == '38') {\n\t\t\t\t\t\tthis.onUpArrow();\n\t\t\t\t\t} else if (e.keyCode == '40') {\n\t\t\t\t\t\tthis.onDownArrow();\n\t\t\t\t\t} else if (e.keyCode == '13') {\n\t\t\t\t\t\tthis.onEnterKey();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tmakeOverlay() {}\n\tbindOverlay() {}\n\tbind_units() {}\n\n\tonLeftArrow() {}\n\tonRightArrow() {}\n\tonUpArrow() {}\n\tonDownArrow() {}\n\tonEnterKey() {}\n\n\t// updateData() {\n\t// \tupdate();\n\t// }\n\n\tgetDataPoint() {}\n\tsetCurrentDataPoint() {}\n\n\n\t// Update the data here, then do relevant updates\n\t// and drawing in child classes by overriding\n\t// The Child chart will only know what a particular update means\n\t// and what components are affected,\n\t// BaseChart shouldn't be doing the animating\n\n\tupdateDataset(dataset, index) {}\n\n\tupdateDatasets(datasets) {\n\t\t//\n\t}\n\n\taddDataset(dataset, index) {}\n\n\tremoveDataset(index = 0) {}\n\n\taddDataPoint(dataPoint, index = 0) {}\n\n\tremoveDataPoint(index = 0) {}\n\n\tupdateDataPoint(dataPoint, index = 0) {}\n\n\n\n\tgetDifferentChart(type) {\n\t\treturn getDifferentChart(type, this.type, this.rawChartArgs);\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { Y_AXIS_MARGIN } from '../utils/margins';\nimport { getComponent } from '../objects/ChartComponents';\nimport { BarChartController, LineChartController, getPaths } from '../objects/AxisChartControllers';\nimport { AxisChartRenderer } from '../utils/draw';\nimport { getOffset, fire } from '../utils/dom';\nimport { equilizeNoOfElements } from '../utils/draw-utils';\nimport { Animator, translateHoriLine } from '../utils/animate';\nimport { runSMILAnimation } from '../utils/animation';\nimport { getRealIntervals, calcChartIntervals, getIntervalSize, getValueRange, getZeroIndex } from '../utils/intervals';\nimport { floatTwo, fillArray } from '../utils/helpers';\n\nexport default class AxisChart extends BaseChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\tthis.isSeries = args.isSeries;\n\t\tthis.valuesOverPoints = args.valuesOverPoints;\n\t\tthis.formatTooltipY = args.formatTooltipY;\n\t\tthis.formatTooltipX = args.formatTooltipX;\n\t\tthis.barOptions = args.barOptions;\n\t\tthis.lineOptions = args.lineOptions;\n\t\tthis.type = args.type || 'line';\n\n\t\tthis.xAxisMode = args.xAxisMode || 'span';\n\t\tthis.yAxisMode = args.yAxisMode || 'span';\n\n\t\tthis.setupUnitRenderer();\n\n\t\tthis.zeroLine = this.height;\n\t\tthis.preSetup();\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure();\n\n\t\tthis.config.xAxisMode = args.xAxisMode;\n\t\tthis.config.yAxisMode = args.yAxisMode;\n\t}\n\n\tpreSetup() {}\n\n\tsetupUnitRenderer() {\n\t\t// TODO: this is empty\n\t\tlet options = this.rawChartArgs.options;\n\t\tthis.unitRenderers = {\n\t\t\tbar: new BarChartController(options),\n\t\t\tline: new LineChartController(options)\n\t\t};\n\t}\n\n\tsetHorizontalMargin() {\n\t\tthis.translateXLeft = Y_AXIS_MARGIN;\n\t\tthis.translateXRight = Y_AXIS_MARGIN;\n\t}\n\n\tcheckData(data) {\n\t\treturn true;\n\t}\n\n\tgetFirstUpdateData(data) {\n\t\t//\n\t}\n\n\tsetupConstants() {\n\t\tthis.state = {\n\t\t\txAxisLabels: [],\n\t\t\txAxisPositions: [],\n\t\t\txAxisMode: this.config.xAxisMode,\n\t\t\tyAxisMode: this.config.yAxisMode\n\t\t}\n\n\t\tthis.data.datasets.map(d => {\n\t\t\tif(!d.chartType ) {\n\t\t\t\td.chartType = this.type;\n\t\t\t}\n\t\t});\n\n\t\tthis.prepareYAxis();\n\t}\n\n\tprepareData(data) {\n\t\tlet s = this.state;\n\n\t\ts.xAxisLabels = data.labels || [];\n\n\t\ts.datasetLength = s.xAxisLabels.length;\n\n\t\tlet zeroArray = new Array(s.datasetLength).fill(0);\n\n\t\ts.datasets = data.datasets; // whole dataset info too\n\t\tif(!data.datasets) {\n\t\t\t// default\n\t\t\ts.datasets = [{\n\t\t\t\tvalues: zeroArray\t// Proof that state version will be seen instead of this.data\n\t\t\t}];\n\t\t}\n\n\t\ts.datasets.map((d, i)=> {\n\t\t\tlet vals = d.values;\n\t\t\tif(!vals) {\n\t\t\t\tvals = zeroArray;\n\t\t\t} else {\n\t\t\t\t// Check for non values\n\t\t\t\tvals = vals.map(val => (!isNaN(val) ? val : 0));\n\n\t\t\t\t// Trim or extend\n\t\t\t\tif(vals.length > s.datasetLength) {\n\t\t\t\t\tvals = vals.slice(0, s.datasetLength);\n\t\t\t\t} else {\n\t\t\t\t\tvals = fillArray(vals, s.datasetLength - vals.length, 0);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\td.index = i;\n\t\t});\n\n\t\ts.noOfDatasets = s.datasets.length;\n\t\ts.yMarkers = data.yMarkers;\n\t\ts.yRegions = data.yRegions;\n\t}\n\n\tprepareYAxis() {\n\t\tthis.state.yAxis = {\n\t\t\tlabels: [],\n\t\t\tpositions: []\n\t\t};\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\n\t\ts.xAxisLabels = this.data.labels;\n\t\tthis.calcXPositions();\n\n\t\ts.datasetsLabels = this.data.datasets.map(d => d.name);\n\t\tthis.setYAxis();\n\t\tthis.calcYUnits();\n\t\tthis.calcYMaximums();\n\t\tthis.calcYRegions();\n\n\t\t// should be state\n\t\tthis.configUnits();\n\t}\n\n\tsetYAxis() {\n\t\tthis.calcYAxisParameters(this.state.yAxis, this.getAllYValues(), this.type === 'line');\n\t\tthis.state.zeroLine = this.state.yAxis.zeroLine;\n\t}\n\n\tcalcXPositions() {\n\t\tlet s = this.state;\n\t\tthis.setUnitWidthAndXOffset();\n\t\ts.xAxisPositions = s.xAxisLabels.map((d, i) =>\n\t\t\tfloatTwo(s.xOffset + i * s.unitWidth)\n\t\t);\n\n\t\ts.xUnitPositions = new Array(s.noOfDatasets).fill(s.xAxisPositions);\n\t}\n\n\tcalcYAxisParameters(yAxis, dataValues, withMinimum = 'false') {\n\t\tyAxis.labels = calcChartIntervals(dataValues, withMinimum);\n\t\tconst yPts = yAxis.labels;\n\n\t\tyAxis.scaleMultiplier = this.height / getValueRange(yPts);\n\t\tconst intervalHeight = getIntervalSize(yPts) * yAxis.scaleMultiplier;\n\t\tyAxis.zeroLine = this.height - (getZeroIndex(yPts) * intervalHeight);\n\n\t\tyAxis.positions = yPts.map(d => yAxis.zeroLine - d * yAxis.scaleMultiplier);\n\t}\n\n\tcalcYUnits() {\n\t\tlet s = this.state;\n\t\ts.datasets.map(d => {\n\t\t\td.positions = d.values.map(val =>\n\t\t\t\tfloatTwo(s.yAxis.zeroLine - val * s.yAxis.scaleMultiplier));\n\t\t});\n\n\t\tif(this.barOptions && this.barOptions.stacked) {\n\t\t\ts.datasets.map((d, i) => {\n\t\t\t\td.cumulativePositions = d.cumulativeYs.map(val =>\n\t\t\t\t\tfloatTwo(s.yAxis.zeroLine - val * s.yAxis.scaleMultiplier));\n\t\t\t});\n\t\t}\n\t}\n\n\tcalcYMaximums() {\n\t\tlet s = this.state;\n\t\tif(this.barOptions && this.barOptions.stacked) {\n\t\t\ts.yExtremes = s.datasets[s.datasets.length - 1].cumulativePositions;\n\t\t\treturn;\n\t\t}\n\t\ts.yExtremes = new Array(s.datasetLength).fill(9999);\n\t\ts.datasets.map((d, i) => {\n\t\t\td.positions.map((pos, j) => {\n\t\t\t\tif(pos < s.yExtremes[j]) {\n\t\t\t\t\ts.yExtremes[j] = pos;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t// Tooltip refresh should not be needed?\n\t\t// this.chartWrapper.removeChild(this.tip.container);\n\t\t// this.make_tooltip();\n\t}\n\n\tcalcYRegions() {\n\t\tlet s = this.state;\n\t\tif(s.yMarkers) {\n\t\t\ts.yMarkers = s.yMarkers.map(d => {\n\t\t\t\td.value = floatTwo(s.yAxis.zeroLine - d.value * s.yAxis.scaleMultiplier);\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t\tif(s.yRegions) {\n\t\t\ts.yRegions = s.yRegions.map(d => {\n\t\t\t\td.start = floatTwo(s.yAxis.zeroLine - d.start * s.yAxis.scaleMultiplier);\n\t\t\t\td.end = floatTwo(s.yAxis.zeroLine - d.end * s.yAxis.scaleMultiplier);\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t}\n\n\tconfigUnits() {}\n\n\t// Default, as per bar, and mixed. Only line will be a special case\n\tsetUnitWidthAndXOffset() {\n\t\tthis.state.unitWidth = this.width/(this.state.datasetLength);\n\t\tthis.state.xOffset = this.state.unitWidth/2;\n\t}\n\n\tgetAllYValues() {\n\t\t// TODO: yMarkers, regions, sums, every Y value ever\n\n\t\tlet key = 'values';\n\n\t\tif(this.barOptions && this.barOptions.stacked) {\n\t\t\tkey = 'cumulativeYs';\n\t\t\tlet cumulative = new Array(this.state.datasetLength).fill(0);\n\t\t\tthis.state.datasets.map((d, i) => {\n\t\t\t\tlet values = this.state.datasets[i].values;\n\t\t\t\td[key] = cumulative = cumulative.map((c, i) => c + values[i]);\n\t\t\t});\n\t\t}\n\n\t\treturn [].concat(...this.state.datasets.map(d => d[key]));\n\t}\n\n\tcalcIntermedState() {\n\t\t//\n\t}\n\n\tsetupValues() {}\n\n\tinitComponents() {\n\n\t\t// TODO: rebind new units\n\t\t// if(this.isNavigable) {\n\t\t// \tthis.bind_units(units_array);\n\t\t// }\n\n\n\t\tthis.componentConfigs = [\n\t\t\t[\n\t\t\t\t'yAxis',\n\t\t\t\tthis.drawArea,\n\t\t\t\t{\n\t\t\t\t\tmode: this.yAxisMode,\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositions: getRealIntervals(this.height, 4, 0, 0),\n\t\t\t\t\tlabels: getRealIntervals(this.height, 4, 0, 0).map(d => d + \"\"),\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tpositions: s.yAxis.positions,\n\t\t\t\t\t\tlabels: s.yAxis.labels,\n\t\t\t\t\t}\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'xAxis',\n\t\t\t\tthis.drawArea,\n\t\t\t\t{\n\t\t\t\t\tmode: this.xAxisMode,\n\t\t\t\t\theight: this.height,\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositions: getRealIntervals(this.width, 4, 0, 1),\n\t\t\t\t\tlabels: getRealIntervals(this.width, 4, 0, 1).map(d => d + \"\"),\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tpositions: s.xAxisPositions,\n\t\t\t\t\t\tlabels: s.xAxisLabels,\n\t\t\t\t\t}\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\t// this.components = [\n\t\t// \tyAxis\n\t\t// \t// this.getXAxisComponents(),\n\t\t// \t// ...this.getYRegions(),\n\t\t// \t// ...this.getXRegions(),\n\t\t// \t// ...this.getYMarkerLines(),\n\t\t// \t// // ...this.getXMarkerLines(),\n\t\t// \t// ...this.getChartComponents(),\n\t\t// \t// ...this.getChartLabels(),\n\t\t// ];\n\t}\n\tsetupComponents() {\n\t\tthis.components = this.componentConfigs.map(args => getComponent(...args));\n\t}\n\n\trefreshComponents() {\n\t\tthis.components.forEach(comp => comp.refresh(comp.getData()));\n\t}\n\n\tgetXAxisComponents() {\n\t\treturn new ChartComponent({\n\t\t\tlayerClass: 'x axis',\n\t\t\tsetData: () => {\n\t\t\t\tlet s = this.state;\n\t\t\t\tlet data = {\n\t\t\t\t\tpositions: s.xAxisPositions,\n\t\t\t\t\tlabels: s.xAxisLabels,\n\t\t\t\t};\n\t\t\t\tlet constants = {\n\t\t\t\t\tmode: this.xAxisMode,\n\t\t\t\t\theight: this.height\n\t\t\t\t}\n\t\t\t\treturn [data, constants];\n\t\t\t},\n\t\t\tmakeElements: () => {\n\t\t\t\tlet s = this.state;\n\t\t\t\t// positions\n\t\t\t\t// TODO: xAxis Label spacing\n\t\t\t\treturn s.xAxisPositions.map((position, i) =>\n\t\t\t\t\txLine(position, s.xAxisLabels[i], this.constants.height\n\t\t\t\t\t\t// , {pos:'top'}\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t},\n\t\t\tanimate: (xLines) => {\n\t\t\t\t// Equilize\n\t\t\t\tlet newX = this.state.xAxisPositions;\n\t\t\t\tlet oldX = this.oldState.xAxisPositions;\n\n\t\t\t\tthis.oldState.xExtra = newX.length - oldX.length;\n\t\t\t\tlet lastLine = xLines[xLines.length - 1];\n\t\t\t\tlet parentNode = lastLine.parentNode;\n\n\t\t\t\t[oldX, newX] = equilizeNoOfElements(oldX, newX);\n\t\t\t\tif(this.oldState.xExtra > 0) {\n\t\t\t\t\tfor(var i = 0; i<this.oldState.xExtra; i++) {\n\t\t\t\t\t\tlet line = lastLine.cloneNode(true);\n\t\t\t\t\t\tparentNode.appendChild(line);\n\t\t\t\t\t\txLines.push(line);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\txLines.map((line, i) => {\n\t\t\t\t\tthis.elementsToAnimate.push(this.renderer.translateVertLine(\n\t\t\t\t\t\tline, newX[i], oldX[i]\n\t\t\t\t\t));\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tgetChartComponents() {\n\t\tlet dataUnitsComponents = []\n\t\t// this.state is not defined at this stage\n\t\tthis.data.datasets.forEach((d, index) => {\n\t\t\tif(d.chartType === 'line') {\n\t\t\t\tdataUnitsComponents.push(this.getPathComponent(d, index));\n\t\t\t}\n\n\t\t\tlet renderer = this.unitRenderers[d.chartType];\n\t\t\tdataUnitsComponents.push(this.getDataUnitComponent(\n\t\t\t\tindex, renderer\n\t\t\t));\n\t\t});\n\t\treturn dataUnitsComponents;\n\t}\n\n\tgetChartLabels() {\n\t\t// To layer all labels above everything else\n\t\treturn [];\n\t}\n\n\tgetDataUnitComponent(index, unitRenderer) {\n\t\treturn new ChartComponent({\n\t\t\tlayerClass: 'dataset-units dataset-' + index,\n\t\t\tsetData: () => {},\n\t\t\tpreMake: () => { },\n\t\t\tmakeElements: () => {\n\t\t\t\tlet d = this.state.datasets[index];\n\n\t\t\t\treturn d.positions.map((y, j) => {\n\t\t\t\t\treturn unitRenderer.draw(\n\t\t\t\t\t\tthis.state.xAxisPositions[j],\n\t\t\t\t\t\ty,\n\t\t\t\t\t\tthis.colors[index],\n\t\t\t\t\t\t(this.valuesOverPoints ? (this.barOptions &&\n\t\t\t\t\t\t\tthis.barOptions.stacked ? d.cumulativeYs[j] : d.values[j]) : ''),\n\t\t\t\t\t\tj,\n\t\t\t\t\t\ty - (d.cumulativePositions ? d.cumulativePositions[j] : y)\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t},\n\t\t\tpostMake: function() {\n\t\t\t\tlet translate_layer = () => {\n\t\t\t\t\tthis.layer.setAttribute('transform', `translate(${unitRenderer.consts.width * index}, 0)`);\n\t\t\t\t}\n\n\t\t\t\t// let d = this.state.datasets[index];\n\n\t\t\t\tif(this.meta.type === 'bar' && (!this.meta.barOptions\n\t\t\t\t\t|| !this.meta.barOptions.stacked)) {\n\n\t\t\t\t\ttranslate_layer();\n\t\t\t\t}\n\t\t\t},\n\t\t\tanimate: (svgUnits) => {\n\t\t\t\t// have been updated in axis render;\n\t\t\t\tlet newX = this.state.xAxisPositions;\n\t\t\t\tlet newY = this.state.datasets[index].positions;\n\n\t\t\t\tlet lastUnit = svgUnits[svgUnits.length - 1];\n\t\t\t\tlet parentNode = lastUnit.parentNode;\n\n\t\t\t\tif(this.oldState.xExtra > 0) {\n\t\t\t\t\tfor(var i = 0; i<this.oldState.xExtra; i++) {\n\t\t\t\t\t\tlet unit = lastUnit.cloneNode(true);\n\t\t\t\t\t\tparentNode.appendChild(unit);\n\t\t\t\t\t\tsvgUnits.push(unit);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsvgUnits.map((unit, i) => {\n\t\t\t\t\tif(newX[i] === undefined || newY[i] === undefined) return;\n\t\t\t\t\tthis.elementsToAnimate.push(unitRenderer.animate(\n\t\t\t\t\t\tunit, // unit, with info to replace where it came from in the data\n\t\t\t\t\t\tnewX[i],\n\t\t\t\t\t\tnewY[i],\n\t\t\t\t\t\tindex,\n\t\t\t\t\t\tthis.state.noOfDatasets\n\t\t\t\t\t));\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tgetPathComponent(d, index) {\n\t\treturn new ChartComponent({\n\t\t\tlayerClass: 'path dataset-path',\n\t\t\tsetData: () => {},\n\t\t\tmakeElements: () => {\n\t\t\t\tlet d = this.state.datasets[index];\n\t\t\t\tlet color = this.colors[index];\n\n\t\t\t\treturn getPaths(\n\t\t\t\t\td.positions,\n\t\t\t\t\tthis.state.xAxisPositions,\n\t\t\t\t\tcolor,\n\t\t\t\t\tthis.config.heatline,\n\t\t\t\t\tthis.config.regionFill\n\t\t\t\t);\n\t\t\t},\n\t\t\tanimate: (paths) => {\n\t\t\t\tlet newX = this.state.xAxisPositions;\n\t\t\t\tlet newY = this.state.datasets[index].positions;\n\n\t\t\t\tlet oldX = this.oldState.xAxisPositions;\n\t\t\t\tlet oldY = this.oldState.datasets[index].positions;\n\n\n\t\t\t\tlet parentNode = paths[0].parentNode;\n\n\t\t\t\t[oldX, newX] = equilizeNoOfElements(oldX, newX);\n\t\t\t\t[oldY, newY] = equilizeNoOfElements(oldY, newY);\n\n\t\t\t\tif(this.oldState.xExtra > 0) {\n\t\t\t\t\tpaths = getPaths(\n\t\t\t\t\t\toldY, oldX, this.colors[index],\n\t\t\t\t\t\tthis.config.heatline,\n\t\t\t\t\t\tthis.config.regionFill\n\t\t\t\t\t);\n\t\t\t\t\tparentNode.textContent = '';\n\t\t\t\t\tpaths.map(path => parentNode.appendChild(path));\n\t\t\t\t}\n\n\t\t\t\tconst newPointsList = newY.map((y, i) => (newX[i] + ',' + y));\n\t\t\t\tthis.elementsToAnimate = this.elementsToAnimate\n\t\t\t\t\t.concat(this.renderer.animatepath(paths, newPointsList.join(\"L\")));\n\t\t\t}\n\t\t});\n\t}\n\n\tgetYMarkerLines() {\n\t\tif(!this.data.yMarkers) {\n\t\t\treturn [];\n\t\t}\n\t\treturn this.data.yMarkers.map((d, index) => {\n\t\t\treturn new ChartComponent({\n\t\t\t\tlayerClass: 'y-markers',\n\t\t\t\tsetData: () => {},\n\t\t\t\tmakeElements: () => {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\treturn s.yMarkers.map(marker =>\n\t\t\t\t\t\tthis.renderer.yMarker(marker.value, marker.name,\n\t\t\t\t\t\t\t{pos:'right', mode: 'span', lineType: marker.type})\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tanimate: () => {}\n\t\t\t});\n\t\t});\n\t}\n\n\tgetYRegions() {\n\t\tif(!this.data.yRegions) {\n\t\t\treturn [];\n\t\t}\n\t\t// return [];\n\t\treturn this.data.yRegions.map((d, index) => {\n\t\t\treturn new ChartComponent({\n\t\t\t\tlayerClass: 'y-regions',\n\t\t\t\tsetData: () => {},\n\t\t\t\tmakeElements: () => {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\treturn s.yRegions.map(region =>\n\t\t\t\t\t\tthis.renderer.yRegion(region.start, region.end, region.name)\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tanimate: () => {}\n\t\t\t});\n\t\t});\n\t}\n\n\trefreshRenderer() {\n\t\t// These args are basically the current state of the chart,\n\t\t// with constant and alive params mixed\n\t\tlet state = {\n\t\t\ttotalHeight: this.height,\n\t\t\ttotalWidth: this.width,\n\n\t\t\txAxisMode: this.config.xAxisMode,\n\t\t\tyAxisMode: this.config.yAxisMode,\n\n\t\t\tzeroLine: this.state.zeroLine,\n\t\t\tunitWidth: this.state.unitWidth,\n\t\t};\n\t\tif(!this.renderer) {\n\t\t\tthis.renderer = new AxisChartRenderer(state);\n\t\t} else {\n\t\t\tthis.renderer.refreshState(state);\n\t\t}\n\n\t\tlet meta = {\n\t\t\ttotalHeight: this.height,\n\t\t\ttotalWidth: this.width,\n\t\t\tzeroLine: this.state.zeroLine,\n\t\t\tunitWidth: this.state.unitWidth,\n\t\t\tnoOfDatasets: this.state.noOfDatasets,\n\t\t};\n\n\t\tmeta = Object.assign(meta, this.rawChartArgs.options);\n\n\t\tObject.keys(this.unitRenderers).map(key => {\n\t\t\tmeta.options = this[key + 'Options'];\n\t\t\tthis.unitRenderers[key].refreshMeta(meta);\n\t\t});\n\t}\n\n\tbindTooltip() {\n\t\t// TODO: could be in tooltip itself, as it is a given functionality for its parent\n\t\tthis.chartWrapper.addEventListener('mousemove', (e) => {\n\t\t\tlet o = getOffset(this.chartWrapper);\n\t\t\tlet relX = e.pageX - o.left - this.translateXLeft;\n\t\t\tlet relY = e.pageY - o.top - this.translateY;\n\n\t\t\tif(relY < this.height + this.translateY * 2) {\n\t\t\t\tthis.mapTooltipXPosition(relX);\n\t\t\t} else {\n\t\t\t\tthis.tip.hide_tip();\n\t\t\t}\n\t\t});\n\t}\n\n\tmapTooltipXPosition(relX) {\n\t\tlet s = this.state;\n\t\tif(!s.yExtremes) return;\n\n\t\tlet titles = s.xAxisLabels;\n\t\tif(this.formatTooltipX && this.formatTooltipX(titles[0])) {\n\t\t\ttitles = titles.map(d=>this.formatTooltipX(d));\n\t\t}\n\n\t\tlet formatY = this.formatTooltipY && this.formatTooltipY(this.y[0].values[0]);\n\n\t\tfor(var i=s.datasetLength - 1; i >= 0 ; i--) {\n\t\t\tlet xVal = s.xAxisPositions[i];\n\t\t\t// let delta = i === 0 ? s.unitWidth : xVal - s.xAxisPositions[i-1];\n\t\t\tif(relX > xVal - s.unitWidth/2) {\n\t\t\t\tlet x = xVal + this.translateXLeft;\n\t\t\t\tlet y = s.yExtremes[i] + this.translateY;\n\n\t\t\t\tlet values = s.datasets.map((set, j) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttitle: set.title,\n\t\t\t\t\t\tvalue: formatY ? this.formatTooltipY(set.values[i]) : set.values[i],\n\t\t\t\t\t\tcolor: this.colors[j],\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\tthis.tip.set_values(x, y, titles[i], '', values);\n\t\t\t\tthis.tip.show_tip();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetDataPoint(index=this.current_index) {\n\t\t// check for length\n\t\tlet data_point = {\n\t\t\tindex: index\n\t\t};\n\t\tlet y = this.y[0];\n\t\t['svg_units', 'yUnitPositions', 'values'].map(key => {\n\t\t\tlet data_key = key.slice(0, key.length-1);\n\t\t\tdata_point[data_key] = y[key][index];\n\t\t});\n\t\tdata_point.label = this.xAxisLabels[index];\n\t\treturn data_point;\n\t}\n\n\tsetCurrentDataPoint(index) {\n\t\tindex = parseInt(index);\n\t\tif(index < 0) index = 0;\n\t\tif(index >= this.xAxisLabels.length) index = this.xAxisLabels.length - 1;\n\t\tif(index === this.current_index) return;\n\t\tthis.current_index = index;\n\t\t$.fire(this.parent, \"data-select\", this.getDataPoint());\n\t}\n\n\t// API\n\n\taddDataPoint(label, datasetValues, index=this.state.datasetLength) {\n\t\tsuper.addDataPoint(label, datasetValues, index);\n\t\t// console.log(label, datasetValues, this.data.labels);\n\t\tthis.data.labels.splice(index, 0, label);\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\td.values.splice(index, 0, datasetValues[i]);\n\t\t});\n\t\t// console.log(this.data);\n\t\tthis.update(this.data);\n\t}\n\n\tremoveDataPoint(index = this.state.datasetLength-1) {\n\t\tsuper.removeDataPoint(index);\n\t\tthis.data.labels.splice(index, 1);\n\t\tthis.data.datasets.map(d => {\n\t\t\td.values.splice(index, 1);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\t// updateData() {\n\t// \t// animate if same no. of datasets,\n\t// \t// else return new chart\n\n\t// \t//\n\t// }\n}\n\n\n// keep a binding at the end of chart\n\n","export const Y_AXIS_MARGIN = 60;","import LineChart from './LineChart';\n\nexport default class ScatterChart extends LineChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\n\t\tthis.type = 'scatter';\n\n\t\tif(!args.dotRadius) {\n\t\t\tthis.dotRadius = 8;\n\t\t} else {\n\t\t\tthis.dotRadius = args.dotRadius;\n\t\t}\n\n\t\tthis.setup();\n\t}\n\n\tsetup_values() {\n\t\tsuper.setup_values();\n\t\tthis.unit_args = {\n\t\t\ttype: 'dot',\n\t\t\targs: { radius: this.dotRadius }\n\t\t};\n\t}\n\n\tmake_paths() {}\n\tmake_path() {}\n}\n","import AxisChart from './AxisChart';\n// import { ChartComponent } from '../objects/ChartComponents';\nimport { makeSVGGroup, makePath, makeGradient } from '../utils/draw';\nimport { equilizeNoOfElements } from '../utils/draw-utils';\n\nexport default class LineChart extends AxisChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\tthis.type = 'line';\n\n\t\tif(Object.getPrototypeOf(this) !== LineChart.prototype) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.config.xAxisMode = args.xAxisMode || 'span';\n\t\tthis.config.yAxisMode = args.yAxisMode || 'span';\n\n\t\tthis.config.dotRadius = args.dotRadius || 4;\n\n\t\tthis.config.heatline = args.heatline || 0;\n\t\tthis.config.regionFill = args.regionFill || 0;\n\t\tthis.config.showDots = args.showDots || 1;\n\t}\n\n\tconfigUnits() {\n\t\tthis.unitArgs = {\n\t\t\ttype: 'dot',\n\t\t\targs: { radius: this.config.dotRadius }\n\t\t};\n\t}\n\n\t// temp commented\n\tsetUnitWidthAndXOffset() {\n\t\tthis.state.unitWidth = this.width/(this.state.datasetLength - 1);\n\t\tthis.state.xOffset = 0;\n\t}\n\n}\n","import AxisChart from './AxisChart';\nimport { Y_AXIS_MARGIN } from '../utils/margins';\n// import { ChartComponent } from '../objects/ChartComponents';\nimport { floatTwo } from '../utils/helpers';\n\nexport default class MultiAxisChart extends AxisChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\t// this.unitType = args.unitType || 'line';\n\t\t// this.setup();\n\t}\n\n\tpreSetup() {\n\t\tthis.type = 'multiaxis';\n\t}\n\n\tsetHorizontalMargin() {\n\t\tlet noOfLeftAxes = this.data.datasets.filter(d => d.axisPosition === 'left').length;\n\t\tthis.translateXLeft = (noOfLeftAxes) * Y_AXIS_MARGIN || Y_AXIS_MARGIN;\n\t\tthis.translateXRight = (this.data.datasets.length - noOfLeftAxes) * Y_AXIS_MARGIN || Y_AXIS_MARGIN;\n\t}\n\n\tprepareYAxis() { }\n\n\tprepareData(data) {\n\t\tsuper.prepareData(data);\n\t\tlet sets = this.state.datasets;\n\t\t// let axesLeft = sets.filter(d => d.axisPosition === 'left');\n\t\t// let axesRight = sets.filter(d => d.axisPosition === 'right');\n\t\t// let axesNone = sets.filter(d => !d.axisPosition ||\n\t\t// \t!['left', 'right'].includes(d.axisPosition));\n\n\t\tlet leftCount = 0, rightCount = 0;\n\n\t\tsets.forEach((d, i) => {\n\t\t\td.yAxis = {\n\t\t\t\tposition: d.axisPosition,\n\t\t\t\tindex: d.axisPosition === 'left' ? leftCount++ : rightCount++\n\t\t\t};\n\t\t});\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.config.xAxisMode = args.xAxisMode || 'tick';\n\t\tthis.config.yAxisMode = args.yAxisMode || 'span';\n\t}\n\n\t// setUnitWidthAndXOffset() {\n\t// \tthis.state.unitWidth = this.width/(this.state.datasetLength);\n\t// \tthis.state.xOffset = this.state.unitWidth/2;\n\t// }\n\n\tconfigUnits() {\n\t\tthis.unitArgs = {\n\t\t\ttype: 'bar',\n\t\t\targs: {\n\t\t\t\tspaceWidth: this.state.unitWidth/2,\n\t\t\t}\n\t\t};\n\t}\n\n\tsetYAxis() {\n\t\tthis.state.datasets.map(d => {\n\t\t\tthis.calcYAxisParameters(d.yAxis, d.values, this.unitType === 'line');\n\t\t});\n\t}\n\n\tcalcYUnits() {\n\t\tthis.state.datasets.map(d => {\n\t\t\td.positions = d.values.map(val => floatTwo(d.yAxis.zeroLine - val * d.yAxis.scaleMultiplier));\n\t\t});\n\t}\n\n\trenderConstants() {\n\t\tthis.state.datasets.map(d => {\n\t\t\tlet guidePos = d.yAxis.position === 'left'\n\t\t\t\t? -1 * d.yAxis.index * Y_AXIS_MARGIN\n\t\t\t\t: this.width + d.yAxis.index * Y_AXIS_MARGIN;\n\t\t\tthis.renderer.xLine(guidePos, '', {\n\t\t\t\tpos:'top',\n\t\t\t\tmode: 'span',\n\t\t\t\tstroke: this.colors[i],\n\t\t\t\tclassName: 'y-axis-guide'\n\t\t\t})\n\t\t});\n\t}\n\n\tgetYAxesComponents() {\n\t\treturn this.data.datasets.map((e, i) => {\n\t\t\treturn new ChartComponent({\n\t\t\t\tlayerClass: 'y axis y-axis-' + i,\n\t\t\t\tmake: () => {\n\t\t\t\t\tlet yAxis = this.state.datasets[i].yAxis;\n\t\t\t\t\tthis.renderer.setZeroline(yAxis.zeroline);\n\t\t\t\t\tlet options = {\n\t\t\t\t\t\tpos: yAxis.position,\n\t\t\t\t\t\tmode: 'tick',\n\t\t\t\t\t\toffset: yAxis.index * Y_AXIS_MARGIN,\n\t\t\t\t\t\tstroke: this.colors[i]\n\t\t\t\t\t};\n\n\t\t\t\t\treturn yAxis.positions.map((position, j) =>\n\t\t\t\t\t\tthis.renderer.yLine(position, yAxis.labels[j], options)\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tanimate: () => {}\n\t\t\t});\n\t\t});\n\t}\n\n\t// TODO remove renderer zeroline from above and below\n\tgetChartComponents() {\n\t\treturn this.data.datasets.map((d, index) => {\n\t\t\treturn new ChartComponent({\n\t\t\t\tlayerClass: 'dataset-units dataset-' + index,\n\t\t\t\tmake: () => {\n\t\t\t\t\tlet d = this.state.datasets[index];\n\t\t\t\t\tlet unitType = this.unitArgs;\n\n\t\t\t\t\t// the only difference, should be tied to datasets or default\n\t\t\t\t\tthis.renderer.setZeroline(d.yAxis.zeroLine);\n\n\t\t\t\t\treturn d.positions.map((y, j) => {\n\t\t\t\t\t\treturn this.renderer[unitType.type](\n\t\t\t\t\t\t\tthis.state.xAxisPositions[j],\n\t\t\t\t\t\t\ty,\n\t\t\t\t\t\t\tunitType.args,\n\t\t\t\t\t\t\tthis.colors[index],\n\t\t\t\t\t\t\tj,\n\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\tthis.state.datasetLength\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tanimate: (svgUnits) => {\n\t\t\t\t\tlet d = this.state.datasets[index];\n\t\t\t\t\tlet unitType = this.unitArgs.type;\n\n\t\t\t\t\t// have been updated in axis render;\n\t\t\t\t\tlet newX = this.state.xAxisPositions;\n\t\t\t\t\tlet newY = this.state.datasets[index].positions;\n\n\t\t\t\t\tlet lastUnit = svgUnits[svgUnits.length - 1];\n\t\t\t\t\tlet parentNode = lastUnit.parentNode;\n\n\t\t\t\t\tif(this.oldState.xExtra > 0) {\n\t\t\t\t\t\tfor(var i = 0; i<this.oldState.xExtra; i++) {\n\t\t\t\t\t\t\tlet unit = lastUnit.cloneNode(true);\n\t\t\t\t\t\t\tparentNode.appendChild(unit);\n\t\t\t\t\t\t\tsvgUnits.push(unit);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.renderer.setZeroline(d.yAxis.zeroLine);\n\n\t\t\t\t\tsvgUnits.map((unit, i) => {\n\t\t\t\t\t\tif(newX[i] === undefined || newY[i] === undefined) return;\n\t\t\t\t\t\tthis.elementsToAnimate.push(this.renderer['animate' + unitType](\n\t\t\t\t\t\t\tunit, // unit, with info to replace where it came from in the data\n\t\t\t\t\t\t\tnewX[i],\n\t\t\t\t\t\t\tnewY[i],\n\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\tthis.state.noOfDatasets\n\t\t\t\t\t\t));\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { $, getOffset } from '../utils/dom';\n\nexport default class PercentageChart extends BaseChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\tthis.type = 'percentage';\n\n\t\tthis.max_slices = 10;\n\t\tthis.max_legend_points = 6;\n\n\t\tthis.setup();\n\t}\n\n\tmakeChartArea() {\n\t\tthis.chartWrapper.className += ' ' + 'graph-focus-margin';\n\t\tthis.chartWrapper.style.marginTop = '45px';\n\n\t\tthis.statsWrapper.className += ' ' + 'graph-focus-margin';\n\t\tthis.statsWrapper.style.marginBottom = '30px';\n\t\tthis.statsWrapper.style.paddingTop = '0px';\n\n\t\tthis.chartDiv = $.create('div', {\n\t\t\tclassName: 'div',\n\t\t\tinside: this.chartWrapper\n\t\t});\n\n\t\tthis.chart = $.create('div', {\n\t\t\tclassName: 'progress-chart',\n\t\t\tinside: this.chartDiv\n\t\t});\n\t}\n\n\tsetupLayers() {\n\t\tthis.percentageBar = $.create('div', {\n\t\t\tclassName: 'progress',\n\t\t\tinside: this.chart\n\t\t});\n\t}\n\n\tsetup_values() {\n\t\tthis.slice_totals = [];\n\t\tlet all_totals = this.data.labels.map((d, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, d];\n\t\t}).filter(d => { return d[0] > 0; }); // keep only positive results\n\n\t\tlet totals = all_totals;\n\n\t\tif(all_totals.length > this.max_slices) {\n\t\t\tall_totals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = all_totals.slice(0, this.max_slices-1);\n\t\t\tlet others = all_totals.slice(this.max_slices-1);\n\n\t\t\tlet sum_of_others = 0;\n\t\t\tothers.map(d => {sum_of_others += d[0];});\n\n\t\t\ttotals.push([sum_of_others, 'Rest']);\n\n\t\t\tthis.colors[this.max_slices-1] = 'grey';\n\t\t}\n\n\t\tthis.labels = [];\n\t\ttotals.map(d => {\n\t\t\tthis.slice_totals.push(d[0]);\n\t\t\tthis.labels.push(d[1]);\n\t\t});\n\n\t\tthis.legend_totals = this.slice_totals.slice(0, this.max_legend_points);\n\t}\n\n\trenderComponents() {\n\t\tthis.grand_total = this.slice_totals.reduce((a, b) => a + b, 0);\n\t\tthis.slices = [];\n\t\tthis.slice_totals.map((total, i) => {\n\t\t\tlet slice = $.create('div', {\n\t\t\t\tclassName: `progress-bar`,\n\t\t\t\tinside: this.percentageBar,\n\t\t\t\tstyles: {\n\t\t\t\t\tbackground: this.colors[i],\n\t\t\t\t\twidth: total*100/this.grand_total + \"%\"\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.slices.push(slice);\n\t\t});\n\t}\n\n\tcalc() {}\n\n\tbindTooltip() {\n\t\tthis.slices.map((slice, i) => {\n\t\t\tslice.addEventListener('mouseenter', () => {\n\t\t\t\tlet g_off = getOffset(this.chartWrapper), p_off = getOffset(slice);\n\n\t\t\t\tlet x = p_off.left - g_off.left + slice.offsetWidth/2;\n\t\t\t\tlet y = p_off.top - g_off.top - 6;\n\t\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length>0\n\t\t\t\t\t? this.formatted_labels[i] : this.labels[i]) + ': ';\n\t\t\t\tlet percent = (this.slice_totals[i]*100/this.grand_total).toFixed(1);\n\n\t\t\t\tthis.tip.set_values(x, y, title, percent + \"%\");\n\t\t\t\tthis.tip.show_tip();\n\t\t\t});\n\t\t});\n\t}\n\n\trenderLegend() {\n\t\tlet x_values = this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t? this.formatted_labels : this.labels;\n\t\tthis.legend_totals.map((d, i) => {\n\t\t\tif(d) {\n\t\t\t\tlet stats = $.create('div', {\n\t\t\t\t\tclassName: 'stats',\n\t\t\t\t\tinside: this.statsWrapper\n\t\t\t\t});\n\t\t\t\tstats.innerHTML = `<span class=\"indicator\">\n\t\t\t\t\t<i style=\"background: ${this.colors[i]}\"></i>\n\t\t\t\t\t<span class=\"text-muted\">${x_values[i]}:</span>\n\t\t\t\t\t${d}\n\t\t\t\t</span>`;\n\t\t\t}\n\t\t});\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { $, getOffset } from '../utils/dom';\nimport { makePath } from '../utils/draw';\nimport { lightenDarkenColor } from '../utils/colors';\nimport { runSMILAnimation, transform } from '../utils/animation';\nconst ANGLE_RATIO = Math.PI / 180;\nconst FULL_ANGLE = 360;\n\nexport default class PieChart extends BaseChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\tthis.type = 'pie';\n\t\tthis.elements_to_animate = null;\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.max_slices = 10;\n\t\tthis.max_legend_points = 6;\n\t\tthis.isAnimate = false;\n\t\tthis.startAngle = args.startAngle || 0;\n\t\tthis.clockWise = args.clockWise || false;\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\t\tthis.setup();\n\t}\n\tsetup_values() {\n\t\tthis.centerX = this.width / 2;\n\t\tthis.centerY = this.height / 2;\n\t\tthis.radius = (this.height > this.width ? this.centerX : this.centerY);\n\t\tthis.slice_totals = [];\n\t\tlet all_totals = this.data.labels.map((d, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, d];\n\t\t}).filter(d => { return d[0] > 0; }); // keep only positive results\n\n\t\tlet totals = all_totals;\n\n\t\tif(all_totals.length > this.max_slices) {\n\t\t\tall_totals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = all_totals.slice(0, this.max_slices-1);\n\t\t\tlet others = all_totals.slice(this.max_slices-1);\n\n\t\t\tlet sum_of_others = 0;\n\t\t\tothers.map(d => {sum_of_others += d[0];});\n\n\t\t\ttotals.push([sum_of_others, 'Rest']);\n\n\t\t\tthis.colors[this.max_slices-1] = 'grey';\n\t\t}\n\n\t\tthis.labels = [];\n\t\ttotals.map(d => {\n\t\t\tthis.slice_totals.push(d[0]);\n\t\t\tthis.labels.push(d[1]);\n\t\t});\n\n\t\tthis.legend_totals = this.slice_totals.slice(0, this.max_legend_points);\n\t}\n\n\tstatic getPositionByAngle(angle,radius){\n\t\treturn {\n\t\t\tx:Math.sin(angle * ANGLE_RATIO) * radius,\n\t\t\ty:Math.cos(angle * ANGLE_RATIO) * radius,\n\t\t};\n\t}\n\tmakeArcPath(startPosition,endPosition){\n\t\tconst{centerX,centerY,radius,clockWise} = this;\n\t\treturn `M${centerX} ${centerY} L${centerX+startPosition.x} ${centerY+startPosition.y} A ${radius} ${radius} 0 0 ${clockWise ? 1 : 0} ${centerX+endPosition.x} ${centerY+endPosition.y} z`;\n\t}\n\trenderComponents(init){\n\t\tconst{radius,clockWise} = this;\n\t\tthis.grand_total = this.slice_totals.reduce((a, b) => a + b, 0);\n\t\tconst prevSlicesProperties = this.slicesProperties || [];\n\t\tthis.slices = [];\n\t\tthis.elements_to_animate = [];\n\t\tthis.slicesProperties = [];\n\t\tlet curAngle = 180 - this.startAngle;\n\t\tthis.slice_totals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / this.grand_total) * FULL_ANGLE;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = PieChart.getPositionByAngle(startAngle,radius);\n\t\t\tconst endPosition = PieChart.getPositionByAngle(endAngle,radius);\n\t\t\tconst prevProperty = init && prevSlicesProperties[i];\n\t\t\tlet curStart,curEnd;\n\t\t\tif(init){\n\t\t\t\tcurStart = prevProperty?prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty? prevProperty.endPosition : startPosition;\n\t\t\t}else{\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath = this.makeArcPath(curStart,curEnd);\n\t\t\tlet slice = makePath(curPath, 'pie-path', 'none', this.colors[i]);\n\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\tthis.drawArea.appendChild(slice);\n\n\t\t\tthis.slices.push(slice);\n\t\t\tthis.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: this.grand_total,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle:diffAngle\n\t\t\t});\n\t\t\tif(init){\n\t\t\t\tthis.elements_to_animate.push([{unit: slice, array: this.slices, index: this.slices.length - 1},\n\t\t\t\t\t{d:this.makeArcPath(startPosition,endPosition)},\n\t\t\t\t\t650, \"easein\",null,{\n\t\t\t\t\t\td:curPath\n\t\t\t\t\t}]);\n\t\t\t}\n\n\t\t});\n\t\tif(init){\n\t\t\trunSMILAnimation(this.chartWrapper, this.svg, this.elements_to_animate);\n\t\t}\n\t}\n\n\tcalTranslateByAngle(property){\n\t\tconst{radius,hoverRadio} = this;\n\t\tconst position = PieChart.getPositionByAngle(property.startAngle+(property.angle / 2),radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\thoverSlice(path,i,flag,e){\n\t\tif(!path) return;\n\t\tconst color = this.colors[i];\n\t\tif(flag){\n\t\t\ttransform(path,this.calTranslateByAngle(this.slicesProperties[i]));\n\t\t\tpath.style.fill = lightenDarkenColor(color,50);\n\t\t\tlet g_off = getOffset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length>0\n\t\t\t\t? this.formatted_labels[i] : this.labels[i]) + ': ';\n\t\t\tlet percent = (this.slice_totals[i]*100/this.grand_total).toFixed(1);\n\t\t\tthis.tip.set_values(x, y, title, percent + \"%\");\n\t\t\tthis.tip.show_tip();\n\t\t}else{\n\t\t\ttransform(path,'translate3d(0,0,0)');\n\t\t\tthis.tip.hide_tip();\n\t\t\tpath.style.fill = color;\n\t\t}\n\t}\n\n\tmouseMove(e){\n\t\tconst target = e.target;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevAcitve = this.curActiveSlice;\n\t\tfor(let i = 0; i < this.slices.length; i++){\n\t\t\tif(target === this.slices[i]){\n\t\t\t\tthis.hoverSlice(prevAcitve,prevIndex,false);\n\t\t\t\tthis.curActiveSlice = target;\n\t\t\t\tthis.curActiveSliceIndex = i;\n\t\t\t\tthis.hoverSlice(target,i,true,e);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tmouseLeave(){\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\n\t}\n\tbindTooltip() {\n\t\tthis.drawArea.addEventListener('mousemove',this.mouseMove);\n\t\tthis.drawArea.addEventListener('mouseleave',this.mouseLeave);\n\t}\n\n\trenderLegend() {\n\t\tlet x_values = this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t? this.formatted_labels : this.labels;\n\t\tthis.legend_totals.map((d, i) => {\n\t\t\tconst color = this.colors[i];\n\n\t\t\tif(d) {\n\t\t\t\tlet stats = $.create('div', {\n\t\t\t\t\tclassName: 'stats',\n\t\t\t\t\tinside: this.statsWrapper\n\t\t\t\t});\n\t\t\t\tstats.innerHTML = `<span class=\"indicator\">\n\t\t\t\t\t<i style=\"background-color:${color};\"></i>\n\t\t\t\t\t<span class=\"text-muted\">${x_values[i]}:</span>\n\t\t\t\t\t${d}\n\t\t\t\t</span>`;\n\t\t\t}\n\t\t});\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { makeSVGGroup, makeHeatSquare, makeText } from '../utils/draw';\nimport { addDays, getDdMmYyyy, getWeeksBetween } from '../utils/date-utils';\nimport { calcDistribution, getMaxCheckpoint } from '../utils/intervals';\nimport { isValidColor } from '../utils/colors';\n\nexport default class Heatmap extends BaseChart {\n\tconstructor({\n\t\tstart = '',\n\t\tdomain = '',\n\t\tsubdomain = '',\n\t\tdata = {},\n\t\tdiscrete_domains = 0,\n\t\tcount_label = '',\n\t\tlegend_colors = []\n\t}) {\n\t\tsuper(arguments[0]);\n\n\t\tthis.type = 'heatmap';\n\n\t\tthis.domain = domain;\n\t\tthis.subdomain = subdomain;\n\t\tthis.data = data;\n\t\tthis.discrete_domains = discrete_domains;\n\t\tthis.count_label = count_label;\n\n\t\tlet today = new Date();\n\t\tthis.start = start || addDays(today, 365);\n\n\t\tlegend_colors = legend_colors.slice(0, 5);\n\t\tthis.legend_colors = this.validate_colors(legend_colors)\n\t\t\t? legend_colors\n\t\t\t: ['#ebedf0', '#c6e48b', '#7bc96f', '#239a3b', '#196127'];\n\n\t\t// Fixed 5-color theme,\n\t\t// More colors are difficult to parse visually\n\t\tthis.distribution_size = 5;\n\n\t\tthis.translateX = 0;\n\t\t// this.setup();\n\t}\n\n\tvalidate_colors(colors) {\n\t\tif(colors.length < 5) return 0;\n\n\t\tlet valid = 1;\n\t\tcolors.forEach(function(string) {\n\t\t\tif(!isValidColor(string)) {\n\t\t\t\tvalid = 0;\n\t\t\t\tconsole.warn('\"' + string + '\" is not a valid color.');\n\t\t\t}\n\t\t}, this);\n\n\t\treturn valid;\n\t}\n\n\tsetupConstants() {\n\t\tthis.today = new Date();\n\n\t\tif(!this.start) {\n\t\t\tthis.start = new Date();\n\t\t\tthis.start.setFullYear( this.start.getFullYear() - 1 );\n\t\t}\n\t\tthis.first_week_start = new Date(this.start.toDateString());\n\t\tthis.last_week_start = new Date(this.today.toDateString());\n\t\tif(this.first_week_start.getDay() !== 7) {\n\t\t\taddDays(this.first_week_start, (-1) * this.first_week_start.getDay());\n\t\t}\n\t\tif(this.last_week_start.getDay() !== 7) {\n\t\t\taddDays(this.last_week_start, (-1) * this.last_week_start.getDay());\n\t\t}\n\t\tthis.no_of_cols = getWeeksBetween(this.first_week_start + '', this.last_week_start + '') + 1;\n\t}\n\n\tcalcWidth() {\n\t\tthis.baseWidth = (this.no_of_cols + 3) * 12 ;\n\n\t\tif(this.discrete_domains) {\n\t\t\tthis.baseWidth += (12 * 12);\n\t\t}\n\t}\n\n\tsetupLayers() {\n\t\tthis.domain_label_group = this.makeLayer(\n\t\t\t'domain-label-group chart-label');\n\n\t\tthis.data_groups = this.makeLayer(\n\t\t\t'data-groups',\n\t\t\t`translate(0, 20)`\n\t\t);\n\t}\n\n\tsetup_values() {\n\t\tthis.domain_label_group.textContent = '';\n\t\tthis.data_groups.textContent = '';\n\n\t\tlet data_values = Object.keys(this.data).map(key => this.data[key]);\n\t\tthis.distribution = calcDistribution(data_values, this.distribution_size);\n\n\t\tthis.month_names = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n\t\t\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n\t\t];\n\n\t\tthis.render_all_weeks_and_store_x_values(this.no_of_cols);\n\t}\n\n\trender_all_weeks_and_store_x_values(no_of_weeks) {\n\t\tlet current_week_sunday = new Date(this.first_week_start);\n\t\tthis.week_col = 0;\n\t\tthis.current_month = current_week_sunday.getMonth();\n\n\t\tthis.months = [this.current_month + ''];\n\t\tthis.month_weeks = {}, this.month_start_points = [];\n\t\tthis.month_weeks[this.current_month] = 0;\n\t\tthis.month_start_points.push(13);\n\n\t\tfor(var i = 0; i < no_of_weeks; i++) {\n\t\t\tlet data_group, month_change = 0;\n\t\t\tlet day = new Date(current_week_sunday);\n\n\t\t\t[data_group, month_change] = this.get_week_squares_group(day, this.week_col);\n\t\t\tthis.data_groups.appendChild(data_group);\n\t\t\tthis.week_col += 1 + parseInt(this.discrete_domains && month_change);\n\t\t\tthis.month_weeks[this.current_month]++;\n\t\t\tif(month_change) {\n\t\t\t\tthis.current_month = (this.current_month + 1) % 12;\n\t\t\t\tthis.months.push(this.current_month + '');\n\t\t\t\tthis.month_weeks[this.current_month] = 1;\n\t\t\t}\n\t\t\taddDays(current_week_sunday, 7);\n\t\t}\n\t\tthis.render_month_labels();\n\t}\n\n\tget_week_squares_group(current_date, index) {\n\t\tconst no_of_weekdays = 7;\n\t\tconst square_side = 10;\n\t\tconst cell_padding = 2;\n\t\tconst step = 1;\n\t\tconst today_time = this.today.getTime();\n\n\t\tlet month_change = 0;\n\t\tlet week_col_change = 0;\n\n\t\tlet data_group = makeSVGGroup(this.data_groups, 'data-group');\n\n\t\tfor(var y = 0, i = 0; i < no_of_weekdays; i += step, y += (square_side + cell_padding)) {\n\t\t\tlet data_value = 0;\n\t\t\tlet color_index = 0;\n\n\t\t\tlet current_timestamp = current_date.getTime()/1000;\n\t\t\tlet timestamp = Math.floor(current_timestamp - (current_timestamp % 86400)).toFixed(1);\n\n\t\t\tif(this.data[timestamp]) {\n\t\t\t\tdata_value = this.data[timestamp];\n\t\t\t}\n\n\t\t\tif(this.data[Math.round(timestamp)]) {\n\t\t\t\tdata_value = this.data[Math.round(timestamp)];\n\t\t\t}\n\n\t\t\tif(data_value) {\n\t\t\t\tcolor_index = getMaxCheckpoint(data_value, this.distribution);\n\t\t\t}\n\n\t\t\tlet x = 13 + (index + week_col_change) * 12;\n\n\t\t\tlet dataAttr = {\n\t\t\t\t'data-date': getDdMmYyyy(current_date),\n\t\t\t\t'data-value': data_value,\n\t\t\t\t'data-day': current_date.getDay()\n\t\t\t};\n\t\t\tlet heatSquare = makeHeatSquare('day', x, y, square_side,\n\t\t\t\tthis.legend_colors[color_index], dataAttr);\n\n\t\t\tdata_group.appendChild(heatSquare);\n\n\t\t\tlet next_date = new Date(current_date);\n\t\t\taddDays(next_date, 1);\n\t\t\tif(next_date.getTime() > today_time) break;\n\n\n\t\t\tif(next_date.getMonth() - current_date.getMonth()) {\n\t\t\t\tmonth_change = 1;\n\t\t\t\tif(this.discrete_domains) {\n\t\t\t\t\tweek_col_change = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.month_start_points.push(13 + (index + week_col_change) * 12);\n\t\t\t}\n\t\t\tcurrent_date = next_date;\n\t\t}\n\n\t\treturn [data_group, month_change];\n\t}\n\n\trender_month_labels() {\n\t\t// this.first_month_label = 1;\n\t\t// if (this.first_week_start.getDate() > 8) {\n\t\t// \tthis.first_month_label = 0;\n\t\t// }\n\t\t// this.last_month_label = 1;\n\n\t\t// let first_month = this.months.shift();\n\t\t// let first_month_start = this.month_start_points.shift();\n\t\t// render first month if\n\n\t\t// let last_month = this.months.pop();\n\t\t// let last_month_start = this.month_start_points.pop();\n\t\t// render last month if\n\n\t\tthis.months.shift();\n\t\tthis.month_start_points.shift();\n\t\tthis.months.pop();\n\t\tthis.month_start_points.pop();\n\n\t\tthis.month_start_points.map((start, i) => {\n\t\t\tlet month_name =  this.month_names[this.months[i]].substring(0, 3);\n\t\t\tlet text = makeText('y-value-text', start+12, 10, month_name);\n\t\t\tthis.domain_label_group.appendChild(text);\n\t\t});\n\t}\n\n\trenderComponents() {\n\t\tArray.prototype.slice.call(\n\t\t\tthis.container.querySelectorAll('.graph-stats-container, .sub-title, .title')\n\t\t).map(d => {\n\t\t\td.style.display = 'None';\n\t\t});\n\t\tthis.chartWrapper.style.marginTop = '0px';\n\t\tthis.chartWrapper.style.paddingTop = '0px';\n\t}\n\n\tbindTooltip() {\n\t\tArray.prototype.slice.call(\n\t\t\tdocument.querySelectorAll(\".data-group .day\")\n\t\t).map(el => {\n\t\t\tel.addEventListener('mouseenter', (e) => {\n\t\t\t\tlet count = e.target.getAttribute('data-value');\n\t\t\t\tlet date_parts = e.target.getAttribute('data-date').split('-');\n\n\t\t\t\tlet month = this.month_names[parseInt(date_parts[1])-1].substring(0, 3);\n\n\t\t\t\tlet g_off = this.chartWrapper.getBoundingClientRect(), p_off = e.target.getBoundingClientRect();\n\n\t\t\t\tlet width = parseInt(e.target.getAttribute('width'));\n\t\t\t\tlet x = p_off.left - g_off.left + (width+2)/2;\n\t\t\t\tlet y = p_off.top - g_off.top - (width+2)/2;\n\t\t\t\tlet value = count + ' ' + this.count_label;\n\t\t\t\tlet name = ' on ' + month + ' ' + date_parts[0] + ', ' + date_parts[2];\n\n\t\t\t\tthis.tip.set_values(x, y, name, value, [], 1);\n\t\t\t\tthis.tip.show_tip();\n\t\t\t});\n\t\t});\n\t}\n\n\tupdate(data) {\n\t\tthis.data = data;\n\t\tthis.setup_values();\n\t\tthis.bindTooltip();\n\t}\n}\n"],"names":["expr","con","document","querySelector","getOffset","element","rect","getBoundingClientRect","top","documentElement","scrollTop","body","left","scrollLeft","isElementInViewport","el","bottom","window","innerHeight","clientHeight","right","innerWidth","clientWidth","getElementContentWidth","styles","getComputedStyle","padding","parseFloat","paddingLeft","paddingRight","floatTwo","d","toFixed","fillArray","array","count","start","length","fillerArray","Array","Math","abs","fill","concat","getStringWidth","string","charWidth","getBarHeightAndYAttr","yTop","zeroLine","height","y","totalHeight","MIN_BAR_PERCENT_HEIGHT","equilizeNoOfElements","array1","array2","extra_count","translate","unit","oldCoord","newCoord","duration","transform","join","STD_EASING","translateVertLine","xLine","newX","oldX","MARKER_LINE_ANIM_DUR","translateHoriLine","yLine","newY","oldY","$","createSVG","tag","o","createElementNS","i","val","appendChild","ref","parentNode","insertBefore","keys","map","style","prop","setAttribute","renderVerticalGradient","svgDefElem","gradientId","setGradientStop","gradElem","offset","color","opacity","makeSVGContainer","parent","className","width","makeSVGDefs","svgContainer","makeSVGGroup","wrapInSVGGroup","elements","g","forEach","e","makePath","pathStr","makeGradient","lighter","gradientDef","opacities","makeHeatSquare","x","size","data","args","key","makeText","content","FONT_SIZE","makeVertLine","label","y1","y2","options","stroke","BASE_LINE_COLOR","l","text","LABEL_MARGIN","line","makeHoriLine","x1","x2","lineType","pos","mode","AXIS_TICK_LENGTH","limitColor","r","lightenDarkenColor","amt","col","getColor","usePound","slice","num","parseInt","b","toString","isValidColor","test","getDifferentChart","type","current_type","ALL_CHART_TYPES","includes","error","COMPATIBLE_CHARTS","useColor","COLOR_COMPATIBLE_CHARTS","Chart","title","colors","undefined","animateSVGElement","props","dur","easingType","oldValues","animElement","cloneNode","newElement","attributeName","animateElement","currentValue","getAttribute","value","animAttr","EASING","webkitTransform","msTransform","mozTransform","oTransform","animateSVG","newElements","animElements","push","replaceChild","animSvg","runSMILAnimation","svgElement","elementsToAnimate","animSvgElement","removeChild","REPLACE_ALL_NEW_DUR","getComponent","name","constants","initData","getData","config","componentConfigs","assign","ChartComponent","getPaths","yList","xList","heatline","regionFill","pointsStr","path","gradient_id","this","svgDefs","components","gradient_id_region","state","yAxis","normalize","isNaN","mantissa","exponent","sig","isFinite","exp","floor","log10","pow","getChartRangeIntervals","max","min","upperBound","ceil","lowerBound","range","noOfParts","partSize","intervals","getChartIntervals","maxValue","minValue","normalMaxValue","normalMinValue","calcChartIntervals","values","getPositiveFirstIntervals","absMinValue","intervalSize","unshift","withMinimum","pseudoMaxValue","pseudoMinValue","reverse","getZeroIndex","yPts","interval","getIntervalSize","indexOf","getRealIntervals","noOfIntervals","asc","part","orderedArray","getValueRange","calcDistribution","distributionSize","dataMaxValue","distributionStep","distribution","checkpoint","getMaxCheckpoint","filter","treatAsUtc","dateStr","result","Date","setMinutes","getMinutes","getTimezoneOffset","getDdMmYyyy","date","dd","getDate","mm","getMonth","getFullYear","getWeeksBetween","startDateStr","endDateStr","getDaysBetween","addDays","numberOfDays","setDate","getChartByType","chartType","AxisChart","chartTypes","create","createElement","SvgTip","title_name","title_value","list_values","title_value_first","setup","make_tooltip","calc_position","container","hide_tip","data_point_list","addEventListener","innerHTML","set","_this2","li","offsetWidth","offsetHeight","max_left","pointer","pointer_offset","refresh","AxisChartRenderer","refreshState","totalWidth","unitWidth","xAxisMode","yAxisMode","labelSvg","upperBorder","lowerBorder","region","bar","index","noOfDatasets","avgUnitWidth","dot","cx","cy","paths","pathComponents","animPath","regStartPt","regEndPt","animRegion","PRESET_COLOR_MAP","DEFAULT_COLORS","BaseChart","subtitle","isNavigable","showLegend","rawChartArgs","arguments","argHeight","currentIndex","configure","setColors","list","labels","datasets","baseHeight","translateY","setHorizontalMargin","translateXLeft","translateXRight","parseData","checkData","animate","getFirstUpdateData","firstUpdateData","validate","_setup","bindWindowEvents","setupConstants","setMargins","makeContainer","makeTooltip","calcWidth","makeChartArea","initComponents","setupComponents","draw","_this","chartWrapper","statsWrapper","tip","bindTooltip","init","c","make","renderLegend","setupNavigation","update","baseWidth","prepareData","calc","refreshRenderer","render","renderer","refreshComponents","apply","svg","drawArea","makeOverlay","bindOverlay","_this3","event","keyCode","onLeftArrow","onRightArrow","onUpArrow","onDownArrow","onEnterKey","dataset","dataPoint","layerClass","layerTransform","preMake","makeElements","postMake","animateElements","store","layer","oldData","textContent","positions","position","newData","newPos","newLabels","oldPos","oldLabels","_this4","AxisChartController","meta","setupArgs","consts","Object","BarChartController","radius","m","barsWidth","spaceRatio","stacked","minHeight","LineChartController","dotSize","isSeries","valuesOverPoints","formatTooltipY","formatTooltipX","barOptions","lineOptions","setupUnitRenderer","preSetup","unitRenderers","prepareYAxis","s","xAxisLabels","datasetLength","zeroArray","vals","yMarkers","yRegions","calcXPositions","datasetsLabels","setYAxis","calcYUnits","calcYMaximums","calcYRegions","configUnits","calcYAxisParameters","getAllYValues","setUnitWidthAndXOffset","xAxisPositions","xOffset","xUnitPositions","dataValues","scaleMultiplier","intervalHeight","cumulativePositions","cumulativeYs","yExtremes","j","end","cumulative","bind","comp","xLines","oldState","xExtra","lastLine","dataUnitsComponents","_this5","getPathComponent","getDataUnitComponent","unitRenderer","_this6","svgUnits","lastUnit","_this8","newPointsList","animatepath","_this9","yMarker","marker","_this10","yRegion","_this11","refreshMeta","_this12","relX","pageX","pageY","mapTooltipXPosition","titles","_this13","formatY","xVal","set_values","show_tip","current_index","data_point","data_key","fire","getDataPoint","datasetValues","splice","ScatterChart","dotRadius","unit_args","getPrototypeOf","LineChart","prototype","showDots","unitArgs","MultiAxisChart","noOfLeftAxes","axisPosition","leftCount","rightCount","unitType","guidePos","setZeroline","zeroline","PercentageChart","max_slices","max_legend_points","marginTop","marginBottom","paddingTop","chartDiv","chart","percentageBar","slice_totals","all_totals","total","totals","sort","a","sum_of_others","legend_totals","grand_total","reduce","slices","g_off","p_off","formatted_labels","percent","x_values","ANGLE_RATIO","PI","PieChart","elements_to_animate","hoverRadio","isAnimate","startAngle","clockWise","mouseMove","mouseLeave","centerX","centerY","startPosition","endPosition","prevSlicesProperties","slicesProperties","curAngle","originDiffAngle","diffAngle","endAngle","getPositionByAngle","prevProperty","curStart","curEnd","curPath","makeArcPath","transition","property","angle","flag","calTranslateByAngle","target","prevIndex","curActiveSliceIndex","prevAcitve","curActiveSlice","hoverSlice","sin","cos","domain","subdomain","discrete_domains","count_label","legend_colors","today","validate_colors","distribution_size","translateX","valid","warn","setFullYear","first_week_start","toDateString","last_week_start","getDay","no_of_cols","domain_label_group","makeLayer","data_groups","data_values","month_names","render_all_weeks_and_store_x_values","no_of_weeks","current_week_sunday","week_col","current_month","months","month_weeks","month_start_points","data_group","month_change","day","get_week_squares_group","render_month_labels","current_date","today_time","getTime","week_col_change","square_side","data_value","color_index","current_timestamp","timestamp","round","dataAttr","heatSquare","next_date","shift","pop","substring","call","querySelectorAll","display","date_parts","split","month","setup_values","Heatmap"],"mappings":"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"}