{"version":3,"file":"frappe-charts.min.iife.js","sources":["../src/js/utils/dom.js","../src/js/utils/helpers.js","../src/js/utils/draw-utils.js","../src/js/utils/animate.js","../src/js/utils/draw.js","../src/js/utils/colors.js","../src/js/config.js","../src/js/utils/animation.js","../src/js/utils/date-utils.js","../src/js/utils/intervals.js","../src/js/charts/axis-chart-utils.js","../src/js/objects/ChartComponents.js","../src/js/chart.js","../src/js/objects/SvgTip.js","../src/js/utils/constants.js","../src/js/charts/BaseChart.js","../src/js/charts/PercentageChart.js","../src/js/charts/PieChart.js","../src/js/charts/Heatmap.js","../src/js/charts/AxisChart.js"],"sourcesContent":["export function $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function findNodeIndex(node)\n{\n\tvar i = 0;\n\twhile (node.previousSibling) {\n\t\tnode = node.previousSibling;\n\t\ti++;\n\t}\n\treturn i;\n}\n\n$.create = (tag, o) => {\n\tvar element = document.createElement(tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (i in element ) {\n\t\t\telement[i] = val;\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(i, val);\n\t\t}\n\t}\n\n\treturn element;\n};\n\nexport function getOffset(element) {\n\tlet rect = element.getBoundingClientRect();\n\treturn {\n\t\t// https://stackoverflow.com/a/7436602/6495043\n\t\t// rect.top varies with scroll, so we add whatever has been\n\t\t// scrolled to it to get absolute distance from actual page top\n\t\ttop: rect.top + (document.documentElement.scrollTop || document.body.scrollTop),\n\t\tleft: rect.left + (document.documentElement.scrollLeft || document.body.scrollLeft)\n\t};\n}\n\nexport function isElementInViewport(el) {\n\t// Although straightforward: https://stackoverflow.com/a/7557433/6495043\n\tvar rect = el.getBoundingClientRect();\n\n\treturn (\n\t\trect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\n\t);\n}\n\nexport function getElementContentWidth(element) {\n\tvar styles = window.getComputedStyle(element);\n\tvar padding = parseFloat(styles.paddingLeft) +\n\t\tparseFloat(styles.paddingRight);\n\n\treturn element.clientWidth - padding;\n}\n\nexport function bind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function (event) {\n\t\t\t\telement.addEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function unbind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function(event) {\n\t\t\t\telement.removeEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function fire(target, type, properties) {\n\tvar evt = document.createEvent(\"HTMLEvents\");\n\n\tevt.initEvent(type, true, true );\n\n\tfor (var j in properties) {\n\t\tevt[j] = properties[j];\n\t}\n\n\treturn target.dispatchEvent(evt);\n}\n","/**\n * Returns the value of a number upto 2 decimal places.\n * @param {Number} d Any number\n */\nexport function floatTwo(d) {\n\treturn parseFloat(d.toFixed(2));\n}\n\n/**\n * Returns whether or not two given arrays are equal.\n * @param {Array} arr1 First array\n * @param {Array} arr2 Second array\n */\nexport function arraysEqual(arr1, arr2) {\n\tif(arr1.length !== arr2.length) return false;\n\tlet areEqual = true;\n\tarr1.map((d, i) => {\n\t\tif(arr2[i] !== d) areEqual = false;\n\t});\n\treturn areEqual;\n}\n\n/**\n * Shuffles array in place. ES6 version\n * @param {Array} array An array containing the items.\n */\nexport function shuffle(array) {\n\t// Awesomeness: https://bost.ocks.org/mike/shuffle/\n\t// https://stackoverflow.com/a/2450976/6495043\n\t// https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array?noredirect=1&lq=1\n\n\tfor (let i = array.length - 1; i > 0; i--) {\n\t\tlet j = Math.floor(Math.random() * (i + 1));\n\t\t[array[i], array[j]] = [array[j], array[i]];\n\t}\n\n\treturn array;\n}\n\n/**\n * Fill an array with extra points\n * @param {Array} array Array\n * @param {Number} count number of filler elements\n * @param {Object} element element to fill with\n * @param {Boolean} start fill at start?\n */\nexport function fillArray(array, count, element, start=false) {\n\tif(!element) {\n\t\telement = start ? array[0] : array[array.length - 1];\n\t}\n\tlet fillerArray = new Array(Math.abs(count)).fill(element);\n\tarray = start ? fillerArray.concat(array) : array.concat(fillerArray);\n\treturn array;\n}\n\n/**\n * Returns pixel width of string.\n * @param {String} string\n * @param {Number} charWidth Width of single char in pixels\n */\nexport function getStringWidth(string, charWidth) {\n\treturn (string+\"\").length * charWidth;\n}\n\nexport function bindChange(obj, getFn, setFn) {\n\treturn new Proxy(obj, {\n\t\tset: function(target, prop, value) {\n\t\t\tsetFn();\n\t\t\treturn Reflect.set(target, prop, value);\n\t\t},\n\t\tget: function(target, prop, value) {\n\t\t\tgetFn();\n\t\t\treturn Reflect.get(target, prop);\n\t\t}\n\t});\n}\n","import { fillArray } from './helpers';\n\nexport function getBarHeightAndYAttr(yTop, zeroLine) {\n\tlet height, y;\n\tif (yTop <= zeroLine) {\n\t\theight = zeroLine - yTop;\n\t\ty = yTop;\n\t} else {\n\t\theight = yTop - zeroLine;\n\t\ty = zeroLine;\n\t}\n\n\treturn [height, y];\n}\n\nexport function equilizeNoOfElements(array1, array2,\n\textra_count=array2.length - array1.length) {\n\n\t// Doesn't work if either has zero elements.\n\tif(extra_count > 0) {\n\t\tarray1 = fillArray(array1, extra_count);\n\t} else {\n\t\tarray2 = fillArray(array2, extra_count);\n\t}\n\treturn [array1, array2];\n}\n\n// let char_width = 8;\n// let allowed_space = avgUnitWidth * 1.5;\n// let allowed_letters = allowed_space / 8;\n\n// return values.map((value, i) => {\n// \tlet space_taken = getStringWidth(value, char_width) + 2;\n// \tif(space_taken > allowed_space) {\n// \t\tif(isSeries) {\n// \t\t\t// Skip some axis lines if X axis is a series\n// \t\t\tlet skips = 1;\n// \t\t\twhile((space_taken/skips)*2 > allowed_space) {\n// \t\t\t\tskips++;\n// \t\t\t}\n// \t\t\tif(i % skips !== 0) {\n// \t\t\t\treturn;\n// \t\t\t}\n// \t\t} else {\n// \t\t\tvalue = value.slice(0, allowed_letters-3) + \" ...\";\n// \t\t}\n// \t}\n","import { getBarHeightAndYAttr } from './draw-utils';\n\nexport const UNIT_ANIM_DUR = 350;\nexport const PATH_ANIM_DUR = 350;\nexport const MARKER_LINE_ANIM_DUR = UNIT_ANIM_DUR;\nexport const REPLACE_ALL_NEW_DUR = 250;\n\nexport const STD_EASING = 'easein';\n\nexport function translate(unit, oldCoord, newCoord, duration) {\n\tlet old = typeof oldCoord === 'string' ? oldCoord : oldCoord.join(', ');\n\treturn [\n\t\tunit,\n\t\t{transform: newCoord.join(', ')},\n\t\tduration,\n\t\tSTD_EASING,\n\t\t\"translate\",\n\t\t{transform: old}\n\t];\n}\n\nexport function translateVertLine(xLine, newX, oldX) {\n\treturn translate(xLine, [oldX, 0], [newX, 0], MARKER_LINE_ANIM_DUR);\n}\n\nexport function translateHoriLine(yLine, newY, oldY) {\n\treturn translate(yLine, [0, oldY], [0, newY], MARKER_LINE_ANIM_DUR);\n}\n\nexport function animateRegion(rectGroup, newY1, newY2, oldY2) {\n\tlet newHeight = newY1 - newY2;\n\tlet rect = rectGroup.childNodes[0];\n\tlet width = rect.getAttribute(\"width\");\n\tlet rectAnim = [\n\t\trect,\n\t\t{ height: newHeight, 'stroke-dasharray': `${width}, ${newHeight}` },\n\t\tMARKER_LINE_ANIM_DUR,\n\t\tSTD_EASING\n\t]\n\n\tlet groupAnim = translate(rectGroup, [0, oldY2], [0, newY2], MARKER_LINE_ANIM_DUR);\n\treturn [rectAnim, groupAnim];\n}\n\nexport function animateBar(bar, x, yTop, width, offset=0, index=0, meta={}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\tif(bar.nodeName !== 'rect') {\n\t\tlet rect = bar.childNodes[0];\n\t\tlet rectAnim = [\n\t\t\trect,\n\t\t\t{width: width, height: height},\n\t\t\tUNIT_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t]\n\n\t\tlet oldCoordStr = bar.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(bar, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [rectAnim, groupAnim];\n\t} else {\n\t\treturn [[bar, {width: width, height: height, x: x, y: y}, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// bar.animate({height: args.newHeight, y: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animateDot(dot, x, y) {\n\tif(dot.nodeName !== 'circle') {\n\t\tlet oldCoordStr = dot.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(dot, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [groupAnim];\n\t} else {\n\t\treturn [[dot, {cx: x, cy: y}, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animatePath(paths, newXList, newYList, zeroLine) {\n\tlet pathComponents = [];\n\n\tlet pointsStr = newYList.map((y, i) => (newXList[i] + ',' + y));\n\tlet pathStr = pointsStr.join(\"L\");\n\n\tconst animPath = [paths.path, {d:\"M\"+pathStr}, PATH_ANIM_DUR, STD_EASING];\n\tpathComponents.push(animPath);\n\n\tif(paths.region) {\n\t\tlet regStartPt = `${newXList[0]},${zeroLine}L`;\n\t\tlet regEndPt = `L${newXList.slice(-1)[0]}, ${zeroLine}`;\n\n\t\tconst animRegion = [\n\t\t\tpaths.region,\n\t\t\t{d:\"M\" + regStartPt + pathStr + regEndPt},\n\t\t\tPATH_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\t\tpathComponents.push(animRegion);\n\t}\n\n\treturn pathComponents;\n}\n\n","import { getBarHeightAndYAttr } from './draw-utils';\nimport { getStringWidth } from './helpers';\nimport { STD_EASING, UNIT_ANIM_DUR, MARKER_LINE_ANIM_DUR, PATH_ANIM_DUR } from './animate';\nimport { DOT_OVERLAY_SIZE_INCR } from './constants';\n\nconst AXIS_TICK_LENGTH = 6;\nconst LABEL_MARGIN = 4;\nexport const FONT_SIZE = 10;\nconst BASE_LINE_COLOR = '#dadada';\nconst BASE_BG_COLOR = '#F7FAFC';\n\nfunction $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function createSVG(tag, o) {\n\tvar element = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif(i === \"className\") { i = \"class\"; }\n\t\t\tif(i === \"innerHTML\") {\n\t\t\t\telement['textContent'] = val;\n\t\t\t} else {\n\t\t\t\telement.setAttribute(i, val);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn element;\n}\n\nfunction renderVerticalGradient(svgDefElem, gradientId) {\n\treturn createSVG('linearGradient', {\n\t\tinside: svgDefElem,\n\t\tid: gradientId,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: 0,\n\t\ty2: 1\n\t});\n}\n\nfunction setGradientStop(gradElem, offset, color, opacity) {\n\treturn createSVG('stop', {\n\t\t'inside': gradElem,\n\t\t'style': `stop-color: ${color}`,\n\t\t'offset': offset,\n\t\t'stop-opacity': opacity\n\t});\n}\n\nexport function makeSVGContainer(parent, className, width, height) {\n\treturn createSVG('svg', {\n\t\tclassName: className,\n\t\tinside: parent,\n\t\twidth: width,\n\t\theight: height\n\t});\n}\n\nexport function makeSVGDefs(svgContainer) {\n\treturn createSVG('defs', {\n\t\tinside: svgContainer,\n\t});\n}\n\nexport function makeSVGGroup(parent, className, transform='') {\n\treturn createSVG('g', {\n\t\tclassName: className,\n\t\tinside: parent,\n\t\ttransform: transform\n\t});\n}\n\nexport function wrapInSVGGroup(elements, className='') {\n\tlet g = createSVG('g', {\n\t\tclassName: className\n\t});\n\telements.forEach(e => g.appendChild(e));\n\treturn g;\n}\n\nexport function makePath(pathStr, className='', stroke='none', fill='none') {\n\treturn createSVG('path', {\n\t\tclassName: className,\n\t\td: pathStr,\n\t\tstyles: {\n\t\t\tstroke: stroke,\n\t\t\tfill: fill\n\t\t}\n\t});\n}\n\nexport function makeGradient(svgDefElem, color, lighter = false) {\n\tlet gradientId ='path-fill-gradient' + '-' + color + '-' +(lighter ? 'lighter' : 'default');\n\tlet gradientDef = renderVerticalGradient(svgDefElem, gradientId);\n\tlet opacities = [1, 0.6, 0.2];\n\tif(lighter) {\n\t\topacities = [0.4, 0.2, 0];\n\t}\n\n\tsetGradientStop(gradientDef, \"0%\", color, opacities[0]);\n\tsetGradientStop(gradientDef, \"50%\", color, opacities[1]);\n\tsetGradientStop(gradientDef, \"100%\", color, opacities[2]);\n\n\treturn gradientId;\n}\n\nexport function makeHeatSquare(className, x, y, size, fill='none', data={}) {\n\tlet args = {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: size,\n\t\theight: size,\n\t\tfill: fill\n\t};\n\n\tObject.keys(data).map(key => {\n\t\targs[key] = data[key];\n\t});\n\n\treturn createSVG(\"rect\", args);\n}\n\nexport function makeText(className, x, y, content) {\n\treturn createSVG('text', {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\tdy: (FONT_SIZE / 2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\tinnerHTML: content\n\t});\n}\n\nfunction makeVertLine(x, label, y1, y2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tlet l = createSVG('line', {\n\t\tclassName: 'line-vertical ' + options.className,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: y1,\n\t\ty2: y2,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: 0,\n\t\ty: y1 > y2 ? y1 + LABEL_MARGIN : y1 - LABEL_MARGIN - FONT_SIZE,\n\t\tdy: FONT_SIZE + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'middle',\n\t\tinnerHTML: label\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(${ x }, 0)`\n\t});\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nfunction makeHoriLine(y, label, x1, x2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.lineType) options.lineType = '';\n\tlet className = 'line-horizontal ' + options.className +\n\t\t(options.lineType === \"dashed\" ? \"dashed\": \"\");\n\n\tlet l = createSVG('line', {\n\t\tclassName: className,\n\t\tx1: x1,\n\t\tx2: x2,\n\t\ty1: 0,\n\t\ty2: 0,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: x1 < x2 ? x1 - LABEL_MARGIN : x1 + LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / 2 - 2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': x1 < x2 ? 'end' : 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(0, ${y})`,\n\t\t'stroke-opacity': 1\n\t});\n\n\tif(text === 0 || text === '0') {\n\t\tline.style.stroke = \"rgba(27, 31, 35, 0.6)\";\n\t}\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nexport function yLine(y, label, width, options={}) {\n\tif(!options.pos) options.pos = 'left';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\tlet x1 = -1 * AXIS_TICK_LENGTH;\n\tlet x2 = options.mode === 'span' ? width + AXIS_TICK_LENGTH : 0;\n\n\tif(options.mode === 'tick' && options.pos === 'right') {\n\t\tx1 = width + AXIS_TICK_LENGTH\n\t\tx2 = width;\n\t}\n\n\tlet offset = options.pos === 'left' ? -1 * options.offset : options.offset;\n\n\tx1 += options.offset;\n\tx2 += options.offset;\n\n\treturn makeHoriLine(y, label, x1, x2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType\n\t});\n}\n\nexport function xLine(x, label, height, options={}) {\n\tif(!options.pos) options.pos = 'bottom';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\t// Draw X axis line in span/tick mode with optional label\n\t//                        \ty2(span)\n\t// \t\t\t\t\t\t|\n\t// \t\t\t\t\t\t|\n\t//\t\t\t\tx line\t|\n\t//\t\t\t\t\t\t|\n\t// \t\t\t\t\t   \t|\n\t// ---------------------+-- y2(tick)\n\t//\t\t\t\t\t\t|\n\t//\t\t\t\t\t\t\ty1\n\n\tlet y1 = height + AXIS_TICK_LENGTH;\n\tlet y2 = options.mode === 'span' ? -1 * AXIS_TICK_LENGTH : height;\n\n\tif(options.mode === 'tick' && options.pos === 'top') {\n\t\t// top axis ticks\n\t\ty1 = -1 * AXIS_TICK_LENGTH;\n\t\ty2 = 0;\n\t}\n\n\treturn makeVertLine(x, label, y1, y2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType\n\t});\n}\n\nexport function yMarker(y, label, width, options={}) {\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: width - getStringWidth(label, 5) - LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = makeHoriLine(y, '', 0, width, {\n\t\tstroke: options.stroke || BASE_LINE_COLOR,\n\t\tclassName: options.className || '',\n\t\tlineType: options.lineType\n\t});\n\n\tline.appendChild(labelSvg);\n\n\treturn line;\n}\n\nexport function yRegion(y1, y2, width, label) {\n\t// return a group\n\tlet height = y1 - y2;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`, // remove class\n\t\tstyles: {\n\t\t\tfill: `rgba(228, 234, 239, 0.49)`,\n\t\t\tstroke: BASE_LINE_COLOR,\n\t\t\t'stroke-dasharray': `${width}, ${height}`\n\t\t},\n\t\t// 'data-point-index': index,\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: width,\n\t\theight: height\n\t});\n\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: width - getStringWidth(label, 4.5) - LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet region = createSVG('g', {\n\t\ttransform: `translate(0, ${y2})`\n\t});\n\n\tregion.appendChild(rect);\n\tregion.appendChild(labelSvg);\n\n\treturn region;\n}\n\nexport function datasetBar(x, yTop, width, color, label='', index=0, offset=0, meta={}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`,\n\t\tstyle: `fill: ${color}`,\n\t\t'data-point-index': index,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height || meta.minHeight // TODO: correct y for positive min height\n\t});\n\n\tif(!label && !label.length) {\n\t\treturn rect;\n\t} else {\n\t\trect.setAttribute('y', 0);\n\t\trect.setAttribute('x', 0);\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: width/2,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(rect);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nexport function datasetDot(x, y, radius, color, label='', index=0, meta={}) {\n\tlet dot = createSVG('circle', {\n\t\tstyle: `fill: ${color}`,\n\t\t'data-point-index': index,\n\t\tcx: x,\n\t\tcy: y,\n\t\tr: radius\n\t});\n\n\tif(!label && !label.length) {\n\t\treturn dot;\n\t} else {\n\t\tdot.setAttribute('cy', 0);\n\t\tdot.setAttribute('cx', 0);\n\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1 - radius) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(dot);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nexport function getPaths(xList, yList, color, options={}, meta={}) {\n\tlet pointsList = yList.map((y, i) => (xList[i] + ',' + y));\n\tlet pointsStr = pointsList.join(\"L\");\n\tlet path = makePath(\"M\"+pointsStr, 'line-graph-path', color);\n\n\t// HeatLine\n\tif(options.heatline) {\n\t\tlet gradient_id = makeGradient(meta.svgDefs, color);\n\t\tpath.style.stroke = `url(#${gradient_id})`;\n\t}\n\n\tlet paths = {\n\t\tpath: path\n\t}\n\n\t// Region\n\tif(options.regionFill) {\n\t\tlet gradient_id_region = makeGradient(meta.svgDefs, color, true);\n\n\t\t// TODO: use zeroLine OR minimum\n\t\tlet pathStr = \"M\" + `${xList[0]},${meta.zeroLine}L` + pointsStr + `L${xList.slice(-1)[0]},${meta.zeroLine}`;\n\t\tpaths.region = makePath(pathStr, `region-fill`, 'none', `url(#${gradient_id_region})`);\n\t}\n\n\treturn paths;\n}\n\nexport let makeOverlay = {\n\t'bar': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\toverlay.style.fill = '#000000';\n\t\toverlay.style.opacity = '0.4';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t},\n\n\t'dot': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\tlet radius = unit.getAttribute('r');\n\t\toverlay.setAttribute('r', radius + DOT_OVERLAY_SIZE_INCR);\n\t\toverlay.style.fill = '#000000';\n\t\toverlay.style.opacity = '0.4';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t}\n}\n\nexport let updateOverlay = {\n\t'bar': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['x', 'y', 'width', 'height'];\n\t\tObject.values(unit.attributes)\n\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t.map(attr => {\n\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n\n\t'dot': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['cx', 'cy'];\n\t\tObject.values(unit.attributes)\n\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t.map(attr => {\n\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t}\n}\n\n","const PRESET_COLOR_MAP = {\n\t'light-blue': '#7cd6fd',\n\t'blue': '#5e64ff',\n\t'violet': '#743ee2',\n\t'red': '#ff5858',\n\t'orange': '#ffa00a',\n\t'yellow': '#feef72',\n\t'green': '#28a745',\n\t'light-green': '#98d85b',\n\t'purple': '#b554ff',\n\t'magenta': '#ffa3ef',\n\t'black': '#36114C',\n\t'grey': '#bdd3e6',\n\t'light-grey': '#f0f4f7',\n\t'dark-grey': '#b8c2cc'\n};\n\nexport const DEFAULT_COLORS = ['light-blue', 'blue', 'violet', 'red', 'orange',\n\t'yellow', 'green', 'light-green', 'purple', 'magenta'];\n\nfunction limitColor(r){\n\tif (r > 255) return 255;\n\telse if (r < 0) return 0;\n\treturn r;\n}\n\nexport function lightenDarkenColor(color, amt) {\n\tlet col = getColor(color);\n\tlet usePound = false;\n\tif (col[0] == \"#\") {\n\t\tcol = col.slice(1);\n\t\tusePound = true;\n\t}\n\tlet num = parseInt(col,16);\n\tlet r = limitColor((num >> 16) + amt);\n\tlet b = limitColor(((num >> 8) & 0x00FF) + amt);\n\tlet g = limitColor((num & 0x0000FF) + amt);\n\treturn (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\nexport function isValidColor(string) {\n\t// https://stackoverflow.com/a/8027444/6495043\n\treturn /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(string);\n}\n\nexport const getColor = (color) => {\n\treturn PRESET_COLOR_MAP[color] || color;\n};\n","import Chart from './chart';\n\nconst ALL_CHART_TYPES = ['line', 'scatter', 'bar', 'percentage', 'heatmap', 'pie'];\n\nconst COMPATIBLE_CHARTS = {\n\tbar: ['line', 'scatter', 'percentage', 'pie'],\n\tline: ['scatter', 'bar', 'percentage', 'pie'],\n\tpie: ['line', 'scatter', 'percentage', 'bar'],\n\tscatter: ['line', 'bar', 'percentage', 'pie'],\n\tpercentage: ['bar', 'line', 'scatter', 'pie'],\n\theatmap: []\n};\n\n// Needs structure as per only labels/datasets\nconst COLOR_COMPATIBLE_CHARTS = {\n\tbar: ['line', 'scatter'],\n\tline: ['scatter', 'bar'],\n\tpie: ['percentage'],\n\tscatter: ['line', 'bar'],\n\tpercentage: ['pie'],\n\theatmap: []\n};\n\nexport function getDifferentChart(type, current_type, parent, args) {\n\tif(type === current_type) return;\n\n\tif(!ALL_CHART_TYPES.includes(type)) {\n\t\tconsole.error(`'${type}' is not a valid chart type.`);\n\t}\n\n\tif(!COMPATIBLE_CHARTS[current_type].includes(type)) {\n\t\tconsole.error(`'${current_type}' chart cannot be converted to a '${type}' chart.`);\n\t}\n\n\t// whether the new chart can use the existing colors\n\tconst useColor = COLOR_COMPATIBLE_CHARTS[current_type].includes(type);\n\n\t// Okay, this is anticlimactic\n\t// this function will need to actually be 'changeChartType(type)'\n\t// that will update only the required elements, but for now ...\n\treturn new Chart(parent, {\n\t\ttitle: args.title,\n\t\tdata: args.data,\n\t\ttype: type,\n\t\theight: args.height,\n\t\tcolors: useColor ? args.colors : undefined\n\t});\n}","// Leveraging SMIL Animations\n\nimport { REPLACE_ALL_NEW_DUR } from './animate';\n\nconst EASING = {\n\tease: \"0.25 0.1 0.25 1\",\n\tlinear: \"0 0 1 1\",\n\t// easein: \"0.42 0 1 1\",\n\teasein: \"0.1 0.8 0.2 1\",\n\teaseout: \"0 0 0.58 1\",\n\teaseinout: \"0.42 0 0.58 1\"\n};\n\nfunction animateSVGElement(element, props, dur, easingType=\"linear\", type=undefined, oldValues={}) {\n\n\tlet animElement = element.cloneNode(true);\n\tlet newElement = element.cloneNode(true);\n\n\tfor(var attributeName in props) {\n\t\tlet animateElement;\n\t\tif(attributeName === 'transform') {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animateTransform\");\n\t\t} else {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animate\");\n\t\t}\n\t\tlet currentValue = oldValues[attributeName] || element.getAttribute(attributeName);\n\t\tlet value = props[attributeName];\n\n\t\tlet animAttr = {\n\t\t\tattributeName: attributeName,\n\t\t\tfrom: currentValue,\n\t\t\tto: value,\n\t\t\tbegin: \"0s\",\n\t\t\tdur: dur/1000 + \"s\",\n\t\t\tvalues: currentValue + \";\" + value,\n\t\t\tkeySplines: EASING[easingType],\n\t\t\tkeyTimes: \"0;1\",\n\t\t\tcalcMode: \"spline\",\n\t\t\tfill: 'freeze'\n\t\t};\n\n\t\tif(type) {\n\t\t\tanimAttr[\"type\"] = type;\n\t\t}\n\n\t\tfor (var i in animAttr) {\n\t\t\tanimateElement.setAttribute(i, animAttr[i]);\n\t\t}\n\n\t\tanimElement.appendChild(animateElement);\n\n\t\tif(type) {\n\t\t\tnewElement.setAttribute(attributeName, `translate(${value})`);\n\t\t} else {\n\t\t\tnewElement.setAttribute(attributeName, value);\n\t\t}\n\t}\n\n\treturn [animElement, newElement];\n}\n\nexport function transform(element, style) { // eslint-disable-line no-unused-vars\n\telement.style.transform = style;\n\telement.style.webkitTransform = style;\n\telement.style.msTransform = style;\n\telement.style.mozTransform = style;\n\telement.style.oTransform = style;\n}\n\nfunction animateSVG(svgContainer, elements) {\n\tlet newElements = [];\n\tlet animElements = [];\n\n\telements.map(element => {\n\t\tlet unit = element[0];\n\t\tlet parent = unit.parentNode;\n\n\t\tlet animElement, newElement;\n\n\t\telement[0] = unit;\n\t\t[animElement, newElement] = animateSVGElement(...element);\n\n\t\tnewElements.push(newElement);\n\t\tanimElements.push([animElement, parent]);\n\n\t\tparent.replaceChild(animElement, unit);\n\t});\n\n\tlet animSvg = svgContainer.cloneNode(true);\n\n\tanimElements.map((animElement, i) => {\n\t\tanimElement[1].replaceChild(newElements[i], animElement[0]);\n\t\telements[i][0] = newElements[i];\n\t});\n\n\treturn animSvg;\n}\n\nexport function runSMILAnimation(parent, svgElement, elementsToAnimate) {\n\tif(elementsToAnimate.length === 0) return;\n\n\tlet animSvgElement = animateSVG(svgElement, elementsToAnimate);\n\tif(svgElement.parentNode == parent) {\n\t\tparent.removeChild(svgElement);\n\t\tparent.appendChild(animSvgElement);\n\n\t}\n\n\t// Replace the new svgElement (data has already been replaced)\n\tsetTimeout(() => {\n\t\tif(animSvgElement.parentNode == parent) {\n\t\t\tparent.removeChild(animSvgElement);\n\t\t\tparent.appendChild(svgElement);\n\t\t}\n\t}, REPLACE_ALL_NEW_DUR);\n}\n","// Playing around with dates\n\n// https://stackoverflow.com/a/11252167/6495043\nfunction treatAsUtc(dateStr) {\n\tlet result = new Date(dateStr);\n\tresult.setMinutes(result.getMinutes() - result.getTimezoneOffset());\n\treturn result;\n}\n\nexport function getDdMmYyyy(date) {\n\tlet dd = date.getDate();\n\tlet mm = date.getMonth() + 1; // getMonth() is zero-based\n\treturn [\n\t\t(dd>9 ? '' : '0') + dd,\n\t\t(mm>9 ? '' : '0') + mm,\n\t\tdate.getFullYear()\n\t].join('-');\n}\n\nexport function getWeeksBetween(startDateStr, endDateStr) {\n\treturn Math.ceil(getDaysBetween(startDateStr, endDateStr) / 7);\n}\n\nexport function getDaysBetween(startDateStr, endDateStr) {\n\tlet millisecondsPerDay = 24 * 60 * 60 * 1000;\n\treturn (treatAsUtc(endDateStr) - treatAsUtc(startDateStr)) / millisecondsPerDay;\n}\n\n// mutates\nexport function addDays(date, numberOfDays) {\n\tdate.setDate(date.getDate() + numberOfDays);\n}\n\n// export function getMonthName() {}\n","import { floatTwo } from './helpers';\n\nfunction normalize(x) {\n\t// Calculates mantissa and exponent of a number\n\t// Returns normalized number and exponent\n\t// https://stackoverflow.com/q/9383593/6495043\n\n\tif(x===0) {\n\t\treturn [0, 0];\n\t}\n\tif(isNaN(x)) {\n\t\treturn {mantissa: -6755399441055744, exponent: 972};\n\t}\n\tvar sig = x > 0 ? 1 : -1;\n\tif(!isFinite(x)) {\n\t\treturn {mantissa: sig * 4503599627370496, exponent: 972};\n\t}\n\n\tx = Math.abs(x);\n\tvar exp = Math.floor(Math.log10(x));\n\tvar man = x/Math.pow(10, exp);\n\n\treturn [sig * man, exp];\n}\n\nfunction getChartRangeIntervals(max, min=0) {\n\tlet upperBound = Math.ceil(max);\n\tlet lowerBound = Math.floor(min);\n\tlet range = upperBound - lowerBound;\n\n\tlet noOfParts = range;\n\tlet partSize = 1;\n\n\t// To avoid too many partitions\n\tif(range > 5) {\n\t\tif(range % 2 !== 0) {\n\t\t\tupperBound++;\n\t\t\t// Recalc range\n\t\t\trange = upperBound - lowerBound;\n\t\t}\n\t\tnoOfParts = range/2;\n\t\tpartSize = 2;\n\t}\n\n\t// Special case: 1 and 2\n\tif(range <= 2) {\n\t\tnoOfParts = 4;\n\t\tpartSize = range/noOfParts;\n\t}\n\n\t// Special case: 0\n\tif(range === 0) {\n\t\tnoOfParts = 5;\n\t\tpartSize = 1;\n\t}\n\n\tlet intervals = [];\n\tfor(var i = 0; i <= noOfParts; i++){\n\t\tintervals.push(lowerBound + partSize * i);\n\t}\n\treturn intervals;\n}\n\nfunction getChartIntervals(maxValue, minValue=0) {\n\tlet [normalMaxValue, exponent] = normalize(maxValue);\n\tlet normalMinValue = minValue ? minValue/Math.pow(10, exponent): 0;\n\n\t// Allow only 7 significant digits\n\tnormalMaxValue = normalMaxValue.toFixed(6);\n\n\tlet intervals = getChartRangeIntervals(normalMaxValue, normalMinValue);\n\tintervals = intervals.map(value => value * Math.pow(10, exponent));\n\treturn intervals;\n}\n\nexport function calcChartIntervals(values, withMinimum=false) {\n\t//*** Where the magic happens ***\n\n\t// Calculates best-fit y intervals from given values\n\t// and returns the interval array\n\n\tlet maxValue = Math.max(...values);\n\tlet minValue = Math.min(...values);\n\n\t// Exponent to be used for pretty print\n\tlet exponent = 0, intervals = []; // eslint-disable-line no-unused-vars\n\n\tfunction getPositiveFirstIntervals(maxValue, absMinValue) {\n\t\tlet intervals = getChartIntervals(maxValue);\n\n\t\tlet intervalSize = intervals[1] - intervals[0];\n\n\t\t// Then unshift the negative values\n\t\tlet value = 0;\n\t\tfor(var i = 1; value < absMinValue; i++) {\n\t\t\tvalue += intervalSize;\n\t\t\tintervals.unshift((-1) * value);\n\t\t}\n\t\treturn intervals;\n\t}\n\n\t// CASE I: Both non-negative\n\n\tif(maxValue >= 0 && minValue >= 0) {\n\t\texponent = normalize(maxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(maxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(maxValue, minValue);\n\t\t}\n\t}\n\n\t// CASE II: Only minValue negative\n\n\telse if(maxValue > 0 && minValue < 0) {\n\t\t// `withMinimum` irrelevant in this case,\n\t\t// We'll be handling both sides of zero separately\n\t\t// (both starting from zero)\n\t\t// Because ceil() and floor() behave differently\n\t\t// in those two regions\n\n\t\tlet absMinValue = Math.abs(minValue);\n\n\t\tif(maxValue >= absMinValue) {\n\t\t\texponent = normalize(maxValue)[1];\n\t\t\tintervals = getPositiveFirstIntervals(maxValue, absMinValue);\n\t\t} else {\n\t\t\t// Mirror: maxValue => absMinValue, then change sign\n\t\t\texponent = normalize(absMinValue)[1];\n\t\t\tlet posIntervals = getPositiveFirstIntervals(absMinValue, maxValue);\n\t\t\tintervals = posIntervals.map(d => d * (-1));\n\t\t}\n\n\t}\n\n\t// CASE III: Both non-positive\n\n\telse if(maxValue <= 0 && minValue <= 0) {\n\t\t// Mirrored Case I:\n\t\t// Work with positives, then reverse the sign and array\n\n\t\tlet pseudoMaxValue = Math.abs(minValue);\n\t\tlet pseudoMinValue = Math.abs(maxValue);\n\n\t\texponent = normalize(pseudoMaxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue, pseudoMinValue);\n\t\t}\n\n\t\tintervals = intervals.reverse().map(d => d * (-1));\n\t}\n\n\treturn intervals;\n}\n\nexport function getZeroIndex(yPts) {\n\tlet zeroIndex;\n\tlet interval = getIntervalSize(yPts);\n\tif(yPts.indexOf(0) >= 0) {\n\t\t// the range has a given zero\n\t\t// zero-line on the chart\n\t\tzeroIndex = yPts.indexOf(0);\n\t} else if(yPts[0] > 0) {\n\t\t// Minimum value is positive\n\t\t// zero-line is off the chart: below\n\t\tlet min = yPts[0];\n\t\tzeroIndex = (-1) * min / interval;\n\t} else {\n\t\t// Maximum value is negative\n\t\t// zero-line is off the chart: above\n\t\tlet max = yPts[yPts.length - 1];\n\t\tzeroIndex = (-1) * max / interval + (yPts.length - 1);\n\t}\n\treturn zeroIndex;\n}\n\nexport function getRealIntervals(max, noOfIntervals, min = 0, asc = 1) {\n\tlet range = max - min;\n\tlet part = range * 1.0 / noOfIntervals;\n\tlet intervals = [];\n\n\tfor(var i = 0; i <= noOfIntervals; i++) {\n\t\tintervals.push(min + part * i);\n\t}\n\n\treturn asc ? intervals : intervals.reverse();\n}\n\nexport function getIntervalSize(orderedArray) {\n\treturn orderedArray[1] - orderedArray[0];\n}\n\nexport function getValueRange(orderedArray) {\n\treturn orderedArray[orderedArray.length-1] - orderedArray[0];\n}\n\nexport function scale(val, yAxis) {\n\treturn floatTwo(yAxis.zeroLine - val * yAxis.scaleMultiplier)\n}\n\nexport function calcDistribution(values, distributionSize) {\n\t// Assume non-negative values,\n\t// implying distribution minimum at zero\n\n\tlet dataMaxValue = Math.max(...values);\n\n\tlet distributionStep = 1 / (distributionSize - 1);\n\tlet distribution = [];\n\n\tfor(var i = 0; i < distributionSize; i++) {\n\t\tlet checkpoint = dataMaxValue * (distributionStep * i);\n\t\tdistribution.push(checkpoint);\n\t}\n\n\treturn distribution;\n}\n\nexport function getMaxCheckpoint(value, distribution) {\n\treturn distribution.filter(d => d < value).length;\n}\n","import { floatTwo, fillArray } from '../utils/helpers';\nimport { DEFAULT_AXIS_CHART_TYPE, AXIS_DATASET_CHART_TYPES } from '../utils/constants';\n\nexport function dataPrep(data, type) {\n\tdata.labels = data.labels || [];\n\n\tlet datasetLength = data.labels.length;\n\n\t// Datasets\n\tlet datasets = data.datasets;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\tif(!datasets) {\n\t\t// default\n\t\tdatasets = [{\n\t\t\tvalues: zeroArray\n\t\t}];\n\t}\n\n\tdatasets.map((d, i)=> {\n\t\t// Set values\n\t\tif(!d.values) {\n\t\t\td.values = zeroArray;\n\t\t} else {\n\t\t\t// Check for non values\n\t\t\tlet vals = d.values;\n\t\t\tvals = vals.map(val => (!isNaN(val) ? val : 0));\n\n\t\t\t// Trim or extend\n\t\t\tif(vals.length > datasetLength) {\n\t\t\t\tvals = vals.slice(0, datasetLength);\n\t\t\t} else {\n\t\t\t\tvals = fillArray(vals, datasetLength - vals.length, 0);\n\t\t\t}\n\t\t}\n\n\t\t// Set labels\n\t\t//\n\n\t\t// Set type\n\t\tif(!d.chartType ) {\n\t\t\tif(!AXIS_DATASET_CHART_TYPES.includes(type)) type === DEFAULT_AXIS_CHART_TYPE;\n\t\t\td.chartType = type;\n\t\t}\n\n\t});\n\n\t// Markers\n\n\t// Regions\n\t// data.yRegions = data.yRegions || [];\n\tif(data.yRegions) {\n\t\tdata.yRegions.map(d => {\n\t\t\tif(d.end < d.start) {\n\t\t\t\t[d.start, d.end] = [d.end, d.start];\n\t\t\t}\n\t\t});\n\t}\n\n\treturn data;\n}\n\nexport function zeroDataPrep(realData) {\n\tlet datasetLength = realData.labels.length;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\n\tlet zeroData = {\n\t\tlabels: realData.labels.slice(0, -1),\n\t\tdatasets: realData.datasets.map(d => {\n\t\t\treturn {\n\t\t\t\tname: '',\n\t\t\t\tvalues: zeroArray.slice(0, -1),\n\t\t\t\tchartType: d.chartType\n\t\t\t}\n\t\t}),\n\t\tyRegions: [\n\t\t\t{\n\t\t\t\tstart: 0,\n\t\t\t\tend: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t],\n\t\tyMarkers: [\n\t\t\t{\n\t\t\t\tvalue: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t]\n\t};\n\n\treturn zeroData;\n}","import { makeSVGGroup } from '../utils/draw';\nimport { xLine, yLine, yMarker, yRegion, datasetBar, datasetDot, getPaths } from '../utils/draw';\nimport { equilizeNoOfElements } from '../utils/draw-utils';\nimport { translateHoriLine, translateVertLine, animateRegion, animateBar, animateDot, animatePath } from '../utils/animate';\n\nclass ChartComponent {\n\tconstructor({\n\t\tlayerClass = '',\n\t\tlayerTransform = '',\n\t\tconstants,\n\n\t\tgetData,\n\t\tmakeElements,\n\t\tanimateElements\n\t}) {\n\t\tthis.layerTransform = layerTransform;\n\t\tthis.constants = constants;\n\n\t\tthis.makeElements = makeElements;\n\t\tthis.getData = getData;\n\n\t\tthis.animateElements = animateElements;\n\n\t\tthis.store = [];\n\n\t\tthis.layerClass = layerClass;\n\t\tthis.layerClass = typeof(this.layerClass) === 'function'\n\t\t\t? this.layerClass() : this.layerClass;\n\n\t\tthis.refresh();\n\t}\n\n\trefresh(data) {\n\t\tthis.data = data || this.getData();\n\t}\n\n\tsetup(parent) {\n\t\tthis.layer = makeSVGGroup(parent, this.layerClass, this.layerTransform);\n\t}\n\n\tmake() {\n\t\tthis.render(this.data);\n\t\tthis.oldData = this.data;\n\t}\n\n\trender(data) {\n\t\tthis.store = this.makeElements(data);\n\n\t\tthis.layer.textContent = '';\n\t\tthis.store.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t}\n\n\tupdate(animate = true) {\n\t\tthis.refresh();\n\t\tlet animateElements = []\n\t\tif(animate) {\n\t\t\tanimateElements = this.animateElements(this.data);\n\t\t}\n\t\treturn animateElements;\n\t}\n}\n\nlet componentConfigs = {\n\tyAxis: {\n\t\tlayerClass: 'y axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\tyLine(position, data.labels[i], this.constants.width,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.labels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tlabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\txAxis: {\n\t\tlayerClass: 'x axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\txLine(position, data.labels[i], this.constants.height,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.labels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tlabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateVertLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyMarkers: {\n\t\tlayerClass: 'y-markers',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(marker =>\n\t\t\t\tyMarker(marker.position, marker.label, this.constants.width,\n\t\t\t\t\t{pos:'right', mode: 'span', lineType: 'dashed'})\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.position);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.position);\n\t\t\tlet oldLabels = this.oldData.map(d => d.label);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tposition: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i]\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyRegions: {\n\t\tlayerClass: 'y-regions',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(region =>\n\t\t\t\tyRegion(region.start, region.end, this.constants.width,\n\t\t\t\t\tregion.label)\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.end);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newStarts = newData.map(d => d.start);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.end);\n\t\t\tlet oldLabels = this.oldData.map(d => d.label);\n\t\t\tlet oldStarts = this.oldData.map(d => d.start);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tstart: oldStarts[i],\n\t\t\t\t\tend: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i]\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((rectGroup, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateRegion(\n\t\t\t\t\trectGroup, newStarts[i], newPos[i], oldPos[i]\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\tbarGraph: {\n\t\tlayerClass: function() { return 'dataset-units dataset-bars dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'bar';\n\t\t\treturn data.yPositions.map((y, j) => {\n\t\t\t\treturn datasetBar(\n\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\ty,\n\t\t\t\t\tdata.barWidth,\n\t\t\t\t\tc.color,\n\t\t\t\t\tdata.labels[j],\n\t\t\t\t\tj,\n\t\t\t\t\tdata.offsets[j],\n\t\t\t\t\t{\n\t\t\t\t\t\tzeroLine: data.zeroLine,\n\t\t\t\t\t\tbarsWidth: data.barsWidth,\n\t\t\t\t\t\tminHeight: c.minHeight\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t});\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet c = this.constants;\n\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newOffsets = newData.offsets;\n\t\t\tlet newLabels = newData.labels;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldOffsets = this.oldData.offsets;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldOffsets, newOffsets] = equilizeNoOfElements(oldOffsets, newOffsets);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\toffsets: oldOffsets,\n\t\t\t\tlabels: newLabels,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tbarsWidth: this.oldData.barsWidth,\n\t\t\t\tbarWidth: this.oldData.barWidth,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((bar, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateBar(\n\t\t\t\t\tbar, newXPos[i], newYPos[i], newData.barWidth, newOffsets[i], c.index,\n\t\t\t\t\t\t{zeroLine: newData.zeroLine}\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\tlineGraph: {\n\t\tlayerClass: function() { return 'dataset-units dataset-line dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'dot';\n\n\t\t\tthis.paths = getPaths(\n\t\t\t\tdata.xPositions,\n\t\t\t\tdata.yPositions,\n\t\t\t\tc.color,\n\t\t\t\t{\n\t\t\t\t\theatline: c.heatline,\n\t\t\t\t\tregionFill: c.regionFill\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tsvgDefs: c.svgDefs,\n\t\t\t\t\tzeroLine: data.zeroLine\n\t\t\t\t}\n\t\t\t)\n\n\t\t\tthis.dots = []\n\n\t\t\tif(!c.hideDots) {\n\t\t\t\tthis.dots = data.yPositions.map((y, j) => {\n\t\t\t\t\treturn datasetDot(\n\t\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\t\ty,\n\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\tc.color,\n\t\t\t\t\t\t(c.valuesOverPoints ? data.values[j] : ''),\n\t\t\t\t\t\tj\n\t\t\t\t\t)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn Object.values(this.paths).concat(this.dots);\n\t\t\t// return this.dots;\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet c = this.constants;\n\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newValues = newData.values;\n\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldValues = this.oldData.values;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldValues, newValues] = equilizeNoOfElements(oldValues, newValues);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\tvalues: newValues,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tradius: this.oldData.radius,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tanimateElements = animateElements.concat(animatePath(\n\t\t\t\tthis.paths, newXPos, newYPos, newData.zeroLine));\n\n\t\t\tif(this.dots.length) {\n\t\t\t\tthis.dots.map((dot, i) => {\n\t\t\t\t\tanimateElements = animateElements.concat(animateDot(\n\t\t\t\t\t\tdot, newXPos[i], newYPos[i]));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn animateElements;\n\t\t}\n\t}\n}\n\nexport function getComponent(name, constants, getData) {\n\tlet keys = Object.keys(componentConfigs).filter(k => name.includes(k));\n\tlet config = componentConfigs[keys[0]];\n\tObject.assign(config, {\n\t\tconstants: constants,\n\t\tgetData: getData\n\t})\n\treturn new ChartComponent(config);\n}\n","import '../scss/charts.scss';\n\n// import MultiAxisChart from './charts/MultiAxisChart';\nimport PercentageChart from './charts/PercentageChart';\nimport PieChart from './charts/PieChart';\nimport Heatmap from './charts/Heatmap';\nimport AxisChart from './charts/AxisChart';\n\nconst chartTypes = {\n\t// multiaxis: MultiAxisChart,\n\tpercentage: PercentageChart,\n\theatmap: Heatmap,\n\tpie: PieChart\n};\n\nfunction getChartByType(chartType = 'line', parent, options) {\n\tif(chartType === 'line') {\n\t\toptions.type = 'line';\n\t\treturn new AxisChart(parent, options);\n\t} else if (chartType === 'bar') {\n\t\toptions.type = 'bar';\n\t\treturn new AxisChart(parent, options);\n\t} else if (chartType === 'axis-mixed') {\n\t\toptions.type = 'line';\n\t\treturn new AxisChart(parent, options);\n\t}\n\n\tif (!chartTypes[chartType]) {\n\t\tconsole.error(\"Undefined chart type: \" + chartType);\n\t\treturn;\n\t}\n\n\treturn new chartTypes[chartType](parent, options);\n}\n\nexport default class Chart {\n\tconstructor(parent, options) {\n\t\treturn getChartByType(options.type, parent, options);\n\t}\n}\n","import { $ } from '../utils/dom';\n\nexport default class SvgTip {\n\tconstructor({\n\t\tparent = null,\n\t\tcolors = []\n\t}) {\n\t\tthis.parent = parent;\n\t\tthis.colors = colors;\n\t\tthis.title_name = '';\n\t\tthis.title_value = '';\n\t\tthis.list_values = [];\n\t\tthis.title_value_first = 0;\n\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\n\t\tthis.top = 0;\n\t\tthis.left = 0;\n\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tthis.make_tooltip();\n\t}\n\n\trefresh() {\n\t\tthis.fill();\n\t\tthis.calc_position();\n\t\t// this.show_tip();\n\t}\n\n\tmake_tooltip() {\n\t\tthis.container = $.create('div', {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'graph-svg-tip comparison',\n\t\t\tinnerHTML: `<span class=\"title\"></span>\n\t\t\t\t<ul class=\"data-point-list\"></ul>\n\t\t\t\t<div class=\"svg-pointer\"></div>`\n\t\t});\n\t\tthis.hide_tip();\n\n\t\tthis.title = this.container.querySelector('.title');\n\t\tthis.data_point_list = this.container.querySelector('.data-point-list');\n\n\t\tthis.parent.addEventListener('mouseleave', () => {\n\t\t\tthis.hide_tip();\n\t\t});\n\t}\n\n\tfill() {\n\t\tlet title;\n\t\tif(this.title_value_first) {\n\t\t\ttitle = `<strong>${this.title_value}</strong>${this.title_name}`;\n\t\t} else {\n\t\t\ttitle = `${this.title_name}<strong>${this.title_value}</strong>`;\n\t\t}\n\t\tthis.title.innerHTML = title;\n\t\tthis.data_point_list.innerHTML = '';\n\n\t\tthis.list_values.map((set, i) => {\n\t\t\tconst color = this.colors[i] || 'black';\n\n\t\t\tlet li = $.create('li', {\n\t\t\t\tstyles: {\n\t\t\t\t\t'border-top': `3px solid ${color}`\n\t\t\t\t},\n\t\t\t\tinnerHTML: `<strong style=\"display: block;\">${ set.value === 0 || set.value ? set.value : '' }</strong>\n\t\t\t\t\t${set.title ? set.title : '' }`\n\t\t\t});\n\n\t\t\tthis.data_point_list.appendChild(li);\n\t\t});\n\t}\n\n\tcalc_position() {\n\t\tlet width = this.container.offsetWidth;\n\n\t\tthis.top = this.y - this.container.offsetHeight;\n\t\tthis.left = this.x - width/2;\n\t\tlet max_left = this.parent.offsetWidth - width;\n\n\t\tlet pointer = this.container.querySelector('.svg-pointer');\n\n\t\tif(this.left < 0) {\n\t\t\tpointer.style.left = `calc(50% - ${-1 * this.left}px)`;\n\t\t\tthis.left = 0;\n\t\t} else if(this.left > max_left) {\n\t\t\tlet delta = this.left - max_left;\n\t\t\tlet pointer_offset = `calc(50% + ${delta}px)`;\n\t\t\tpointer.style.left = pointer_offset;\n\n\t\t\tthis.left = max_left;\n\t\t} else {\n\t\t\tpointer.style.left = `50%`;\n\t\t}\n\t}\n\n\tset_values(x, y, title_name = '', title_value = '', list_values = [], title_value_first = 0) {\n\t\tthis.title_name = title_name;\n\t\tthis.title_value = title_value;\n\t\tthis.list_values = list_values;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.title_value_first = title_value_first;\n\t\tthis.refresh();\n\t}\n\n\thide_tip() {\n\t\tthis.container.style.top = '0px';\n\t\tthis.container.style.left = '0px';\n\t\tthis.container.style.opacity = '0';\n\t}\n\n\tshow_tip() {\n\t\tthis.container.style.top = this.top + 'px';\n\t\tthis.container.style.left = this.left + 'px';\n\t\tthis.container.style.opacity = '1';\n\t}\n}\n","export const VERT_SPACE_OUTSIDE_BASE_CHART = 40;\nexport const TRANSLATE_Y_BASE_CHART = 20;\nexport const LEFT_MARGIN_BASE_CHART = 60;\nexport const RIGHT_MARGIN_BASE_CHART = 40;\nexport const Y_AXIS_MARGIN = 60;\n\nexport const INIT_CHART_UPDATE_TIMEOUT = 1000;\nexport const CHART_POST_ANIMATE_TIMEOUT = 400;\n\nexport const DEFAULT_AXIS_CHART_TYPE = 'line';\nexport const AXIS_DATASET_CHART_TYPES = ['line', 'bar'];\n\nexport const BAR_CHART_SPACE_RATIO = 0.5;\nexport const MIN_BAR_PERCENT_HEIGHT = 0.01;\n\nexport const LINE_CHART_DOT_SIZE = 4;\nexport const DOT_OVERLAY_SIZE_INCR = 4;","import SvgTip from '../objects/SvgTip';\nimport { $, isElementInViewport, getElementContentWidth } from '../utils/dom';\nimport { makeSVGContainer, makeSVGDefs, makeSVGGroup } from '../utils/draw';\nimport { getStringWidth } from '../utils/helpers';\nimport { VERT_SPACE_OUTSIDE_BASE_CHART, TRANSLATE_Y_BASE_CHART, LEFT_MARGIN_BASE_CHART,\n\tRIGHT_MARGIN_BASE_CHART, INIT_CHART_UPDATE_TIMEOUT, CHART_POST_ANIMATE_TIMEOUT } from '../utils/constants';\nimport { getColor, DEFAULT_COLORS } from '../utils/colors';\nimport { getDifferentChart } from '../config';\nimport { runSMILAnimation } from '../utils/animation';\n\nexport default class BaseChart {\n\tconstructor(parent, options) {\n\t\tthis.rawChartArgs = options;\n\n\t\tthis.parent = typeof parent === 'string' ? document.querySelector(parent) : parent;\n\t\tif (!(this.parent instanceof HTMLElement)) {\n\t\t\tthrow new Error('No `parent` element to render on was provided.');\n\t\t}\n\n\t\tthis.title = options.title || '';\n\t\tthis.subtitle = options.subtitle || '';\n\t\tthis.argHeight = options.height || 240;\n\t\tthis.type = options.type || '';\n\n\t\tthis.realData = this.prepareData(options.data);\n\t\tthis.data = this.prepareFirstData(this.realData);\n\t\tthis.colors = [];\n\t\tthis.config = {\n\t\t\tshowTooltip: 1, // calculate\n\t\t\tshowLegend: options.showLegend || 1,\n\t\t\tisNavigable: options.isNavigable || 0,\n\t\t\tanimate: 1\n\t\t};\n\t\tthis.state = {};\n\t\tthis.options = {};\n\n\t\tif(this.config.isNavigable) {\n\t\t\tthis.state.currentIndex = 0;\n\t\t\tthis.overlays = [];\n\t\t}\n\n\t\tthis.configure(options);\n\t}\n\n\tconfigure(args) {\n\t\tthis.setColors();\n\t\tthis.setMargins();\n\n\t\t// Bind window events\n\t\twindow.addEventListener('resize', () => this.draw());\n\t\twindow.addEventListener('orientationchange', () => this.draw());\n\t}\n\n\tsetColors() {\n\t\tlet args = this.rawChartArgs;\n\n\t\t// Needs structure as per only labels/datasets, from config\n\t\tconst list = args.type === 'percentage' || args.type === 'pie'\n\t\t\t? args.data.labels\n\t\t\t: args.data.datasets;\n\n\t\tif(!args.colors || (list && args.colors.length < list.length)) {\n\t\t\tthis.colors = DEFAULT_COLORS;\n\t\t} else {\n\t\t\tthis.colors = args.colors;\n\t\t}\n\n\t\tthis.colors = this.colors.map(color => getColor(color));\n\t}\n\n\tsetMargins() {\n\t\tlet height = this.argHeight;\n\t\tthis.baseHeight = height;\n\t\tthis.height = height - VERT_SPACE_OUTSIDE_BASE_CHART;\n\t\tthis.translateY = TRANSLATE_Y_BASE_CHART;\n\n\t\t// Horizontal margins\n\t\tthis.leftMargin = LEFT_MARGIN_BASE_CHART;\n\t\tthis.rightMargin = RIGHT_MARGIN_BASE_CHART;\n\t}\n\n\tvalidate() {\n\t\treturn true;\n\t}\n\n\tsetup() {\n\t\tif(this.validate()) {\n\t\t\tthis._setup();\n\t\t}\n\t}\n\n\t_setup() {\n\t\tthis.makeContainer();\n\t\tthis.makeTooltip();\n\n\t\tthis.draw(true);\n\t}\n\n\tsetupComponents() {\n\t\tthis.components = new Map();\n\t}\n\n\tmakeContainer() {\n\t\tthis.container = $.create('div', {\n\t\t\tclassName: 'chart-container',\n\t\t\tinnerHTML: `<h6 class=\"title\">${this.title}</h6>\n\t\t\t\t<h6 class=\"sub-title uppercase\">${this.subtitle}</h6>\n\t\t\t\t<div class=\"frappe-chart graphics\"></div>\n\t\t\t\t<div class=\"graph-stats-container\"></div>`\n\t\t});\n\n\t\t// Chart needs a dedicated parent element\n\t\tthis.parent.innerHTML = '';\n\t\tthis.parent.appendChild(this.container);\n\n\t\tthis.chartWrapper = this.container.querySelector('.frappe-chart');\n\t\tthis.statsWrapper = this.container.querySelector('.graph-stats-container');\n\t}\n\n\tmakeTooltip() {\n\t\tthis.tip = new SvgTip({\n\t\t\tparent: this.chartWrapper,\n\t\t\tcolors: this.colors\n\t\t});\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {}\n\n\tdraw(init=false) {\n\t\tthis.calcWidth();\n\t\tthis.calc();\n\t\tthis.makeChartArea();\n\t\tthis.setupComponents();\n\n\t\tthis.components.forEach(c => c.setup(this.drawArea)); // or c.build()\n\t\tthis.components.forEach(c => c.make()); // or c.build()\n\n\t\t// TODO: remove timeout and decrease post animate time in chart component\n\t\tif(init) {\n\t\t\tthis.data = this.realData;\n\t\t\tsetTimeout(() => {this.update();}, INIT_CHART_UPDATE_TIMEOUT);\n\t\t}\n\n\t\tthis.renderLegend();\n\t\tthis.setupNavigation(init);\n\t}\n\n\tcalcWidth() {\n\t\tlet outerAnnotationsWidth = 0;\n\t\t// let charWidth = 8;\n\t\t// this.specificValues.map(val => {\n\t\t// \tlet strWidth = getStringWidth((val.title + \"\"), charWidth);\n\t\t// \tif(strWidth > outerAnnotationsWidth) {\n\t\t// \t\touterAnnotationsWidth = strWidth - 40;\n\t\t// \t}\n\t\t// });\n\t\tthis.baseWidth = getElementContentWidth(this.parent) - outerAnnotationsWidth;\n\t\tthis.width = this.baseWidth - (this.leftMargin + this.rightMargin);\n\t}\n\n\tupdate(data=this.data) {\n\t\tthis.data = this.prepareData(data);\n\t\tthis.calc(); // builds state\n\t\tthis.render();\n\t}\n\n\tprepareData(data=this.data) {\n\t\treturn data;\n\t}\n\n\tprepareFirstData(data=this.data) {\n\t\treturn data;\n\t}\n\n\tcalc() {} // builds state\n\n\trender(components=this.components, animate=true) {\n\t\tif(this.config.isNavigable) {\n\t\t\t// Remove all existing overlays\n\t\t\tthis.overlays.map(o => o.parentNode.removeChild(o));\n\t\t\t// ref.parentNode.insertBefore(element, ref);\n\t\t}\n\t\tlet elementsToAnimate = [];\n\t\t// Can decouple to this.refreshComponents() first to save animation timeout\n\t\tcomponents.forEach(c => {\n\t\t\telementsToAnimate = elementsToAnimate.concat(c.update(animate));\n\t\t});\n\t\tif(elementsToAnimate.length > 0) {\n\t\t\trunSMILAnimation(this.chartWrapper, this.svg, elementsToAnimate);\n\t\t\tsetTimeout(() => {\n\t\t\t\tcomponents.forEach(c => c.make());\n\t\t\t\tthis.updateNav();\n\t\t\t}, CHART_POST_ANIMATE_TIMEOUT);\n\t\t} else {\n\t\t\tthis.updateNav();\n\t\t}\n\t}\n\n\tupdateNav() {\n\t\tif(this.config.isNavigable) {\n\t\t\t// Make new overlays\n\t\t\tif(!this.overlayGuides){\n\t\t\t\tthis.makeOverlays();\n\t\t\t\tthis.bindUnits();\n\t\t\t} else {\n\t\t\t\tthis.updateOverlays();\n\t\t\t}\n\t\t}\n\t}\n\n\tmakeChartArea() {\n\t\tif(this.svg) {\n\t\t\tthis.chartWrapper.removeChild(this.svg);\n\t\t}\n\t\tthis.svg = makeSVGContainer(\n\t\t\tthis.chartWrapper,\n\t\t\t'chart',\n\t\t\tthis.baseWidth,\n\t\t\tthis.baseHeight\n\t\t);\n\t\tthis.svgDefs = makeSVGDefs(this.svg);\n\n\t\t// I WISH !!!\n\t\t// this.svg = makeSVGGroup(\n\t\t// \tsvgContainer,\n\t\t// \t'flipped-coord-system',\n\t\t// \t`translate(0, ${this.baseHeight}) scale(1, -1)`\n\t\t// );\n\n\t\tthis.drawArea = makeSVGGroup(\n\t\t\tthis.svg,\n\t\t\tthis.type + '-chart',\n\t\t\t`translate(${this.leftMargin}, ${this.translateY})`\n\t\t);\n\t}\n\n\trenderLegend() {}\n\n\tsetupNavigation(init=false) {\n\t\tif(!this.config.isNavigable) return;\n\n\t\tif(init) {\n\t\t\tthis.bindOverlay();\n\n\t\t\tthis.keyActions = {\n\t\t\t\t'13': this.onEnterKey.bind(this),\n\t\t\t\t'37': this.onLeftArrow.bind(this),\n\t\t\t\t'38': this.onUpArrow.bind(this),\n\t\t\t\t'39': this.onRightArrow.bind(this),\n\t\t\t\t'40': this.onDownArrow.bind(this),\n\t\t\t};\n\n\t\t\tdocument.addEventListener('keydown', (e) => {\n\t\t\t\tif(isElementInViewport(this.chartWrapper)) {\n\t\t\t\t\te = e || window.event;\n\t\t\t\t\tthis.keyActions[e.keyCode]();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tmakeOverlays() {}\n\tbindOverlay() {}\n\tbindUnits() {}\n\n\tonLeftArrow() {}\n\tonRightArrow() {}\n\tonUpArrow() {}\n\tonDownArrow() {}\n\tonEnterKey() {}\n\n\tgetDataPoint(index = 0) {}\n\tsetCurrentDataPoint(point) {}\n\n\tupdateDataset(dataset, index) {}\n\taddDataset(dataset, index) {}\n\tremoveDataset(index = 0) {}\n\n\tupdateDatasets(datasets) {}\n\n\tupdateDataPoint(dataPoint, index = 0) {}\n\taddDataPoint(dataPoint, index = 0) {}\n\tremoveDataPoint(index = 0) {}\n\n\tgetDifferentChart(type) {\n\t\treturn getDifferentChart(type, this.type, this.parent, this.rawChartArgs);\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { $, getOffset } from '../utils/dom';\n\nexport default class PercentageChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'percentage';\n\n\t\tthis.max_slices = 10;\n\t\tthis.max_legend_points = 6;\n\n\t\tthis.setup();\n\t}\n\n\tmakeChartArea() {\n\t\tthis.chartWrapper.className += ' ' + 'graph-focus-margin';\n\t\tthis.chartWrapper.style.marginTop = '45px';\n\n\t\tthis.statsWrapper.className += ' ' + 'graph-focus-margin';\n\t\tthis.statsWrapper.style.marginBottom = '30px';\n\t\tthis.statsWrapper.style.paddingTop = '0px';\n\n\t\tthis.svg = $.create('div', {\n\t\t\tclassName: 'div',\n\t\t\tinside: this.chartWrapper\n\t\t});\n\n\t\tthis.chart = $.create('div', {\n\t\t\tclassName: 'progress-chart',\n\t\t\tinside: this.svg\n\t\t});\n\n\t\tthis.percentageBar = $.create('div', {\n\t\t\tclassName: 'progress',\n\t\t\tinside: this.chart\n\t\t});\n\t}\n\n\trender() {\n\t\tthis.grand_total = this.sliceTotals.reduce((a, b) => a + b, 0);\n\t\tthis.slices = [];\n\t\tthis.sliceTotals.map((total, i) => {\n\t\t\tlet slice = $.create('div', {\n\t\t\t\tclassName: `progress-bar`,\n\t\t\t\tinside: this.percentageBar,\n\t\t\t\tstyles: {\n\t\t\t\t\tbackground: this.colors[i],\n\t\t\t\t\twidth: total*100/this.grand_total + \"%\"\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.slices.push(slice);\n\t\t});\n\t}\n\n\tcalc() {\n\t\tthis.sliceTotals = [];\n\t\tlet all_totals = this.data.labels.map((d, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, d];\n\t\t}).filter(d => { return d[0] > 0; }); // keep only positive results\n\n\t\tlet totals = all_totals;\n\n\t\tif(all_totals.length > this.max_slices) {\n\t\t\tall_totals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = all_totals.slice(0, this.max_slices-1);\n\t\t\tlet others = all_totals.slice(this.max_slices-1);\n\n\t\t\tlet sum_of_others = 0;\n\t\t\tothers.map(d => {sum_of_others += d[0];});\n\n\t\t\ttotals.push([sum_of_others, 'Rest']);\n\n\t\t\tthis.colors[this.max_slices-1] = 'grey';\n\t\t}\n\n\t\tthis.labels = [];\n\t\ttotals.map(d => {\n\t\t\tthis.sliceTotals.push(d[0]);\n\t\t\tthis.labels.push(d[1]);\n\t\t});\n\n\t\tthis.legend_totals = this.sliceTotals.slice(0, this.max_legend_points);\n\t}\n\n\tbindTooltip() {\n\t\t// this.slices.map((slice, i) => {\n\t\t// \tslice.addEventListener('mouseenter', () => {\n\t\t// \t\tlet g_off = getOffset(this.chartWrapper), p_off = getOffset(slice);\n\n\t\t// \t\tlet x = p_off.left - g_off.left + slice.offsetWidth/2;\n\t\t// \t\tlet y = p_off.top - g_off.top - 6;\n\t\t// \t\tlet title = (this.formatted_labels && this.formatted_labels.length>0\n\t\t// \t\t\t? this.formatted_labels[i] : this.labels[i]) + ': ';\n\t\t// \t\tlet percent = (this.sliceTotals[i]*100/this.grand_total).toFixed(1);\n\n\t\t// \t\tthis.tip.set_values(x, y, title, percent + \"%\");\n\t\t// \t\tthis.tip.show_tip();\n\t\t// \t});\n\t\t// });\n\t}\n\n\trenderLegend() {\n\t\t// let x_values = this.formatted_labels && this.formatted_labels.length > 0\n\t\t// \t? this.formatted_labels : this.labels;\n\t\t// this.legend_totals.map((d, i) => {\n\t\t// \tif(d) {\n\t\t// \t\tlet stats = $.create('div', {\n\t\t// \t\t\tclassName: 'stats',\n\t\t// \t\t\tinside: this.statsWrapper\n\t\t// \t\t});\n\t\t// \t\tstats.innerHTML = `<span class=\"indicator\">\n\t\t// \t\t\t<i style=\"background: ${this.colors[i]}\"></i>\n\t\t// \t\t\t<span class=\"text-muted\">${x_values[i]}:</span>\n\t\t// \t\t\t${d}\n\t\t// \t\t</span>`;\n\t\t// \t}\n\t\t// });\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { $, getOffset } from '../utils/dom';\nimport { makePath } from '../utils/draw';\nimport { lightenDarkenColor } from '../utils/colors';\nimport { runSMILAnimation, transform } from '../utils/animation';\nconst ANGLE_RATIO = Math.PI / 180;\nconst FULL_ANGLE = 360;\n\nexport default class PieChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'pie';\n\t\tthis.elements_to_animate = null;\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.max_slices = 10;\n\t\tthis.max_legend_points = 6;\n\t\tthis.isAnimate = false;\n\t\tthis.startAngle = args.startAngle || 0;\n\t\tthis.clockWise = args.clockWise || false;\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\t\tthis.setup();\n\t}\n\tcalc() {\n\t\tthis.centerX = this.width / 2;\n\t\tthis.centerY = this.height / 2;\n\t\tthis.radius = (this.height > this.width ? this.centerX : this.centerY);\n\t\tthis.slice_totals = [];\n\t\tlet all_totals = this.data.labels.map((d, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, d];\n\t\t}).filter(d => { return d[0] > 0; }); // keep only positive results\n\n\t\tlet totals = all_totals;\n\n\t\tif(all_totals.length > this.max_slices) {\n\t\t\tall_totals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = all_totals.slice(0, this.max_slices-1);\n\t\t\tlet others = all_totals.slice(this.max_slices-1);\n\n\t\t\tlet sum_of_others = 0;\n\t\t\tothers.map(d => {sum_of_others += d[0];});\n\n\t\t\ttotals.push([sum_of_others, 'Rest']);\n\n\t\t\tthis.colors[this.max_slices-1] = 'grey';\n\t\t}\n\n\t\tthis.labels = [];\n\t\ttotals.map(d => {\n\t\t\tthis.slice_totals.push(d[0]);\n\t\t\tthis.labels.push(d[1]);\n\t\t});\n\n\t\tthis.legend_totals = this.slice_totals.slice(0, this.max_legend_points);\n\t}\n\n\tstatic getPositionByAngle(angle,radius) {\n\t\treturn {\n\t\t\tx:Math.sin(angle * ANGLE_RATIO) * radius,\n\t\t\ty:Math.cos(angle * ANGLE_RATIO) * radius,\n\t\t};\n\t}\n\tmakeArcPath(startPosition,endPosition){\n\t\tconst{centerX,centerY,radius,clockWise} = this;\n\t\treturn `M${centerX} ${centerY} L${centerX+startPosition.x} ${centerY+startPosition.y} A ${radius} ${radius} 0 0 ${clockWise ? 1 : 0} ${centerX+endPosition.x} ${centerY+endPosition.y} z`;\n\t}\n\trender(init) {\n\t\tconst{radius,clockWise} = this;\n\t\tthis.grand_total = this.slice_totals.reduce((a, b) => a + b, 0);\n\t\tconst prevSlicesProperties = this.slicesProperties || [];\n\t\tthis.slices = [];\n\t\tthis.elements_to_animate = [];\n\t\tthis.slicesProperties = [];\n\t\tlet curAngle = 180 - this.startAngle;\n\t\tthis.slice_totals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / this.grand_total) * FULL_ANGLE;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = PieChart.getPositionByAngle(startAngle,radius);\n\t\t\tconst endPosition = PieChart.getPositionByAngle(endAngle,radius);\n\t\t\tconst prevProperty = init && prevSlicesProperties[i];\n\t\t\tlet curStart,curEnd;\n\t\t\tif(init){\n\t\t\t\tcurStart = prevProperty?prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty? prevProperty.endPosition : startPosition;\n\t\t\t}else{\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath = this.makeArcPath(curStart,curEnd);\n\t\t\tlet slice = makePath(curPath, 'pie-path', 'none', this.colors[i]);\n\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\tthis.drawArea.appendChild(slice);\n\n\t\t\tthis.slices.push(slice);\n\t\t\tthis.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: this.grand_total,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle:diffAngle\n\t\t\t});\n\t\t\tif(init){\n\t\t\t\tthis.elements_to_animate.push([{unit: slice, array: this.slices, index: this.slices.length - 1},\n\t\t\t\t\t{d:this.makeArcPath(startPosition,endPosition)},\n\t\t\t\t\t650, \"easein\",null,{\n\t\t\t\t\t\td:curPath\n\t\t\t\t\t}]);\n\t\t\t}\n\n\t\t});\n\t\tif(init){\n\t\t\trunSMILAnimation(this.chartWrapper, this.svg, this.elements_to_animate);\n\t\t}\n\t}\n\n\tcalTranslateByAngle(property){\n\t\tconst{radius,hoverRadio} = this;\n\t\tconst position = PieChart.getPositionByAngle(property.startAngle+(property.angle / 2),radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\thoverSlice(path,i,flag,e){\n\t\tif(!path) return;\n\t\tconst color = this.colors[i];\n\t\tif(flag){\n\t\t\ttransform(path,this.calTranslateByAngle(this.slicesProperties[i]));\n\t\t\tpath.style.fill = lightenDarkenColor(color,50);\n\t\t\tlet g_off = getOffset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length>0\n\t\t\t\t? this.formatted_labels[i] : this.labels[i]) + ': ';\n\t\t\tlet percent = (this.slice_totals[i]*100/this.grand_total).toFixed(1);\n\t\t\tthis.tip.set_values(x, y, title, percent + \"%\");\n\t\t\tthis.tip.show_tip();\n\t\t}else{\n\t\t\ttransform(path,'translate3d(0,0,0)');\n\t\t\tthis.tip.hide_tip();\n\t\t\tpath.style.fill = color;\n\t\t}\n\t}\n\n\tmouseMove(e){\n\t\tconst target = e.target;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevAcitve = this.curActiveSlice;\n\t\tfor(let i = 0; i < this.slices.length; i++){\n\t\t\tif(target === this.slices[i]){\n\t\t\t\tthis.hoverSlice(prevAcitve,prevIndex,false);\n\t\t\t\tthis.curActiveSlice = target;\n\t\t\t\tthis.curActiveSliceIndex = i;\n\t\t\t\tthis.hoverSlice(target,i,true,e);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tmouseLeave(){\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\n\t}\n\tbindTooltip() {\n\t\t// this.drawArea.addEventListener('mousemove',this.mouseMove);\n\t\t// this.drawArea.addEventListener('mouseleave',this.mouseLeave);\n\t}\n\n\trenderLegend() {\n\t\tlet x_values = this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t? this.formatted_labels : this.labels;\n\t\tthis.legend_totals.map((d, i) => {\n\t\t\tconst color = this.colors[i];\n\n\t\t\tif(d) {\n\t\t\t\tlet stats = $.create('div', {\n\t\t\t\t\tclassName: 'stats',\n\t\t\t\t\tinside: this.statsWrapper\n\t\t\t\t});\n\t\t\t\tstats.innerHTML = `<span class=\"indicator\">\n\t\t\t\t\t<i style=\"background-color:${color};\"></i>\n\t\t\t\t\t<span class=\"text-muted\">${x_values[i]}:</span>\n\t\t\t\t\t${d}\n\t\t\t\t</span>`;\n\t\t\t}\n\t\t});\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { makeSVGGroup, makeHeatSquare, makeText } from '../utils/draw';\nimport { addDays, getDdMmYyyy, getWeeksBetween } from '../utils/date-utils';\nimport { calcDistribution, getMaxCheckpoint } from '../utils/intervals';\nimport { isValidColor } from '../utils/colors';\n\nexport default class Heatmap extends BaseChart {\n\tconstructor(parent, options) {\n\t\tsuper(parent, options);\n\n\t\tthis.type = 'heatmap';\n\n\t\tthis.domain = options.domain || '';\n\t\tthis.subdomain = options.subdomain || '';\n\t\tthis.data = options.data || {};\n\t\tthis.discrete_domains = options.discrete_domains || 1;\n\t\tthis.count_label = options.count_label || '';\n\n\t\tlet today = new Date();\n\t\tthis.start = options.start || addDays(today, 365);\n\n\t\tlet legend_colors = (options.legend_colors || []).slice(0, 5);\n\t\tthis.legend_colors = this.validate_colors(legend_colors)\n\t\t\t? legend_colors\n\t\t\t: ['#ebedf0', '#c6e48b', '#7bc96f', '#239a3b', '#196127'];\n\n\t\t// Fixed 5-color theme,\n\t\t// More colors are difficult to parse visually\n\t\tthis.distribution_size = 5;\n\n\t\tthis.translateX = 0;\n\t\tthis.setup();\n\t}\n\n\tvalidate_colors(colors) {\n\t\tif(colors.length < 5) return 0;\n\n\t\tlet valid = 1;\n\t\tcolors.forEach(function(string) {\n\t\t\tif(!isValidColor(string)) {\n\t\t\t\tvalid = 0;\n\t\t\t\tconsole.warn('\"' + string + '\" is not a valid color.');\n\t\t\t}\n\t\t}, this);\n\n\t\treturn valid;\n\t}\n\n\tconfigure() {\n\t\tsuper.configure();\n\t\tthis.today = new Date();\n\n\t\tif(!this.start) {\n\t\t\tthis.start = new Date();\n\t\t\tthis.start.setFullYear( this.start.getFullYear() - 1 );\n\t\t}\n\t\tthis.first_week_start = new Date(this.start.toDateString());\n\t\tthis.last_week_start = new Date(this.today.toDateString());\n\t\tif(this.first_week_start.getDay() !== 7) {\n\t\t\taddDays(this.first_week_start, (-1) * this.first_week_start.getDay());\n\t\t}\n\t\tif(this.last_week_start.getDay() !== 7) {\n\t\t\taddDays(this.last_week_start, (-1) * this.last_week_start.getDay());\n\t\t}\n\t\tthis.no_of_cols = getWeeksBetween(this.first_week_start + '', this.last_week_start + '') + 1;\n\t}\n\n\tcalcWidth() {\n\t\tthis.baseWidth = (this.no_of_cols + 3) * 12 ;\n\n\t\tif(this.discrete_domains) {\n\t\t\tthis.baseWidth += (12 * 12);\n\t\t}\n\t}\n\n\tmakeChartArea() {\n\t\tsuper.makeChartArea();\n\t\tthis.domainLabelGroup = makeSVGGroup(this.drawArea,\n\t\t\t'domain-label-group chart-label');\n\n\t\tthis.dataGroups = makeSVGGroup(this.drawArea,\n\t\t\t'data-groups',\n\t\t\t`translate(0, 20)`\n\t\t);\n\t\t// Array.prototype.slice.call(\n\t\t// \tthis.container.querySelectorAll('.graph-stats-container, .sub-title, .title')\n\t\t// ).map(d => {\n\t\t// \td.style.display = 'None';\n\t\t// });\n\t\t// this.chartWrapper.style.marginTop = '0px';\n\t\t// this.chartWrapper.style.paddingTop = '0px';\n\t}\n\n\tcalc() {\n\n\t\tlet data_values = Object.keys(this.data).map(key => this.data[key]);\n\t\tthis.distribution = calcDistribution(data_values, this.distribution_size);\n\n\t\tthis.month_names = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n\t\t\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n\t\t];\n\t}\n\n\trender() {\n\t\tthis.renderAllWeeksAndStoreXValues(this.no_of_cols);\n\t}\n\n\trenderAllWeeksAndStoreXValues(no_of_weeks) {\n\t\t// renderAllWeeksAndStoreXValues\n\t\tthis.domainLabelGroup.textContent = '';\n\t\tthis.dataGroups.textContent = '';\n\n\t\tlet current_week_sunday = new Date(this.first_week_start);\n\t\tthis.week_col = 0;\n\t\tthis.current_month = current_week_sunday.getMonth();\n\n\t\tthis.months = [this.current_month + ''];\n\t\tthis.month_weeks = {}, this.month_start_points = [];\n\t\tthis.month_weeks[this.current_month] = 0;\n\t\tthis.month_start_points.push(13);\n\n\t\tfor(var i = 0; i < no_of_weeks; i++) {\n\t\t\tlet data_group, month_change = 0;\n\t\t\tlet day = new Date(current_week_sunday);\n\n\t\t\t[data_group, month_change] = this.get_week_squares_group(day, this.week_col);\n\t\t\tthis.dataGroups.appendChild(data_group);\n\t\t\tthis.week_col += 1 + parseInt(this.discrete_domains && month_change);\n\t\t\tthis.month_weeks[this.current_month]++;\n\t\t\tif(month_change) {\n\t\t\t\tthis.current_month = (this.current_month + 1) % 12;\n\t\t\t\tthis.months.push(this.current_month + '');\n\t\t\t\tthis.month_weeks[this.current_month] = 1;\n\t\t\t}\n\t\t\taddDays(current_week_sunday, 7);\n\t\t}\n\t\tthis.render_month_labels();\n\t}\n\n\tget_week_squares_group(current_date, index) {\n\t\tconst no_of_weekdays = 7;\n\t\tconst square_side = 10;\n\t\tconst cell_padding = 2;\n\t\tconst step = 1;\n\t\tconst today_time = this.today.getTime();\n\n\t\tlet month_change = 0;\n\t\tlet week_col_change = 0;\n\n\t\tlet data_group = makeSVGGroup(this.dataGroups, 'data-group');\n\n\t\tfor(var y = 0, i = 0; i < no_of_weekdays; i += step, y += (square_side + cell_padding)) {\n\t\t\tlet data_value = 0;\n\t\t\tlet colorIndex = 0;\n\n\t\t\tlet current_timestamp = current_date.getTime()/1000;\n\t\t\tlet timestamp = Math.floor(current_timestamp - (current_timestamp % 86400)).toFixed(1);\n\n\t\t\tif(this.data[timestamp]) {\n\t\t\t\tdata_value = this.data[timestamp];\n\t\t\t}\n\n\t\t\tif(this.data[Math.round(timestamp)]) {\n\t\t\t\tdata_value = this.data[Math.round(timestamp)];\n\t\t\t}\n\n\t\t\tif(data_value) {\n\t\t\t\tcolorIndex = getMaxCheckpoint(data_value, this.distribution);\n\t\t\t}\n\n\t\t\tlet x = 13 + (index + week_col_change) * 12;\n\n\t\t\tlet dataAttr = {\n\t\t\t\t'data-date': getDdMmYyyy(current_date),\n\t\t\t\t'data-value': data_value,\n\t\t\t\t'data-day': current_date.getDay()\n\t\t\t};\n\n\t\t\tlet heatSquare = makeHeatSquare('day', x, y, square_side,\n\t\t\t\tthis.legend_colors[colorIndex], dataAttr);\n\n\t\t\tdata_group.appendChild(heatSquare);\n\n\t\t\tlet next_date = new Date(current_date);\n\t\t\taddDays(next_date, 1);\n\t\t\tif(next_date.getTime() > today_time) break;\n\n\n\t\t\tif(next_date.getMonth() - current_date.getMonth()) {\n\t\t\t\tmonth_change = 1;\n\t\t\t\tif(this.discrete_domains) {\n\t\t\t\t\tweek_col_change = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.month_start_points.push(13 + (index + week_col_change) * 12);\n\t\t\t}\n\t\t\tcurrent_date = next_date;\n\t\t}\n\n\t\treturn [data_group, month_change];\n\t}\n\n\trender_month_labels() {\n\t\t// this.first_month_label = 1;\n\t\t// if (this.first_week_start.getDate() > 8) {\n\t\t// \tthis.first_month_label = 0;\n\t\t// }\n\t\t// this.last_month_label = 1;\n\n\t\t// let first_month = this.months.shift();\n\t\t// let first_month_start = this.month_start_points.shift();\n\t\t// render first month if\n\n\t\t// let last_month = this.months.pop();\n\t\t// let last_month_start = this.month_start_points.pop();\n\t\t// render last month if\n\n\t\tthis.months.shift();\n\t\tthis.month_start_points.shift();\n\t\tthis.months.pop();\n\t\tthis.month_start_points.pop();\n\n\t\tthis.month_start_points.map((start, i) => {\n\t\t\tlet month_name =  this.month_names[this.months[i]].substring(0, 3);\n\t\t\tlet text = makeText('y-value-text', start+12, 10, month_name);\n\t\t\tthis.domainLabelGroup.appendChild(text);\n\t\t});\n\t}\n\n\tbindTooltip() {\n\t\tArray.prototype.slice.call(\n\t\t\tdocument.querySelectorAll(\".data-group .day\")\n\t\t).map(el => {\n\t\t\tel.addEventListener('mouseenter', (e) => {\n\t\t\t\tlet count = e.target.getAttribute('data-value');\n\t\t\t\tlet date_parts = e.target.getAttribute('data-date').split('-');\n\n\t\t\t\tlet month = this.month_names[parseInt(date_parts[1])-1].substring(0, 3);\n\n\t\t\t\tlet g_off = this.chartWrapper.getBoundingClientRect(), p_off = e.target.getBoundingClientRect();\n\n\t\t\t\tlet width = parseInt(e.target.getAttribute('width'));\n\t\t\t\tlet x = p_off.left - g_off.left + (width+2)/2;\n\t\t\t\tlet y = p_off.top - g_off.top - (width+2)/2;\n\t\t\t\tlet value = count + ' ' + this.count_label;\n\t\t\t\tlet name = ' on ' + month + ' ' + date_parts[0] + ', ' + date_parts[2];\n\n\t\t\t\tthis.tip.set_values(x, y, name, value, [], 1);\n\t\t\t\tthis.tip.show_tip();\n\t\t\t});\n\t\t});\n\t}\n\n\tupdate(data) {\n\t\tsuper.update(data);\n\t\tthis.bindTooltip();\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { dataPrep, zeroDataPrep } from './axis-chart-utils';\nimport { Y_AXIS_MARGIN } from '../utils/constants';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset, fire } from '../utils/dom';\nimport { calcChartIntervals, getIntervalSize, getValueRange, getZeroIndex, scale } from '../utils/intervals';\nimport { floatTwo } from '../utils/helpers';\nimport { makeOverlay, updateOverlay } from '../utils/draw';\nimport { MIN_BAR_PERCENT_HEIGHT, DEFAULT_AXIS_CHART_TYPE, BAR_CHART_SPACE_RATIO, LINE_CHART_DOT_SIZE } from '../utils/constants';\n\nexport default class AxisChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.isSeries = args.isSeries;\n\t\tthis.valuesOverPoints = args.valuesOverPoints;\n\t\tthis.formatTooltipY = args.formatTooltipY;\n\t\tthis.formatTooltipX = args.formatTooltipX;\n\t\tthis.barOptions = args.barOptions || {};\n\t\tthis.lineOptions = args.lineOptions || {};\n\t\tthis.type = args.type || 'line';\n\n\t\tthis.xAxisMode = args.xAxisMode || 'span';\n\t\tthis.yAxisMode = args.yAxisMode || 'span';\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {3\n\t\tsuper.configure();\n\t\tthis.config.xAxisMode = args.xAxisMode;\n\t\tthis.config.yAxisMode = args.yAxisMode;\n\t}\n\n\tsetMargins() {\n\t\tsuper.setMargins();\n\t\tthis.leftMargin = Y_AXIS_MARGIN;\n\t\tthis.rightMargin = Y_AXIS_MARGIN;\n\t}\n\n\tprepareData(data=this.data) {\n\t\treturn dataPrep(data, this.type);\n\t}\n\n\tprepareFirstData(data=this.data) {\n\t\treturn zeroDataPrep(data);\n\t}\n\n\tcalc() {\n\t\tthis.calcXPositions();\n\t\tthis.calcYAxisParameters(this.getAllYValues(), this.type === 'line');\n\t}\n\n\tcalcXPositions(s=this.state) {\n\t\tlet labels = this.data.labels;\n\t\ts.datasetLength = labels.length;\n\n\t\ts.unitWidth = this.width/(s.datasetLength);\n\t\t// Default, as per bar, and mixed. Only line will be a special case\n\t\ts.xOffset = s.unitWidth/2;\n\n\t\t// // For a pure Line Chart\n\t\t// s.unitWidth = this.width/(s.datasetLength - 1);\n\t\t// s.xOffset = 0;\n\n\t\ts.xAxis = {\n\t\t\tlabels: labels,\n\t\t\tpositions: labels.map((d, i) =>\n\t\t\t\tfloatTwo(s.xOffset + i * s.unitWidth)\n\t\t\t)\n\t\t};\n\t}\n\n\tcalcYAxisParameters(dataValues, withMinimum = 'false') {\n\t\tconst yPts = calcChartIntervals(dataValues, withMinimum);\n\t\tconst scaleMultiplier = this.height / getValueRange(yPts);\n\t\tconst intervalHeight = getIntervalSize(yPts) * scaleMultiplier;\n\t\tconst zeroLine = this.height - (getZeroIndex(yPts) * intervalHeight);\n\n\t\tthis.state.yAxis = {\n\t\t\tlabels: yPts,\n\t\t\tpositions: yPts.map(d => zeroLine - d * scaleMultiplier),\n\t\t\tscaleMultiplier: scaleMultiplier,\n\t\t\tzeroLine: zeroLine,\n\t\t}\n\n\t\t// Dependent if above changes\n\t\tthis.calcDatasetPoints();\n\t\tthis.calcYExtremes();\n\t\tthis.calcYRegions();\n\t}\n\n\tcalcDatasetPoints() {\n\t\tlet s = this.state;\n\t\tlet scaleAll = values => values.map(val => scale(val, s.yAxis));\n\n\t\ts.datasets = this.data.datasets.map((d, i) => {\n\t\t\tlet values = d.values;\n\t\t\tlet cumulativeYs = d.cumulativeYs || [];\n\t\t\treturn {\n\t\t\t\tname: d.name,\n\t\t\t\tindex: i,\n\t\t\t\tchartType: d.chartType,\n\n\t\t\t\tvalues: values,\n\t\t\t\tyPositions: scaleAll(values),\n\n\t\t\t\tcumulativeYs: cumulativeYs,\n\t\t\t\tcumulativeYPos: scaleAll(cumulativeYs),\n\t\t\t};\n\t\t});\n\t}\n\n\tcalcYExtremes() {\n\t\tlet s = this.state;\n\t\tif(this.barOptions.stacked) {\n\t\t\ts.yExtremes = s.datasets[s.datasets.length - 1].cumulativeYPos;\n\t\t\treturn;\n\t\t}\n\t\ts.yExtremes = new Array(s.datasetLength).fill(9999);\n\t\ts.datasets.map((d, i) => {\n\t\t\td.yPositions.map((pos, j) => {\n\t\t\t\tif(pos < s.yExtremes[j]) {\n\t\t\t\t\ts.yExtremes[j] = pos;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tcalcYRegions() {\n\t\tlet s = this.state;\n\t\tif(this.data.yMarkers) {\n\t\t\tthis.state.yMarkers = this.data.yMarkers.map(d => {\n\t\t\t\td.position = scale(d.value, s.yAxis);\n\t\t\t\td.label += ': ' + d.value;\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t\tif(this.data.yRegions) {\n\t\t\tthis.state.yRegions = this.data.yRegions.map(d => {\n\t\t\t\td.start = scale(d.start, s.yAxis);\n\t\t\t\td.end = scale(d.end, s.yAxis);\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t}\n\n\tgetAllYValues() {\n\t\t// TODO: yMarkers, regions, sums, every Y value ever\n\t\tlet key = 'values';\n\n\t\tif(this.barOptions.stacked) {\n\t\t\tkey = 'cumulativeYs';\n\t\t\tlet cumulative = new Array(this.state.datasetLength).fill(0);\n\t\t\tthis.data.datasets.map((d, i) => {\n\t\t\t\tlet values = this.data.datasets[i].values;\n\t\t\t\td[key] = cumulative = cumulative.map((c, i) => c + values[i]);\n\t\t\t});\n\t\t}\n\n\t\treturn [].concat(...this.data.datasets.map(d => d[key]));\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'yAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.yAxisMode,\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t}\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'xAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.xAxisMode,\n\t\t\t\t\theight: this.height,\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t}\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'yRegions',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t}\n\t\t\t],\n\t\t];\n\n\t\tcomponentConfigs.map(args => {\n\t\t\targs.push(\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state[args[0]];\n\t\t\t\t}.bind(this)\n\t\t\t);\n\t\t});\n\n\t\tlet barDatasets = this.state.datasets.filter(d => d.chartType === 'bar');\n\t\tlet lineDatasets = this.state.datasets.filter(d => d.chartType === 'line');\n\n\t\t// console.log('barDatasets', barDatasets, this.state.datasets);\n\n\t\tlet barsConfigs = barDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'barGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tstacked: this.barOptions.stacked,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.valuesOverPoints,\n\t\t\t\t\tminHeight: this.height * MIN_BAR_PERCENT_HEIGHT,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\t\t\t\t\tlet stacked = this.barOptions.stacked;\n\n\t\t\t\t\tlet spaceRatio = this.barOptions.spaceRatio || BAR_CHART_SPACE_RATIO;\n\t\t\t\t\tlet barsWidth = s.unitWidth * (1 - spaceRatio);\n\t\t\t\t\tlet barWidth = barsWidth/(stacked ? 1 : barDatasets.length);\n\n\t\t\t\t\tlet xPositions = s.xAxis.positions.map(x => x - barsWidth/2);\n\t\t\t\t\tif(!stacked) {\n\t\t\t\t\t\txPositions = xPositions.map(p => p + barWidth * index);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet labels = new Array(s.datasetLength).fill('');\n\t\t\t\t\tif(this.valuesOverPoints) {\n\t\t\t\t\t\tif(stacked && d.index === s.datasets.length - 1) {\n\t\t\t\t\t\t\tlabels = d.cumulativeYs;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlabels = d.values;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet offsets = new Array(s.datasetLength).fill(0);\n\t\t\t\t\tif(stacked) {\n\t\t\t\t\t\toffsets = d.yPositions.map((y, j) => y - d.cumulativeYPos[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: xPositions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\t\t\t\t\t\toffsets: offsets,\n\t\t\t\t\t\t// values: d.values,\n\t\t\t\t\t\tlabels: labels,\n\n\t\t\t\t\t\tzeroLine: s.yAxis.zeroLine,\n\t\t\t\t\t\tbarsWidth: barsWidth,\n\t\t\t\t\t\tbarWidth: barWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet lineConfigs = lineDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'lineGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tsvgDefs: this.svgDefs,\n\t\t\t\t\theatline: this.lineOptions.heatline,\n\t\t\t\t\tregionFill: this.lineOptions.regionFill,\n\t\t\t\t\thideDots: this.lineOptions.hideDots,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.valuesOverPoints,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: s.xAxis.positions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\n\t\t\t\t\t\tvalues: d.values,\n\n\t\t\t\t\t\tzeroLine: s.yAxis.zeroLine,\n\t\t\t\t\t\tradius: this.lineOptions.dotSize || LINE_CHART_DOT_SIZE,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet markerConfigs = [\n\t\t\t[\n\t\t\t\t'yMarkers',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t}\n\t\t\t]\n\t\t];\n\n\t\tmarkerConfigs.map(args => {\n\t\t\targs.push(\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state[args[0]];\n\t\t\t\t}.bind(this)\n\t\t\t);\n\t\t});\n\n\t\tcomponentConfigs = componentConfigs.concat(barsConfigs, lineConfigs, markerConfigs);\n\n\t\tlet optionals = ['yMarkers', 'yRegions'];\n\t\tthis.dataUnitComponents = [];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.filter(args => !optionals.includes(args[0]) || this.state[args[0]])\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\tif(args[0].includes('lineGraph') || args[0].includes('barGraph')) {\n\t\t\t\t\tthis.dataUnitComponents.push(component);\n\t\t\t\t}\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tbindTooltip() {\n\t\t// NOTE: could be in tooltip itself, as it is a given functionality for its parent\n\t\tthis.chartWrapper.addEventListener('mousemove', (e) => {\n\t\t\tlet o = getOffset(this.chartWrapper);\n\t\t\tlet relX = e.pageX - o.left - this.leftMargin;\n\t\t\tlet relY = e.pageY - o.top - this.translateY;\n\n\t\t\tif(relY < this.height + this.translateY * 2) {\n\t\t\t\tthis.mapTooltipXPosition(relX);\n\t\t\t} else {\n\t\t\t\tthis.tip.hide_tip();\n\t\t\t}\n\t\t});\n\t}\n\n\tmapTooltipXPosition(relX) {\n\t\tlet s = this.state;\n\t\tif(!s.yExtremes) return;\n\n\t\tlet titles = s.xAxis.labels;\n\t\tif(this.formatTooltipX && this.formatTooltipX(titles[0])) {\n\t\t\ttitles = titles.map(d=>this.formatTooltipX(d));\n\t\t}\n\n\t\tlet formatY = this.formatTooltipY && this.formatTooltipY(this.y[0].values[0]);\n\n\t\tfor(var i=s.datasetLength - 1; i >= 0 ; i--) {\n\t\t\tlet xVal = s.xAxis.positions[i];\n\t\t\t// let delta = i === 0 ? s.unitWidth : xVal - s.xAxis.positions[i-1];\n\t\t\tif(relX > xVal - s.unitWidth/2) {\n\t\t\t\tlet x = xVal + this.leftMargin;\n\t\t\t\tlet y = s.yExtremes[i] + this.translateY;\n\n\t\t\t\tlet values = this.data.datasets.map((set, j) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttitle: set.title,\n\t\t\t\t\t\tvalue: formatY ? this.formatTooltipY(set.values[i]) : set.values[i],\n\t\t\t\t\t\tcolor: this.colors[j],\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\tthis.tip.set_values(x, y, titles[i], '', values);\n\t\t\t\tthis.tip.show_tip();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tmakeOverlays() {\n\t\t// Just make one out of the first element\n\t\t// let index = this.xAxisLabels.length - 1;\n\t\t// let unit = this.y[0].svg_units[index];\n\t\t// this.setCurrentDataPoint(index);\n\n\t\t// if(this.overlay) {\n\t\t// \tthis.overlay.parentNode.removeChild(this.overlay);\n\t\t// }\n\n\t\t// this.overlay = unit.cloneNode();\n\t\t// this.overlay.style.fill = '#000000';\n\t\t// this.overlay.style.opacity = '0.4';\n\t\t// this.drawArea.appendChild(this.overlay);\n\t\tthis.overlayGuides = this.dataUnitComponents.map(c => {\n\t\t\treturn {\n\t\t\t\ttype: c.unitType,\n\t\t\t\toverlay: undefined,\n\t\t\t\tunits: c.store,\n\t\t\t}\n\t\t});\n\n\t\tthis.state.currentIndex = 0;\n\n\t\t// Render overlays\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\t\t\td.overlay = makeOverlay[d.type](currentUnit);\n\t\t\tthis.drawArea.appendChild(d.overlay);\n\t\t})\n\t}\n\n\tbindOverlay() {\n\t\t// on event, update overlay\n\t\tthis.parent.addEventListener('data-select', (e) => {\n\t\t\tthis.updateOverlay(e.svg_unit);\n\t\t});\n\t}\n\n\tbindUnits(units_array) {\n\t\t// units_array.map(unit => {\n\t\t// \tunit.addEventListener('click', () => {\n\t\t// \t\tlet index = unit.getAttribute('data-point-index');\n\t\t// \t\tthis.setCurrentDataPoint(index);\n\t\t// \t});\n\t\t// });\n\t}\n\n\tupdateOverlay() {\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\t\t\tupdateOverlay[d.type](currentUnit, d.overlay);\n\t\t})\n\t}\n\n\tonLeftArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex - 1);\n\t}\n\n\tonRightArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex + 1);\n\t}\n\n\tgetDataPoint(index=this.state.currentIndex) {\n\t\t// check for length\n\t\tlet data_point = {\n\t\t\tindex: index\n\t\t};\n\t\t// let y = this.y[0];\n\t\t// ['svg_units', 'yUnitPositions', 'values'].map(key => {\n\t\t// \tlet data_key = key.slice(0, key.length-1);\n\t\t// \tdata_point[data_key] = y[key][index];\n\t\t// });\n\t\t// data_point.label = this.xAxis.labels[index];\n\t\treturn data_point;\n\t}\n\n\tsetCurrentDataPoint(index) {\n\t\tlet s = this.state;\n\t\tindex = parseInt(index);\n\t\tif(index < 0) index = 0;\n\t\tif(index >= s.xAxis.labels.length) index = s.xAxis.labels.length - 1;\n\t\tif(index === s.currentIndex) return;\n\t\ts.currentIndex = index;\n\t\tfire(this.parent, \"data-select\", this.getDataPoint());\n\t}\n\n\t// API\n\n\taddDataPoint(label, datasetValues, index=this.state.datasetLength) {\n\t\tsuper.addDataPoint(label, datasetValues, index);\n\t\t// console.log(label, datasetValues, this.data.labels);\n\t\tthis.data.labels.splice(index, 0, label);\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\td.values.splice(index, 0, datasetValues[i]);\n\t\t});\n\t\t// console.log(this.data);\n\t\tthis.update(this.data);\n\t}\n\n\tremoveDataPoint(index = this.state.datasetLength-1) {\n\t\tsuper.removeDataPoint(index);\n\t\tthis.data.labels.splice(index, 1);\n\t\tthis.data.datasets.map(d => {\n\t\t\td.values.splice(index, 1);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\t// getDataPoint(index = 0) {}\n\t// setCurrentDataPoint(point) {}\n\n\tupdateDataset(datasetValues, index=0) {\n\t\tthis.data.datasets[index].values = datasetValues;\n\t\tthis.update(this.data);\n\t}\n\t// addDataset(dataset, index) {}\n\t// removeDataset(index = 0) {}\n\n\t// updateDatasets(datasets) {}\n\n\t// updateDataPoint(dataPoint, index = 0) {}\n\t// addDataPoint(dataPoint, index = 0) {}\n\t// removeDataPoint(index = 0) {}\n}\n\n\n// keep a binding at the end of chart\n\n"],"names":["expr","con","document","querySelector","getOffset","element","rect","getBoundingClientRect","top","documentElement","scrollTop","body","left","scrollLeft","isElementInViewport","el","bottom","window","innerHeight","clientHeight","right","innerWidth","clientWidth","getElementContentWidth","styles","getComputedStyle","padding","parseFloat","paddingLeft","paddingRight","fire","target","type","properties","evt","createEvent","initEvent","j","dispatchEvent","floatTwo","d","toFixed","fillArray","array","count","start","length","fillerArray","Array","Math","abs","fill","concat","getStringWidth","string","charWidth","getBarHeightAndYAttr","yTop","zeroLine","height","y","equilizeNoOfElements","array1","array2","extra_count","translate","unit","oldCoord","newCoord","duration","old","join","transform","STD_EASING","translateVertLine","xLine","newX","oldX","MARKER_LINE_ANIM_DUR","translateHoriLine","yLine","newY","oldY","animateRegion","rectGroup","newY1","newY2","oldY2","newHeight","childNodes","stroke-dasharray","getAttribute","animateBar","bar","x","width","offset","nodeName","UNIT_ANIM_DUR","split","slice","animateDot","dot","cx","cy","animatePath","paths","newXList","newYList","pathComponents","pathStr","map","i","animPath","path","PATH_ANIM_DUR","push","region","regStartPt","regEndPt","animRegion","$","createSVG","tag","o","createElementNS","val","appendChild","ref","parentNode","insertBefore","keys","style","prop","setAttribute","renderVerticalGradient","svgDefElem","gradientId","setGradientStop","gradElem","color","opacity","makeSVGContainer","parent","className","makeSVGDefs","svgContainer","makeSVGGroup","makePath","makeGradient","lighter","gradientDef","opacities","makeHeatSquare","size","data","args","key","makeText","content","FONT_SIZE","makeVertLine","label","y1","y2","options","stroke","BASE_LINE_COLOR","l","text","LABEL_MARGIN","line","makeHoriLine","x1","x2","lineType","pos","mode","AXIS_TICK_LENGTH","yMarker","labelSvg","yRegion","datasetBar","index","meta","minHeight","group","datasetDot","radius","getPaths","xList","yList","pointsStr","heatline","gradient_id","svgDefs","regionFill","gradient_id_region","limitColor","r","lightenDarkenColor","amt","col","getColor","usePound","num","parseInt","b","g","toString","isValidColor","test","getDifferentChart","current_type","ALL_CHART_TYPES","includes","error","COMPATIBLE_CHARTS","useColor","COLOR_COMPATIBLE_CHARTS","Chart","title","colors","undefined","animateSVGElement","props","dur","easingType","oldValues","animElement","cloneNode","newElement","attributeName","animateElement","currentValue","value","animAttr","EASING","webkitTransform","msTransform","mozTransform","oTransform","animateSVG","elements","newElements","animElements","replaceChild","animSvg","runSMILAnimation","svgElement","elementsToAnimate","animSvgElement","removeChild","REPLACE_ALL_NEW_DUR","treatAsUtc","dateStr","result","Date","setMinutes","getMinutes","getTimezoneOffset","getDdMmYyyy","date","dd","getDate","mm","getMonth","getFullYear","getWeeksBetween","startDateStr","endDateStr","ceil","getDaysBetween","addDays","numberOfDays","setDate","isNaN","mantissa","exponent","sig","isFinite","exp","floor","log10","pow","getChartRangeIntervals","max","min","upperBound","lowerBound","range","noOfParts","partSize","intervals","getChartIntervals","maxValue","minValue","normalize","normalMaxValue","normalMinValue","calcChartIntervals","values","getPositiveFirstIntervals","absMinValue","intervalSize","unshift","withMinimum","pseudoMaxValue","pseudoMinValue","reverse","getZeroIndex","yPts","interval","getIntervalSize","indexOf","orderedArray","getValueRange","scale","yAxis","scaleMultiplier","calcDistribution","distributionSize","dataMaxValue","distributionStep","distribution","checkpoint","getMaxCheckpoint","filter","dataPrep","labels","datasetLength","datasets","zeroArray","vals","chartType","AXIS_DATASET_CHART_TYPES","yRegions","end","zeroDataPrep","realData","getComponent","name","constants","getData","Object","componentConfigs","k","config","assign","ChartComponent","getChartByType","AxisChart","chartTypes","create","createElement","SvgTip","title_name","title_value","list_values","title_value_first","setup","make_tooltip","calc_position","container","this","hide_tip","data_point_list","addEventListener","innerHTML","set","_this2","li","offsetWidth","offsetHeight","max_left","pointer","pointer_offset","refresh","makeOverlay","transformValue","overlay","updateOverlay","attributes","attr","specified","nodeValue","PRESET_COLOR_MAP","DEFAULT_COLORS","BaseChart","rawChartArgs","HTMLElement","Error","subtitle","argHeight","prepareData","prepareFirstData","showLegend","isNavigable","state","currentIndex","overlays","configure","setColors","setMargins","_this","draw","list","baseHeight","translateY","leftMargin","rightMargin","validate","_setup","makeContainer","makeTooltip","components","Map","chartWrapper","statsWrapper","tip","bindTooltip","init","calcWidth","calc","makeChartArea","setupComponents","forEach","c","drawArea","make","update","renderLegend","setupNavigation","baseWidth","render","animate","svg","updateNav","overlayGuides","updateOverlays","makeOverlays","bindUnits","bindOverlay","keyActions","onEnterKey","bind","onLeftArrow","onUpArrow","onRightArrow","onDownArrow","e","_this4","event","keyCode","point","dataset","dataPoint","PercentageChart","max_slices","max_legend_points","marginTop","marginBottom","paddingTop","chart","percentageBar","grand_total","sliceTotals","reduce","a","slices","total","all_totals","totals","sort","sum_of_others","legend_totals","ANGLE_RATIO","PI","PieChart","elements_to_animate","hoverRadio","isAnimate","startAngle","clockWise","mouseMove","mouseLeave","centerX","centerY","slice_totals","startPosition","endPosition","prevSlicesProperties","slicesProperties","curAngle","originDiffAngle","_this3","diffAngle","endAngle","getPositionByAngle","prevProperty","curStart","curEnd","curPath","makeArcPath","transition","property","position","angle","flag","calTranslateByAngle","g_off","pageX","pageY","formatted_labels","percent","set_values","show_tip","prevIndex","curActiveSliceIndex","prevAcitve","curActiveSlice","hoverSlice","x_values","sin","cos","Heatmap","domain","subdomain","discrete_domains","count_label","today","legend_colors","validate_colors","distribution_size","translateX","valid","warn","setFullYear","first_week_start","toDateString","last_week_start","getDay","no_of_cols","domainLabelGroup","dataGroups","data_values","month_names","renderAllWeeksAndStoreXValues","no_of_weeks","textContent","current_week_sunday","week_col","current_month","months","month_weeks","month_start_points","data_group","month_change","day","get_week_squares_group","render_month_labels","current_date","today_time","getTime","week_col_change","square_side","data_value","colorIndex","current_timestamp","timestamp","round","dataAttr","heatSquare","next_date","shift","pop","substring","prototype","call","querySelectorAll","date_parts","month","p_off","layerClass","layerTransform","makeElements","animateElements","store","layer","oldData","positions","newData","newPos","newLabels","oldPos","oldLabels","marker","_this5","newStarts","oldStarts","unitType","yPositions","xPositions","barWidth","offsets","barsWidth","newXPos","newYPos","newOffsets","oldXPos","oldYPos","oldOffsets","dots","hideDots","valuesOverPoints","newValues","isSeries","formatTooltipY","formatTooltipX","barOptions","lineOptions","xAxisMode","yAxisMode","calcXPositions","calcYAxisParameters","getAllYValues","s","unitWidth","xOffset","xAxis","dataValues","intervalHeight","calcDatasetPoints","calcYExtremes","calcYRegions","scaleAll","cumulativeYs","stacked","yExtremes","cumulativeYPos","yMarkers","cumulative","barDatasets","lineDatasets","barsConfigs","spaceRatio","p","lineConfigs","dotSize","markerConfigs","optionals","dataUnitComponents","component","relX","mapTooltipXPosition","titles","formatY","xVal","currentUnit","units","_this6","svg_unit","units_array","_this8","setCurrentDataPoint","getDataPoint","datasetValues","splice"],"mappings":"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"}