{"version":3,"file":"frappe-charts.min.iife.js","sources":["../src/js/utils/dom.js","../src/js/utils/helpers.js","../src/js/utils/draw-utils.js","../src/js/utils/animate.js","../src/js/utils/draw.js","../src/js/utils/colors.js","../src/js/config.js","../src/js/utils/animation.js","../src/js/charts/axis-chart-utils.js","../src/js/objects/ChartComponents.js","../src/js/utils/intervals.js","../src/js/utils/date-utils.js","../src/js/chart.js","../src/js/objects/SvgTip.js","../src/js/utils/constants.js","../src/js/charts/BaseChart.js","../src/js/charts/AxisChart.js","../src/js/charts/MultiAxisChart.js","../src/js/charts/PercentageChart.js","../src/js/charts/PieChart.js","../src/js/charts/Heatmap.js"],"sourcesContent":["export function $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function findNodeIndex(node)\n{\n\tvar i = 0;\n\twhile (node.previousSibling) {\n\t\tnode = node.previousSibling;\n\t\ti++;\n\t}\n\treturn i;\n}\n\n$.create = (tag, o) => {\n\tvar element = document.createElement(tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (i in element ) {\n\t\t\telement[i] = val;\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(i, val);\n\t\t}\n\t}\n\n\treturn element;\n};\n\nexport function getOffset(element) {\n\tlet rect = element.getBoundingClientRect();\n\treturn {\n\t\t// https://stackoverflow.com/a/7436602/6495043\n\t\t// rect.top varies with scroll, so we add whatever has been\n\t\t// scrolled to it to get absolute distance from actual page top\n\t\ttop: rect.top + (document.documentElement.scrollTop || document.body.scrollTop),\n\t\tleft: rect.left + (document.documentElement.scrollLeft || document.body.scrollLeft)\n\t};\n}\n\nexport function isElementInViewport(el) {\n\t// Although straightforward: https://stackoverflow.com/a/7557433/6495043\n\tvar rect = el.getBoundingClientRect();\n\n\treturn (\n\t\trect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\n\t);\n}\n\nexport function getElementContentWidth(element) {\n\tvar styles = window.getComputedStyle(element);\n\tvar padding = parseFloat(styles.paddingLeft) +\n\t\tparseFloat(styles.paddingRight);\n\n\treturn element.clientWidth - padding;\n}\n\nexport function bind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function (event) {\n\t\t\t\telement.addEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function unbind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function(event) {\n\t\t\t\telement.removeEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function fire(target, type, properties) {\n\tvar evt = document.createEvent(\"HTMLEvents\");\n\n\tevt.initEvent(type, true, true );\n\n\tfor (var j in properties) {\n\t\tevt[j] = properties[j];\n\t}\n\n\treturn target.dispatchEvent(evt);\n}\n","/**\n * Returns the value of a number upto 2 decimal places.\n * @param {Number} d Any number\n */\nexport function floatTwo(d) {\n\treturn parseFloat(d.toFixed(2));\n}\n\n/**\n * Returns whether or not two given arrays are equal.\n * @param {Array} arr1 First array\n * @param {Array} arr2 Second array\n */\nexport function arraysEqual(arr1, arr2) {\n\tif(arr1.length !== arr2.length) return false;\n\tlet areEqual = true;\n\tarr1.map((d, i) => {\n\t\tif(arr2[i] !== d) areEqual = false;\n\t});\n\treturn areEqual;\n}\n\n/**\n * Shuffles array in place. ES6 version\n * @param {Array} array An array containing the items.\n */\nexport function shuffle(array) {\n\t// Awesomeness: https://bost.ocks.org/mike/shuffle/\n\t// https://stackoverflow.com/a/2450976/6495043\n\t// https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array?noredirect=1&lq=1\n\n\tfor (let i = array.length - 1; i > 0; i--) {\n\t\tlet j = Math.floor(Math.random() * (i + 1));\n\t\t[array[i], array[j]] = [array[j], array[i]];\n\t}\n\n\treturn array;\n}\n\n/**\n * Fill an array with extra points\n * @param {Array} array Array\n * @param {Number} count number of filler elements\n * @param {Object} element element to fill with\n * @param {Boolean} start fill at start?\n */\nexport function fillArray(array, count, element, start=false) {\n\tif(!element) {\n\t\telement = start ? array[0] : array[array.length - 1];\n\t}\n\tlet fillerArray = new Array(Math.abs(count)).fill(element);\n\tarray = start ? fillerArray.concat(array) : array.concat(fillerArray);\n\treturn array;\n}\n\n/**\n * Returns pixel width of string.\n * @param {String} string\n * @param {Number} charWidth Width of single char in pixels\n */\nexport function getStringWidth(string, charWidth) {\n\treturn (string+\"\").length * charWidth;\n}\n\nexport function bindChange(obj, getFn, setFn) {\n\treturn new Proxy(obj, {\n\t\tset: function(target, prop, value) {\n\t\t\tsetFn();\n\t\t\treturn Reflect.set(target, prop, value);\n\t\t},\n\t\tget: function(target, prop, value) {\n\t\t\tgetFn();\n\t\t\treturn Reflect.get(target, prop);\n\t\t}\n\t});\n}\n","import { fillArray } from './helpers';\n\nexport function getBarHeightAndYAttr(yTop, zeroLine) {\n\tlet height, y;\n\tif (yTop <= zeroLine) {\n\t\theight = zeroLine - yTop;\n\t\ty = yTop;\n\t} else {\n\t\theight = yTop - zeroLine;\n\t\ty = zeroLine;\n\t}\n\n\treturn [height, y];\n}\n\nexport function equilizeNoOfElements(array1, array2,\n\textra_count=array2.length - array1.length) {\n\n\t// Doesn't work if either has zero elements.\n\tif(extra_count > 0) {\n\t\tarray1 = fillArray(array1, extra_count);\n\t} else {\n\t\tarray2 = fillArray(array2, extra_count);\n\t}\n\treturn [array1, array2];\n}\n\n// let char_width = 8;\n// let allowed_space = avgUnitWidth * 1.5;\n// let allowed_letters = allowed_space / 8;\n\n// return values.map((value, i) => {\n// \tlet space_taken = getStringWidth(value, char_width) + 2;\n// \tif(space_taken > allowed_space) {\n// \t\tif(isSeries) {\n// \t\t\t// Skip some axis lines if X axis is a series\n// \t\t\tlet skips = 1;\n// \t\t\twhile((space_taken/skips)*2 > allowed_space) {\n// \t\t\t\tskips++;\n// \t\t\t}\n// \t\t\tif(i % skips !== 0) {\n// \t\t\t\treturn;\n// \t\t\t}\n// \t\t} else {\n// \t\t\tvalue = value.slice(0, allowed_letters-3) + \" ...\";\n// \t\t}\n// \t}\n","import { getBarHeightAndYAttr } from './draw-utils';\n\nexport const UNIT_ANIM_DUR = 350;\nexport const PATH_ANIM_DUR = 350;\nexport const MARKER_LINE_ANIM_DUR = UNIT_ANIM_DUR;\nexport const REPLACE_ALL_NEW_DUR = 250;\n\nexport const STD_EASING = 'easein';\n\nexport function translate(unit, oldCoord, newCoord, duration) {\n\tlet old = typeof oldCoord === 'string' ? oldCoord : oldCoord.join(', ');\n\treturn [\n\t\tunit,\n\t\t{transform: newCoord.join(', ')},\n\t\tduration,\n\t\tSTD_EASING,\n\t\t\"translate\",\n\t\t{transform: old}\n\t];\n}\n\nexport function translateVertLine(xLine, newX, oldX) {\n\treturn translate(xLine, [oldX, 0], [newX, 0], MARKER_LINE_ANIM_DUR);\n}\n\nexport function translateHoriLine(yLine, newY, oldY) {\n\treturn translate(yLine, [0, oldY], [0, newY], MARKER_LINE_ANIM_DUR);\n}\n\nexport function animateRegion(rectGroup, newY1, newY2, oldY2) {\n\tlet newHeight = newY1 - newY2;\n\tlet rect = rectGroup.childNodes[0];\n\tlet width = rect.getAttribute(\"width\");\n\tlet rectAnim = [\n\t\trect,\n\t\t{ height: newHeight, 'stroke-dasharray': `${width}, ${newHeight}` },\n\t\tMARKER_LINE_ANIM_DUR,\n\t\tSTD_EASING\n\t]\n\n\tlet groupAnim = translate(rectGroup, [0, oldY2], [0, newY2], MARKER_LINE_ANIM_DUR);\n\treturn [rectAnim, groupAnim];\n}\n\nexport function animateBar(bar, x, yTop, width, index=0, meta={}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\tif(bar.nodeName !== 'rect') {\n\t\tlet rect = bar.childNodes[0];\n\t\tlet rectAnim = [\n\t\t\trect,\n\t\t\t{width: width, height: height},\n\t\t\tUNIT_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t]\n\n\t\tlet oldCoordStr = bar.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(bar, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [rectAnim, groupAnim];\n\t} else {\n\t\treturn [[bar, {width: width, height: height, x: x, y: y}, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// bar.animate({height: args.newHeight, y: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animateDot(dot, x, y) {\n\tif(dot.nodeName !== 'circle') {\n\t\tlet oldCoordStr = dot.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(dot, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [groupAnim];\n\t} else {\n\t\treturn [[dot, {cx: x, cy: y}, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animatePath(paths, newXList, newYList, zeroLine) {\n\tlet pathComponents = [];\n\n\tlet pointsStr = newYList.map((y, i) => (newXList[i] + ',' + y));\n\tlet pathStr = pointsStr.join(\"L\");\n\n\tconst animPath = [paths.path, {d:\"M\"+pathStr}, PATH_ANIM_DUR, STD_EASING];\n\tpathComponents.push(animPath);\n\n\tif(paths.region) {\n\t\tlet regStartPt = `${newXList[0]},${zeroLine}L`;\n\t\tlet regEndPt = `L${newXList.slice(-1)[0]}, ${zeroLine}`;\n\n\t\tconst animRegion = [\n\t\t\tpaths.region,\n\t\t\t{d:\"M\" + regStartPt + pathStr + regEndPt},\n\t\t\tPATH_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\t\tpathComponents.push(animRegion);\n\t}\n\n\treturn pathComponents;\n}\n\n","import { getBarHeightAndYAttr } from './draw-utils';\nimport { getStringWidth } from './helpers';\nimport { STD_EASING, UNIT_ANIM_DUR, MARKER_LINE_ANIM_DUR, PATH_ANIM_DUR } from './animate';\nimport { DOT_OVERLAY_SIZE_INCR } from './constants';\n\n/*\n\n<filter id=\"glow\" x=\"-10%\" y=\"-10%\" width=\"120%\" height=\"120%\">\n\t<feGaussianBlur stdDeviation=\"0.5 0.5\" result=\"glow\"></feGaussianBlur>\n\t<feMerge>\n\t\t<feMergeNode in=\"glow\"></feMergeNode>\n\t\t<feMergeNode in=\"glow\"></feMergeNode>\n\t\t<feMergeNode in=\"glow\"></feMergeNode>\n\t</feMerge>\n</filter>\n\n    filter: url(#glow);\n    fill: #fff;\n\n*/\n\nconst AXIS_TICK_LENGTH = 6;\nconst LABEL_MARGIN = 4;\nexport const FONT_SIZE = 10;\nconst BASE_LINE_COLOR = '#dadada';\nconst BASE_BG_COLOR = '#F7FAFC';\n\nfunction $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function createSVG(tag, o) {\n\tvar element = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif(i === \"className\") { i = \"class\"; }\n\t\t\tif(i === \"innerHTML\") {\n\t\t\t\telement['textContent'] = val;\n\t\t\t} else {\n\t\t\t\telement.setAttribute(i, val);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn element;\n}\n\nfunction renderVerticalGradient(svgDefElem, gradientId) {\n\treturn createSVG('linearGradient', {\n\t\tinside: svgDefElem,\n\t\tid: gradientId,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: 0,\n\t\ty2: 1\n\t});\n}\n\nfunction setGradientStop(gradElem, offset, color, opacity) {\n\treturn createSVG('stop', {\n\t\t'inside': gradElem,\n\t\t'style': `stop-color: ${color}`,\n\t\t'offset': offset,\n\t\t'stop-opacity': opacity\n\t});\n}\n\nexport function makeSVGContainer(parent, className, width, height) {\n\treturn createSVG('svg', {\n\t\tclassName: className,\n\t\tinside: parent,\n\t\twidth: width,\n\t\theight: height\n\t});\n}\n\nexport function makeSVGDefs(svgContainer) {\n\treturn createSVG('defs', {\n\t\tinside: svgContainer,\n\t});\n}\n\nexport function makeSVGGroup(parent, className, transform='') {\n\treturn createSVG('g', {\n\t\tclassName: className,\n\t\tinside: parent,\n\t\ttransform: transform\n\t});\n}\n\nexport function wrapInSVGGroup(elements, className='') {\n\tlet g = createSVG('g', {\n\t\tclassName: className\n\t});\n\telements.forEach(e => g.appendChild(e));\n\treturn g;\n}\n\nexport function makePath(pathStr, className='', stroke='none', fill='none') {\n\treturn createSVG('path', {\n\t\tclassName: className,\n\t\td: pathStr,\n\t\tstyles: {\n\t\t\tstroke: stroke,\n\t\t\tfill: fill\n\t\t}\n\t});\n}\n\nexport function makeGradient(svgDefElem, color, lighter = false) {\n\tlet gradientId ='path-fill-gradient' + '-' + color + '-' +(lighter ? 'lighter' : 'default');\n\tlet gradientDef = renderVerticalGradient(svgDefElem, gradientId);\n\tlet opacities = [1, 0.6, 0.2];\n\tif(lighter) {\n\t\topacities = [0.4, 0.2, 0];\n\t}\n\n\tsetGradientStop(gradientDef, \"0%\", color, opacities[0]);\n\tsetGradientStop(gradientDef, \"50%\", color, opacities[1]);\n\tsetGradientStop(gradientDef, \"100%\", color, opacities[2]);\n\n\treturn gradientId;\n}\n\nexport function makeHeatSquare(className, x, y, size, fill='none', data={}) {\n\tlet args = {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: size,\n\t\theight: size,\n\t\tfill: 1\n\t};\n\n\tObject.keys(data).map(key => {\n\t\targs[key] = data[key];\n\t});\n\n\treturn createSVG(\"rect\", args);\n}\n\nexport function makeText(className, x, y, content) {\n\treturn createSVG('text', {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\tdy: (FONT_SIZE / 2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\tinnerHTML: content\n\t});\n}\n\nfunction makeVertLine(x, label, y1, y2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tlet l = createSVG('line', {\n\t\tclassName: 'line-vertical ' + options.className,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: y1,\n\t\ty2: y2,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: 0,\n\t\ty: y1 > y2 ? y1 + LABEL_MARGIN : y1 - LABEL_MARGIN - FONT_SIZE,\n\t\tdy: FONT_SIZE + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'middle',\n\t\tinnerHTML: label\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(${ x }, 0)`\n\t});\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nfunction makeHoriLine(y, label, x1, x2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.lineType) options.lineType = '';\n\tlet className = 'line-horizontal ' + options.className +\n\t\t(options.lineType === \"dashed\" ? \"dashed\": \"\");\n\n\tlet l = createSVG('line', {\n\t\tclassName: className,\n\t\tx1: x1,\n\t\tx2: x2,\n\t\ty1: 0,\n\t\ty2: 0,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: x1 < x2 ? x1 - LABEL_MARGIN : x1 + LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / 2 - 2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': x1 < x2 ? 'end' : 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(0, ${y})`,\n\t\t'stroke-opacity': 1\n\t});\n\n\tif(text === 0 || text === '0') {\n\t\tline.style.stroke = \"rgba(27, 31, 35, 0.6)\";\n\t}\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nexport function yLine(y, label, width, options={}) {\n\tif(!options.pos) options.pos = 'left';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\tlet x1 = -1 * AXIS_TICK_LENGTH;\n\tlet x2 = options.mode === 'span' ? width + AXIS_TICK_LENGTH : 0;\n\n\tif(options.mode === 'tick' && options.pos === 'right') {\n\t\tx1 = width + AXIS_TICK_LENGTH\n\t\tx2 = width;\n\t}\n\n\tlet offset = options.pos === 'left' ? -1 * options.offset : options.offset;\n\n\tx1 += options.offset;\n\tx2 += options.offset;\n\n\treturn makeHoriLine(y, label, x1, x2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType\n\t});\n}\n\nexport function xLine(x, label, height, options={}) {\n\tif(!options.pos) options.pos = 'bottom';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\t// Draw X axis line in span/tick mode with optional label\n\t//                        \ty2(span)\n\t// \t\t\t\t\t\t|\n\t// \t\t\t\t\t\t|\n\t//\t\t\t\tx line\t|\n\t//\t\t\t\t\t\t|\n\t// \t\t\t\t\t   \t|\n\t// ---------------------+-- y2(tick)\n\t//\t\t\t\t\t\t|\n\t//\t\t\t\t\t\t\ty1\n\n\tlet y1 = height + AXIS_TICK_LENGTH;\n\tlet y2 = options.mode === 'span' ? -1 * AXIS_TICK_LENGTH : height;\n\n\tif(options.mode === 'tick' && options.pos === 'top') {\n\t\t// top axis ticks\n\t\ty1 = -1 * AXIS_TICK_LENGTH;\n\t\ty2 = 0;\n\t}\n\n\treturn makeVertLine(x, label, y1, y2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType\n\t});\n}\n\nexport function yMarker(y, label, width, options={}) {\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: width - getStringWidth(label, 5) - LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = makeHoriLine(y, '', 0, width, {\n\t\tstroke: options.stroke || BASE_LINE_COLOR,\n\t\tclassName: options.className || '',\n\t\tlineType: options.lineType\n\t});\n\n\tline.appendChild(labelSvg);\n\n\treturn line;\n}\n\nexport function yRegion(y1, y2, width, label) {\n\t// return a group\n\tlet height = y1 - y2;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`, // remove class\n\t\tstyles: {\n\t\t\tfill: `rgba(228, 234, 239, 0.49)`,\n\t\t\tstroke: BASE_LINE_COLOR,\n\t\t\t'stroke-dasharray': `${width}, ${height}`\n\t\t},\n\t\t// 'data-point-index': index,\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: width,\n\t\theight: height\n\t});\n\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: width - getStringWidth(label, 4.5) - LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet region = createSVG('g', {\n\t\ttransform: `translate(0, ${y2})`\n\t});\n\n\tregion.appendChild(rect);\n\tregion.appendChild(labelSvg);\n\n\treturn region;\n}\n\nexport function datasetBar(x, yTop, width, color, label='', index=0, offset=0, meta={}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`,\n\t\tstyle: `fill: ${color}`,\n\t\t'data-point-index': index,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height || meta.minHeight // TODO: correct y for positive min height\n\t});\n\n\tif(!label && !label.length) {\n\t\treturn rect;\n\t} else {\n\t\trect.setAttribute('y', 0);\n\t\trect.setAttribute('x', 0);\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: width/2,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(rect);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nexport function datasetDot(x, y, radius, color, label='', index=0, meta={}) {\n\tlet dot = createSVG('circle', {\n\t\tstyle: `fill: ${color}`,\n\t\t'data-point-index': index,\n\t\tcx: x,\n\t\tcy: y,\n\t\tr: radius\n\t});\n\n\tif(!label && !label.length) {\n\t\treturn dot;\n\t} else {\n\t\tdot.setAttribute('cy', 0);\n\t\tdot.setAttribute('cx', 0);\n\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1 - radius) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(dot);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nexport function getPaths(xList, yList, color, options={}, meta={}) {\n\tlet pointsList = yList.map((y, i) => (xList[i] + ',' + y));\n\tlet pointsStr = pointsList.join(\"L\");\n\tlet path = makePath(\"M\"+pointsStr, 'line-graph-path', color);\n\n\t// HeatLine\n\tif(options.heatline) {\n\t\tlet gradient_id = makeGradient(meta.svgDefs, color);\n\t\tpath.style.stroke = `url(#${gradient_id})`;\n\t}\n\n\tlet paths = {\n\t\tpath: path\n\t}\n\n\t// Region\n\tif(options.regionFill) {\n\t\tlet gradient_id_region = makeGradient(meta.svgDefs, color, true);\n\n\t\t// TODO: use zeroLine OR minimum\n\t\tlet pathStr = \"M\" + `${xList[0]},${meta.zeroLine}L` + pointsStr + `L${xList.slice(-1)[0]},${meta.zeroLine}`;\n\t\tpaths.region = makePath(pathStr, `region-fill`, 'none', `url(#${gradient_id_region})`);\n\t}\n\n\treturn paths;\n}\n\nexport let makeOverlay = {\n\t'bar': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\toverlay.style.fill = '#000000';\n\t\toverlay.style.opacity = '0.4';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t},\n\n\t'dot': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\tlet radius = unit.getAttribute('r');\n\t\toverlay.setAttribute('r', radius + DOT_OVERLAY_SIZE_INCR);\n\t\toverlay.style.fill = '#000000';\n\t\toverlay.style.opacity = '0.4';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t}\n}\n\nexport let updateOverlay = {\n\t'bar': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['x', 'y', 'width', 'height'];\n\t\tObject.values(unit.attributes)\n\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t.map(attr => {\n\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n\n\t'dot': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['cx', 'cy'];\n\t\tObject.values(unit.attributes)\n\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t.map(attr => {\n\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t}\n}\n\n","const PRESET_COLOR_MAP = {\n\t'light-blue': '#7cd6fd',\n\t'blue': '#5e64ff',\n\t'violet': '#743ee2',\n\t'red': '#ff5858',\n\t'orange': '#ffa00a',\n\t'yellow': '#feef72',\n\t'green': '#28a745',\n\t'light-green': '#98d85b',\n\t'purple': '#b554ff',\n\t'magenta': '#ffa3ef',\n\t'black': '#36114C',\n\t'grey': '#bdd3e6',\n\t'light-grey': '#f0f4f7',\n\t'dark-grey': '#b8c2cc'\n};\n\nexport const DEFAULT_COLORS = ['light-blue', 'blue', 'violet', 'red', 'orange',\n\t'yellow', 'green', 'light-green', 'purple', 'magenta'];\n\nfunction limitColor(r){\n\tif (r > 255) return 255;\n\telse if (r < 0) return 0;\n\treturn r;\n}\n\nexport function lightenDarkenColor(color, amt) {\n\tlet col = getColor(color);\n\tlet usePound = false;\n\tif (col[0] == \"#\") {\n\t\tcol = col.slice(1);\n\t\tusePound = true;\n\t}\n\tlet num = parseInt(col,16);\n\tlet r = limitColor((num >> 16) + amt);\n\tlet b = limitColor(((num >> 8) & 0x00FF) + amt);\n\tlet g = limitColor((num & 0x0000FF) + amt);\n\treturn (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\nexport function isValidColor(string) {\n\t// https://stackoverflow.com/a/8027444/6495043\n\treturn /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(string);\n}\n\nexport const getColor = (color) => {\n\treturn PRESET_COLOR_MAP[color] || color;\n};\n","import Chart from './chart';\n\nconst ALL_CHART_TYPES = ['line', 'scatter', 'bar', 'percentage', 'heatmap', 'pie'];\n\nconst COMPATIBLE_CHARTS = {\n\tbar: ['line', 'scatter', 'percentage', 'pie'],\n\tline: ['scatter', 'bar', 'percentage', 'pie'],\n\tpie: ['line', 'scatter', 'percentage', 'bar'],\n\tscatter: ['line', 'bar', 'percentage', 'pie'],\n\tpercentage: ['bar', 'line', 'scatter', 'pie'],\n\theatmap: []\n};\n\n// Needs structure as per only labels/datasets\nconst COLOR_COMPATIBLE_CHARTS = {\n\tbar: ['line', 'scatter'],\n\tline: ['scatter', 'bar'],\n\tpie: ['percentage'],\n\tscatter: ['line', 'bar'],\n\tpercentage: ['pie'],\n\theatmap: []\n};\n\nexport function getDifferentChart(type, current_type, args) {\n\tif(type === current_type) return;\n\n\tif(!ALL_CHART_TYPES.includes(type)) {\n\t\tconsole.error(`'${type}' is not a valid chart type.`);\n\t}\n\n\tif(!COMPATIBLE_CHARTS[current_type].includes(type)) {\n\t\tconsole.error(`'${current_type}' chart cannot be converted to a '${type}' chart.`);\n\t}\n\n\t// whether the new chart can use the existing colors\n\tconst useColor = COLOR_COMPATIBLE_CHARTS[current_type].includes(type);\n\n\t// Okay, this is anticlimactic\n\t// this function will need to actually be 'changeChartType(type)'\n\t// that will update only the required elements, but for now ...\n\treturn new Chart({\n\t\tparent: args.parent,\n\t\ttitle: args.title,\n\t\tdata: args.data,\n\t\ttype: type,\n\t\theight: args.height,\n\t\tcolors: useColor ? args.colors : undefined\n\t});\n}","// Leveraging SMIL Animations\n\nimport { REPLACE_ALL_NEW_DUR } from './animate';\n\nconst EASING = {\n\tease: \"0.25 0.1 0.25 1\",\n\tlinear: \"0 0 1 1\",\n\t// easein: \"0.42 0 1 1\",\n\teasein: \"0.1 0.8 0.2 1\",\n\teaseout: \"0 0 0.58 1\",\n\teaseinout: \"0.42 0 0.58 1\"\n};\n\nfunction animateSVGElement(element, props, dur, easingType=\"linear\", type=undefined, oldValues={}) {\n\n\tlet animElement = element.cloneNode(true);\n\tlet newElement = element.cloneNode(true);\n\n\tfor(var attributeName in props) {\n\t\tlet animateElement;\n\t\tif(attributeName === 'transform') {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animateTransform\");\n\t\t} else {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animate\");\n\t\t}\n\t\tlet currentValue = oldValues[attributeName] || element.getAttribute(attributeName);\n\t\tlet value = props[attributeName];\n\n\t\tlet animAttr = {\n\t\t\tattributeName: attributeName,\n\t\t\tfrom: currentValue,\n\t\t\tto: value,\n\t\t\tbegin: \"0s\",\n\t\t\tdur: dur/1000 + \"s\",\n\t\t\tvalues: currentValue + \";\" + value,\n\t\t\tkeySplines: EASING[easingType],\n\t\t\tkeyTimes: \"0;1\",\n\t\t\tcalcMode: \"spline\",\n\t\t\tfill: 'freeze'\n\t\t};\n\n\t\tif(type) {\n\t\t\tanimAttr[\"type\"] = type;\n\t\t}\n\n\t\tfor (var i in animAttr) {\n\t\t\tanimateElement.setAttribute(i, animAttr[i]);\n\t\t}\n\n\t\tanimElement.appendChild(animateElement);\n\n\t\tif(type) {\n\t\t\tnewElement.setAttribute(attributeName, `translate(${value})`);\n\t\t} else {\n\t\t\tnewElement.setAttribute(attributeName, value);\n\t\t}\n\t}\n\n\treturn [animElement, newElement];\n}\n\nexport function transform(element, style) { // eslint-disable-line no-unused-vars\n\telement.style.transform = style;\n\telement.style.webkitTransform = style;\n\telement.style.msTransform = style;\n\telement.style.mozTransform = style;\n\telement.style.oTransform = style;\n}\n\nfunction animateSVG(svgContainer, elements) {\n\tlet newElements = [];\n\tlet animElements = [];\n\n\telements.map(element => {\n\t\tlet unit = element[0];\n\t\tlet parent = unit.parentNode;\n\n\t\tlet animElement, newElement;\n\n\t\telement[0] = unit;\n\t\t[animElement, newElement] = animateSVGElement(...element);\n\n\t\tnewElements.push(newElement);\n\t\tanimElements.push([animElement, parent]);\n\n\t\tparent.replaceChild(animElement, unit);\n\t});\n\n\tlet animSvg = svgContainer.cloneNode(true);\n\n\tanimElements.map((animElement, i) => {\n\t\tanimElement[1].replaceChild(newElements[i], animElement[0]);\n\t\telements[i][0] = newElements[i];\n\t});\n\n\treturn animSvg;\n}\n\nexport function runSMILAnimation(parent, svgElement, elementsToAnimate) {\n\tif(elementsToAnimate.length === 0) return;\n\n\tlet animSvgElement = animateSVG(svgElement, elementsToAnimate);\n\tif(svgElement.parentNode == parent) {\n\t\tparent.removeChild(svgElement);\n\t\tparent.appendChild(animSvgElement);\n\n\t}\n\n\t// Replace the new svgElement (data has already been replaced)\n\tsetTimeout(() => {\n\t\tif(animSvgElement.parentNode == parent) {\n\t\t\tparent.removeChild(animSvgElement);\n\t\t\tparent.appendChild(svgElement);\n\t\t}\n\t}, REPLACE_ALL_NEW_DUR);\n}\n","import { floatTwo, fillArray } from '../utils/helpers';\nimport { DEFAULT_AXIS_CHART_TYPE, AXIS_DATASET_CHART_TYPES } from '../utils/constants';\n\nexport function dataPrep(data, type) {\n\tdata.labels = data.labels || [];\n\n\tlet datasetLength = data.labels.length;\n\n\t// Datasets\n\tlet datasets = data.datasets;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\tif(!datasets) {\n\t\t// default\n\t\tdatasets = [{\n\t\t\tvalues: zeroArray\n\t\t}];\n\t}\n\n\tdatasets.map((d, i)=> {\n\t\t// Set values\n\t\tif(!d.values) {\n\t\t\td.values = zeroArray;\n\t\t} else {\n\t\t\t// Check for non values\n\t\t\tlet vals = d.values;\n\t\t\tvals = vals.map(val => (!isNaN(val) ? val : 0));\n\n\t\t\t// Trim or extend\n\t\t\tif(vals.length > datasetLength) {\n\t\t\t\tvals = vals.slice(0, datasetLength);\n\t\t\t} else {\n\t\t\t\tvals = fillArray(vals, datasetLength - vals.length, 0);\n\t\t\t}\n\t\t}\n\n\t\t// Set labels\n\t\t//\n\n\t\t// Set type\n\t\tif(!d.chartType ) {\n\t\t\tif(!AXIS_DATASET_CHART_TYPES.includes(type)) type === DEFAULT_AXIS_CHART_TYPE;\n\t\t\td.chartType = type;\n\t\t}\n\n\t});\n\n\t// Markers\n\n\t// Regions\n\t// data.yRegions = data.yRegions || [];\n\tif(data.yRegions) {\n\t\tdata.yRegions.map(d => {\n\t\t\tif(d.end < d.start) {\n\t\t\t\t[d.start, d.end] = [d.end, start];\n\t\t\t}\n\t\t});\n\t}\n\n\treturn data;\n}\n\nexport function zeroDataPrep(realData) {\n\tlet datasetLength = realData.labels.length;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\n\tlet zeroData = {\n\t\tlabels: realData.labels.slice(0, -1),\n\t\tdatasets: realData.datasets.map(d => {\n\t\t\treturn {\n\t\t\t\tname: '',\n\t\t\t\tvalues: zeroArray.slice(0, -1),\n\t\t\t\tchartType: d.chartType\n\t\t\t}\n\t\t}),\n\t\tyRegions: [\n\t\t\t{\n\t\t\t\tstart: 0,\n\t\t\t\tend: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t],\n\t\tyMarkers: [\n\t\t\t{\n\t\t\t\tvalue: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t]\n\t};\n\n\treturn zeroData;\n}","import { makeSVGGroup } from '../utils/draw';\nimport { xLine, yLine, yMarker, yRegion, datasetBar, datasetDot, getPaths } from '../utils/draw';\nimport { equilizeNoOfElements } from '../utils/draw-utils';\nimport { translateHoriLine, translateVertLine, animateRegion, animateBar, animateDot, animatePath } from '../utils/animate';\n\nclass ChartComponent {\n\tconstructor({\n\t\tlayerClass = '',\n\t\tlayerTransform = '',\n\t\tconstants,\n\n\t\tgetData,\n\t\tmakeElements,\n\t\tanimateElements\n\t}) {\n\t\tthis.layerTransform = layerTransform;\n\t\tthis.constants = constants;\n\n\t\tthis.makeElements = makeElements;\n\t\tthis.getData = getData;\n\n\t\tthis.animateElements = animateElements;\n\n\t\tthis.store = [];\n\n\t\tthis.layerClass = layerClass;\n\t\tthis.layerClass = typeof(this.layerClass) === 'function'\n\t\t\t? this.layerClass() : this.layerClass;\n\n\t\tthis.refresh();\n\t}\n\n\trefresh(data) {\n\t\tthis.data = data || this.getData();\n\t}\n\n\tsetup(parent) {\n\t\tthis.layer = makeSVGGroup(parent, this.layerClass, this.layerTransform);\n\t}\n\n\tmake() {\n\t\tthis.render(this.data);\n\t\tthis.oldData = this.data;\n\t}\n\n\trender(data) {\n\t\tthis.store = this.makeElements(data);\n\n\t\tthis.layer.textContent = '';\n\t\tthis.store.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t}\n\n\tupdate(animate = true) {\n\t\tthis.refresh();\n\t\tlet animateElements = []\n\t\tif(animate) {\n\t\t\tanimateElements = this.animateElements(this.data);\n\t\t}\n\t\treturn animateElements;\n\t}\n}\n\nlet componentConfigs = {\n\tyAxis: {\n\t\tlayerClass: 'y axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\tyLine(position, data.labels[i], this.constants.width,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.labels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tlabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\txAxis: {\n\t\tlayerClass: 'x axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\txLine(position, data.labels[i], this.constants.height,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.labels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tlabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateVertLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyMarkers: {\n\t\tlayerClass: 'y-markers',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(marker =>\n\t\t\t\tyMarker(marker.position, marker.label, this.constants.width,\n\t\t\t\t\t{pos:'right', mode: 'span', lineType: 'dashed'})\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.position);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.position);\n\t\t\tlet oldLabels = this.oldData.map(d => d.label);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tposition: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i]\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyRegions: {\n\t\tlayerClass: 'y-regions',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(region =>\n\t\t\t\tyRegion(region.start, region.end, this.constants.width,\n\t\t\t\t\tregion.label)\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.end);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newStarts = newData.map(d => d.start);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.end);\n\t\t\tlet oldLabels = this.oldData.map(d => d.label);\n\t\t\tlet oldStarts = this.oldData.map(d => d.start);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tstart: oldStarts[i],\n\t\t\t\t\tend: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i]\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((rectGroup, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateRegion(\n\t\t\t\t\trectGroup, newStarts[i], newPos[i], oldPos[i]\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\tbarGraph: {\n\t\tlayerClass: function() { return 'dataset-units dataset-bars dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'bar';\n\t\t\treturn data.yPositions.map((y, j) => {\n\t\t\t\treturn datasetBar(\n\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\ty,\n\t\t\t\t\tdata.barWidth,\n\t\t\t\t\tc.color,\n\t\t\t\t\t(c.valuesOverPoints ? (c.stacked ? data.cumulativeYs[j] : data.values[j]) : ''),\n\t\t\t\t\tj,\n\t\t\t\t\ty - (c.stacked ? data.cumulativeYPos[j] : y),\n\t\t\t\t\t{\n\t\t\t\t\t\tzeroLine: data.zeroLine,\n\t\t\t\t\t\tbarsWidth: data.barsWidth,\n\t\t\t\t\t\tminHeight: c.minHeight\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t});\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet c = this.constants;\n\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newCYPos = newData.cumulativeYPos;\n\t\t\tlet newValues = newData.values;\n\t\t\tlet newCYs = newData.cumulativeYs;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldCYPos = this.oldData.cumulativeYPos;\n\t\t\tlet oldValues = this.oldData.values;\n\t\t\tlet oldCYs = this.oldData.cumulativeYs;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldCYPos, newCYPos] = equilizeNoOfElements(oldCYPos, newCYPos);\n\t\t\t[oldValues, newValues] = equilizeNoOfElements(oldValues, newValues);\n\t\t\t[oldCYs, newCYs] = equilizeNoOfElements(oldCYs, newCYs);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\tcumulativeYPos: oldCYPos,\n\n\t\t\t\tvalues: newValues,\n\t\t\t\tcumulativeYs: newCYs,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tbarsWidth: this.oldData.barsWidth,\n\t\t\t\tbarWidth: this.oldData.barWidth,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((bar, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateBar(\n\t\t\t\t\tbar, newXPos[i], newYPos[i], newData.barWidth, c.index,\n\t\t\t\t\t\t{zeroLine: newData.zeroLine}\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\tlineGraph: {\n\t\tlayerClass: function() { return 'dataset-units dataset-line dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'dot';\n\n\t\t\tthis.paths = getPaths(\n\t\t\t\tdata.xPositions,\n\t\t\t\tdata.yPositions,\n\t\t\t\tc.color,\n\t\t\t\t{\n\t\t\t\t\theatline: c.heatline,\n\t\t\t\t\tregionFill: c.regionFill\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tsvgDefs: c.svgDefs,\n\t\t\t\t\tzeroLine: data.zeroLine\n\t\t\t\t}\n\t\t\t)\n\n\t\t\tthis.dots = []\n\n\t\t\tif(!c.hideDots) {\n\t\t\t\tthis.dots = data.yPositions.map((y, j) => {\n\t\t\t\t\treturn datasetDot(\n\t\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\t\ty,\n\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\tc.color,\n\t\t\t\t\t\t(c.valuesOverPoints ? data.values[j] : ''),\n\t\t\t\t\t\tj\n\t\t\t\t\t)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn Object.values(this.paths).concat(this.dots);\n\t\t\t// return this.dots;\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet c = this.constants;\n\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newValues = newData.values;\n\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldValues = this.oldData.values;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldValues, newValues] = equilizeNoOfElements(oldValues, newValues);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\tvalues: newValues,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tradius: this.oldData.radius,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tanimateElements = animateElements.concat(animatePath(\n\t\t\t\tthis.paths, newXPos, newYPos, newData.zeroLine));\n\n\t\t\tif(this.dots.length) {\n\t\t\t\tthis.dots.map((dot, i) => {\n\t\t\t\t\tanimateElements = animateElements.concat(animateDot(\n\t\t\t\t\t\tdot, newXPos[i], newYPos[i]));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn animateElements;\n\t\t}\n\t}\n}\n\nexport function getComponent(name, constants, getData) {\n\tlet keys = Object.keys(componentConfigs).filter(k => name.includes(k));\n\tlet config = componentConfigs[keys[0]];\n\tObject.assign(config, {\n\t\tconstants: constants,\n\t\tgetData: getData\n\t})\n\treturn new ChartComponent(config);\n}\n","import { floatTwo } from './helpers';\n\nfunction normalize(x) {\n\t// Calculates mantissa and exponent of a number\n\t// Returns normalized number and exponent\n\t// https://stackoverflow.com/q/9383593/6495043\n\n\tif(x===0) {\n\t\treturn [0, 0];\n\t}\n\tif(isNaN(x)) {\n\t\treturn {mantissa: -6755399441055744, exponent: 972};\n\t}\n\tvar sig = x > 0 ? 1 : -1;\n\tif(!isFinite(x)) {\n\t\treturn {mantissa: sig * 4503599627370496, exponent: 972};\n\t}\n\n\tx = Math.abs(x);\n\tvar exp = Math.floor(Math.log10(x));\n\tvar man = x/Math.pow(10, exp);\n\n\treturn [sig * man, exp];\n}\n\nfunction getChartRangeIntervals(max, min=0) {\n\tlet upperBound = Math.ceil(max);\n\tlet lowerBound = Math.floor(min);\n\tlet range = upperBound - lowerBound;\n\n\tlet noOfParts = range;\n\tlet partSize = 1;\n\n\t// To avoid too many partitions\n\tif(range > 5) {\n\t\tif(range % 2 !== 0) {\n\t\t\tupperBound++;\n\t\t\t// Recalc range\n\t\t\trange = upperBound - lowerBound;\n\t\t}\n\t\tnoOfParts = range/2;\n\t\tpartSize = 2;\n\t}\n\n\t// Special case: 1 and 2\n\tif(range <= 2) {\n\t\tnoOfParts = 4;\n\t\tpartSize = range/noOfParts;\n\t}\n\n\t// Special case: 0\n\tif(range === 0) {\n\t\tnoOfParts = 5;\n\t\tpartSize = 1;\n\t}\n\n\tlet intervals = [];\n\tfor(var i = 0; i <= noOfParts; i++){\n\t\tintervals.push(lowerBound + partSize * i);\n\t}\n\treturn intervals;\n}\n\nfunction getChartIntervals(maxValue, minValue=0) {\n\tlet [normalMaxValue, exponent] = normalize(maxValue);\n\tlet normalMinValue = minValue ? minValue/Math.pow(10, exponent): 0;\n\n\t// Allow only 7 significant digits\n\tnormalMaxValue = normalMaxValue.toFixed(6);\n\n\tlet intervals = getChartRangeIntervals(normalMaxValue, normalMinValue);\n\tintervals = intervals.map(value => value * Math.pow(10, exponent));\n\treturn intervals;\n}\n\nexport function calcChartIntervals(values, withMinimum=false) {\n\t//*** Where the magic happens ***\n\n\t// Calculates best-fit y intervals from given values\n\t// and returns the interval array\n\n\tlet maxValue = Math.max(...values);\n\tlet minValue = Math.min(...values);\n\n\t// Exponent to be used for pretty print\n\tlet exponent = 0, intervals = []; // eslint-disable-line no-unused-vars\n\n\tfunction getPositiveFirstIntervals(maxValue, absMinValue) {\n\t\tlet intervals = getChartIntervals(maxValue);\n\n\t\tlet intervalSize = intervals[1] - intervals[0];\n\n\t\t// Then unshift the negative values\n\t\tlet value = 0;\n\t\tfor(var i = 1; value < absMinValue; i++) {\n\t\t\tvalue += intervalSize;\n\t\t\tintervals.unshift((-1) * value);\n\t\t}\n\t\treturn intervals;\n\t}\n\n\t// CASE I: Both non-negative\n\n\tif(maxValue >= 0 && minValue >= 0) {\n\t\texponent = normalize(maxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(maxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(maxValue, minValue);\n\t\t}\n\t}\n\n\t// CASE II: Only minValue negative\n\n\telse if(maxValue > 0 && minValue < 0) {\n\t\t// `withMinimum` irrelevant in this case,\n\t\t// We'll be handling both sides of zero separately\n\t\t// (both starting from zero)\n\t\t// Because ceil() and floor() behave differently\n\t\t// in those two regions\n\n\t\tlet absMinValue = Math.abs(minValue);\n\n\t\tif(maxValue >= absMinValue) {\n\t\t\texponent = normalize(maxValue)[1];\n\t\t\tintervals = getPositiveFirstIntervals(maxValue, absMinValue);\n\t\t} else {\n\t\t\t// Mirror: maxValue => absMinValue, then change sign\n\t\t\texponent = normalize(absMinValue)[1];\n\t\t\tlet posIntervals = getPositiveFirstIntervals(absMinValue, maxValue);\n\t\t\tintervals = posIntervals.map(d => d * (-1));\n\t\t}\n\n\t}\n\n\t// CASE III: Both non-positive\n\n\telse if(maxValue <= 0 && minValue <= 0) {\n\t\t// Mirrored Case I:\n\t\t// Work with positives, then reverse the sign and array\n\n\t\tlet pseudoMaxValue = Math.abs(minValue);\n\t\tlet pseudoMinValue = Math.abs(maxValue);\n\n\t\texponent = normalize(pseudoMaxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue, pseudoMinValue);\n\t\t}\n\n\t\tintervals = intervals.reverse().map(d => d * (-1));\n\t}\n\n\treturn intervals;\n}\n\nexport function getZeroIndex(yPts) {\n\tlet zeroIndex;\n\tlet interval = getIntervalSize(yPts);\n\tif(yPts.indexOf(0) >= 0) {\n\t\t// the range has a given zero\n\t\t// zero-line on the chart\n\t\tzeroIndex = yPts.indexOf(0);\n\t} else if(yPts[0] > 0) {\n\t\t// Minimum value is positive\n\t\t// zero-line is off the chart: below\n\t\tlet min = yPts[0];\n\t\tzeroIndex = (-1) * min / interval;\n\t} else {\n\t\t// Maximum value is negative\n\t\t// zero-line is off the chart: above\n\t\tlet max = yPts[yPts.length - 1];\n\t\tzeroIndex = (-1) * max / interval + (yPts.length - 1);\n\t}\n\treturn zeroIndex;\n}\n\nexport function getRealIntervals(max, noOfIntervals, min = 0, asc = 1) {\n\tlet range = max - min;\n\tlet part = range * 1.0 / noOfIntervals;\n\tlet intervals = [];\n\n\tfor(var i = 0; i <= noOfIntervals; i++) {\n\t\tintervals.push(min + part * i);\n\t}\n\n\treturn asc ? intervals : intervals.reverse();\n}\n\nexport function getIntervalSize(orderedArray) {\n\treturn orderedArray[1] - orderedArray[0];\n}\n\nexport function getValueRange(orderedArray) {\n\treturn orderedArray[orderedArray.length-1] - orderedArray[0];\n}\n\nexport function scale(val, yAxis) {\n\treturn floatTwo(yAxis.zeroLine - val * yAxis.scaleMultiplier)\n}\n\nexport function calcDistribution(values, distributionSize) {\n\t// Assume non-negative values,\n\t// implying distribution minimum at zero\n\n\tlet dataMaxValue = Math.max(...values);\n\n\tlet distributionStep = 1 / (distributionSize - 1);\n\tlet distribution = [];\n\n\tfor(var i = 0; i < distributionSize; i++) {\n\t\tlet checkpoint = dataMaxValue * (distributionStep * i);\n\t\tdistribution.push(checkpoint);\n\t}\n\n\treturn distribution;\n}\n\nexport function getMaxCheckpoint(value, distribution) {\n\treturn distribution.filter(d => d < value).length;\n}\n","// Playing around with dates\n\n// https://stackoverflow.com/a/11252167/6495043\nfunction treatAsUtc(dateStr) {\n\tlet result = new Date(dateStr);\n\tresult.setMinutes(result.getMinutes() - result.getTimezoneOffset());\n\treturn result;\n}\n\nexport function getDdMmYyyy(date) {\n\tlet dd = date.getDate();\n\tlet mm = date.getMonth() + 1; // getMonth() is zero-based\n\treturn [\n\t\t(dd>9 ? '' : '0') + dd,\n\t\t(mm>9 ? '' : '0') + mm,\n\t\tdate.getFullYear()\n\t].join('-');\n}\n\nexport function getWeeksBetween(startDateStr, endDateStr) {\n\treturn Math.ceil(getDaysBetween(startDateStr, endDateStr) / 7);\n}\n\nexport function getDaysBetween(startDateStr, endDateStr) {\n\tlet millisecondsPerDay = 24 * 60 * 60 * 1000;\n\treturn (treatAsUtc(endDateStr) - treatAsUtc(startDateStr)) / millisecondsPerDay;\n}\n\n// mutates\nexport function addDays(date, numberOfDays) {\n\tdate.setDate(date.getDate() + numberOfDays);\n}\n\n// export function getMonthName() {}\n","import '../scss/charts.scss';\n\nimport MultiAxisChart from './charts/MultiAxisChart';\nimport PercentageChart from './charts/PercentageChart';\nimport PieChart from './charts/PieChart';\nimport Heatmap from './charts/Heatmap';\nimport AxisChart from './charts/AxisChart';\n\n// if (ENV !== 'production') {\n// \t// Enable LiveReload\n// \tdocument.write(\n// \t\t'<script src=\"http://' + (location.host || 'localhost').split(':')[0] +\n// \t\t':35729/livereload.js?snipver=1\"></' + 'script>'\n// \t);\n// }\n\n// If type is bar\n\n\n\n\nconst chartTypes = {\n\tmixed: AxisChart,\n\tmultiaxis: MultiAxisChart,\n\tpercentage: PercentageChart,\n\theatmap: Heatmap,\n\tpie: PieChart\n};\n\nfunction getChartByType(chartType = 'line', options) {\n\tdebugger;\n\tif(chartType === 'line') {\n\t\toptions.type = 'line';\n\t\treturn new AxisChart(options);\n\t} else if (chartType === 'bar') {\n\t\toptions.type = 'bar';\n\t\treturn new AxisChart(options);\n\t}\n\n\tif (!chartTypes[chartType]) {\n\t\tconsole.error(\"Undefined chart type: \" + chartType);\n\t\treturn;\n\t}\n\n\treturn new chartTypes[chartType](options);\n}\n\nexport default class Chart {\n\tconstructor(args) {\n\t\treturn getChartByType(args.type, arguments[0]);\n\t}\n}\n","import { $ } from '../utils/dom';\n\nexport default class SvgTip {\n\tconstructor({\n\t\tparent = null,\n\t\tcolors = []\n\t}) {\n\t\tthis.parent = parent;\n\t\tthis.colors = colors;\n\t\tthis.title_name = '';\n\t\tthis.title_value = '';\n\t\tthis.list_values = [];\n\t\tthis.title_value_first = 0;\n\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\n\t\tthis.top = 0;\n\t\tthis.left = 0;\n\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tthis.make_tooltip();\n\t}\n\n\trefresh() {\n\t\tthis.fill();\n\t\tthis.calc_position();\n\t\t// this.show_tip();\n\t}\n\n\tmake_tooltip() {\n\t\tthis.container = $.create('div', {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'graph-svg-tip comparison',\n\t\t\tinnerHTML: `<span class=\"title\"></span>\n\t\t\t\t<ul class=\"data-point-list\"></ul>\n\t\t\t\t<div class=\"svg-pointer\"></div>`\n\t\t});\n\t\tthis.hide_tip();\n\n\t\tthis.title = this.container.querySelector('.title');\n\t\tthis.data_point_list = this.container.querySelector('.data-point-list');\n\n\t\tthis.parent.addEventListener('mouseleave', () => {\n\t\t\tthis.hide_tip();\n\t\t});\n\t}\n\n\tfill() {\n\t\tlet title;\n\t\tif(this.title_value_first) {\n\t\t\ttitle = `<strong>${this.title_value}</strong>${this.title_name}`;\n\t\t} else {\n\t\t\ttitle = `${this.title_name}<strong>${this.title_value}</strong>`;\n\t\t}\n\t\tthis.title.innerHTML = title;\n\t\tthis.data_point_list.innerHTML = '';\n\n\t\tthis.list_values.map((set, i) => {\n\t\t\tconst color = this.colors[i] || 'black';\n\n\t\t\tlet li = $.create('li', {\n\t\t\t\tstyles: {\n\t\t\t\t\t'border-top': `3px solid ${color}`\n\t\t\t\t},\n\t\t\t\tinnerHTML: `<strong style=\"display: block;\">${ set.value === 0 || set.value ? set.value : '' }</strong>\n\t\t\t\t\t${set.title ? set.title : '' }`\n\t\t\t});\n\n\t\t\tthis.data_point_list.appendChild(li);\n\t\t});\n\t}\n\n\tcalc_position() {\n\t\tlet width = this.container.offsetWidth;\n\n\t\tthis.top = this.y - this.container.offsetHeight;\n\t\tthis.left = this.x - width/2;\n\t\tlet max_left = this.parent.offsetWidth - width;\n\n\t\tlet pointer = this.container.querySelector('.svg-pointer');\n\n\t\tif(this.left < 0) {\n\t\t\tpointer.style.left = `calc(50% - ${-1 * this.left}px)`;\n\t\t\tthis.left = 0;\n\t\t} else if(this.left > max_left) {\n\t\t\tlet delta = this.left - max_left;\n\t\t\tlet pointer_offset = `calc(50% + ${delta}px)`;\n\t\t\tpointer.style.left = pointer_offset;\n\n\t\t\tthis.left = max_left;\n\t\t} else {\n\t\t\tpointer.style.left = `50%`;\n\t\t}\n\t}\n\n\tset_values(x, y, title_name = '', title_value = '', list_values = [], title_value_first = 0) {\n\t\tthis.title_name = title_name;\n\t\tthis.title_value = title_value;\n\t\tthis.list_values = list_values;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.title_value_first = title_value_first;\n\t\tthis.refresh();\n\t}\n\n\thide_tip() {\n\t\tthis.container.style.top = '0px';\n\t\tthis.container.style.left = '0px';\n\t\tthis.container.style.opacity = '0';\n\t}\n\n\tshow_tip() {\n\t\tthis.container.style.top = this.top + 'px';\n\t\tthis.container.style.left = this.left + 'px';\n\t\tthis.container.style.opacity = '1';\n\t}\n}\n","export const Y_AXIS_MARGIN = 60;\n\nexport const DEFAULT_AXIS_CHART_TYPE = 'line';\nexport const AXIS_DATASET_CHART_TYPES = ['line', 'bar'];\n\nexport const BAR_CHART_SPACE_RATIO = 0.5;\nexport const MIN_BAR_PERCENT_HEIGHT = 0.01;\n\nexport const LINE_CHART_DOT_SIZE = 4;\n\nexport const DOT_OVERLAY_SIZE_INCR = 4;","import SvgTip from '../objects/SvgTip';\nimport { $, isElementInViewport, getElementContentWidth } from '../utils/dom';\nimport { makeSVGContainer, makeSVGDefs, makeSVGGroup } from '../utils/draw';\nimport { getStringWidth } from '../utils/helpers';\nimport { getColor, DEFAULT_COLORS } from '../utils/colors';\nimport { getDifferentChart } from '../config';\nimport { runSMILAnimation } from '../utils/animation';\n\nexport default class BaseChart {\n\tconstructor({\n\t\theight = 240,\n\n\t\ttitle = '',\n\t\tsubtitle = '',\n\t\tcolors = [],\n\n\t\tisNavigable = 0,\n\t\tshowLegend = 1,\n\n\t\ttype = '',\n\n\t\tparent,\n\t\tdata\n\t}) {\n\t\tthis.rawChartArgs = arguments[0];\n\n\t\tthis.parent = typeof parent === 'string' ? document.querySelector(parent) : parent;\n\t\tthis.title = title;\n\t\tthis.subtitle = subtitle;\n\t\tthis.argHeight = height;\n\t\tthis.type = type;\n\n\t\tthis.realData = this.prepareData(data);\n\t\tthis.data = this.prepareFirstData(this.realData);\n\t\tthis.colors = [];\n\t\tthis.config = {\n\t\t\tshowTooltip: 1, // calculate\n\t\t\tshowLegend: 1,\n\t\t\tisNavigable: isNavigable,\n\t\t\tanimate: 1\n\t\t};\n\t\tthis.state = {};\n\t\tthis.options = {};\n\n\t\tif(this.config.isNavigable) {\n\t\t\tthis.state.currentIndex = 0;\n\t\t\tthis.overlays = [];\n\t\t}\n\n\t\tthis.configure(arguments[0]);\n\t}\n\n\tconfigure(args) {\n\t\tthis.setColors();\n\t\tthis.setMargins();\n\n\t\t// Bind window events\n\t\twindow.addEventListener('resize', () => this.draw());\n\t\twindow.addEventListener('orientationchange', () => this.draw());\n\t}\n\n\tsetColors() {\n\t\tlet args = this.rawChartArgs;\n\n\t\t// Needs structure as per only labels/datasets, from config\n\t\tconst list = args.type === 'percentage' || args.type === 'pie'\n\t\t\t? args.data.labels\n\t\t\t: args.data.datasets;\n\n\t\tif(!args.colors || (list && args.colors.length < list.length)) {\n\t\t\tthis.colors = DEFAULT_COLORS;\n\t\t} else {\n\t\t\tthis.colors = args.colors;\n\t\t}\n\n\t\tthis.colors = this.colors.map(color => getColor(color));\n\t}\n\n\tsetMargins() {\n\t\t// TODO: think for all\n\t\tlet height = this.argHeight;\n\t\tthis.baseHeight = height;\n\t\tthis.height = height - 40; // change\n\t\tthis.translateY = 20;\n\n\t\t// Horizontal margins\n\t\tthis.translateXLeft = 60;\n\t\tthis.translateXRight = 40;\n\t}\n\n\tvalidate(){\n\t\tlet args = this.rawChartArgs;\n\t\t// Now yo have the args, set this stuff only after validating\n\t\tif(!this.parent) {\n\t\t\tconsole.error(\"No parent element to render on was provided.\");\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tsetup() {\n\t\tif(this.validate()) {\n\t\t\tthis._setup();\n\t\t}\n\t}\n\n\t_setup() {\n\t\tthis.makeContainer();\n\t\tthis.makeTooltip(); // without binding\n\n\t\tthis.draw(true);\n\t}\n\n\tsetupComponents() {\n\t\tthis.components = new Map();\n\t}\n\n\tmakeContainer() {\n\t\tthis.container = $.create('div', {\n\t\t\tclassName: 'chart-container',\n\t\t\tinnerHTML: `<h6 class=\"title\">${this.title}</h6>\n\t\t\t\t<h6 class=\"sub-title uppercase\">${this.subtitle}</h6>\n\t\t\t\t<div class=\"frappe-chart graphics\"></div>\n\t\t\t\t<div class=\"graph-stats-container\"></div>`\n\t\t});\n\n\t\t// Chart needs a dedicated parent element\n\t\tthis.parent.innerHTML = '';\n\t\tthis.parent.appendChild(this.container);\n\n\t\tthis.chartWrapper = this.container.querySelector('.frappe-chart');\n\t\tthis.statsWrapper = this.container.querySelector('.graph-stats-container');\n\t}\n\n\tmakeTooltip() {\n\t\tthis.tip = new SvgTip({\n\t\t\tparent: this.chartWrapper,\n\t\t\tcolors: this.colors\n\t\t});\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {}\n\n\tdraw(init=false) {\n\t\tthis.calcWidth();\n\t\tthis.calc();\n\t\tthis.makeChartArea();\n\t\tthis.setupComponents();\n\n\t\tthis.components.forEach(c => c.setup(this.drawArea)); // or c.build()\n\t\tthis.components.forEach(c => c.make()); // or c.build()\n\n\t\t// TODO: remove timeout and decrease post animate time in chart component\n\t\tif(init) {\n\t\t\tthis.data = this.realData;\n\t\t\tsetTimeout(() => {this.update();}, 1000);\n\t\t}\n\n\t\tthis.renderLegend();\n\t\tthis.setupNavigation(init);\n\t}\n\n\tcalcWidth() {\n\t\tlet outerAnnotationsWidth = 0;\n\t\t// let charWidth = 8;\n\t\t// this.specificValues.map(val => {\n\t\t// \tlet strWidth = getStringWidth((val.title + \"\"), charWidth);\n\t\t// \tif(strWidth > outerAnnotationsWidth) {\n\t\t// \t\touterAnnotationsWidth = strWidth - 40;\n\t\t// \t}\n\t\t// });\n\t\tthis.baseWidth = getElementContentWidth(this.parent) - outerAnnotationsWidth;\n\t\tthis.width = this.baseWidth - (this.translateXLeft + this.translateXRight);\n\t}\n\n\tupdate(data=this.data) {\n\t\tthis.data = this.prepareData(data);\n\t\tthis.calc(); // builds state\n\t\tthis.render();\n\t}\n\n\tprepareData() {}\n\n\tcalc() {} // builds state\n\n\trender(components=this.components, animate=true) {\n\t\tif(this.config.isNavigable) {\n\t\t\t// Remove all existing overlays\n\t\t\tthis.overlays.map(o => o.parentNode.removeChild(o));\n\t\t\t// ref.parentNode.insertBefore(element, ref);\n\t\t}\n\t\tlet elementsToAnimate = [];\n\t\t// Can decouple to this.refreshComponents() first to save animation timeout\n\t\tcomponents.forEach(c => {\n\t\t\telementsToAnimate = elementsToAnimate.concat(c.update(animate));\n\t\t});\n\t\tif(elementsToAnimate.length > 0) {\n\t\t\trunSMILAnimation(this.chartWrapper, this.svg, elementsToAnimate);\n\t\t\tsetTimeout(() => {\n\t\t\t\tcomponents.forEach(c => c.make());\n\t\t\t\tthis.updateNav();\n\t\t\t}, 400);\n\t\t} else {\n\t\t\tthis.updateNav();\n\t\t}\n\t}\n\n\tupdateNav() {\n\t\tif(this.config.isNavigable) {\n\t\t\t// Make new overlays\n\t\t\tif(!this.overlayGuides){\n\t\t\t\tthis.makeOverlays();\n\t\t\t\tthis.bindUnits();\n\t\t\t} else {\n\t\t\t\tthis.updateOverlays();\n\t\t\t}\n\t\t}\n\t}\n\n\tmakeChartArea() {\n\t\tif(this.svg) {\n\t\t\tthis.chartWrapper.removeChild(this.svg);\n\t\t}\n\t\tthis.svg = makeSVGContainer(\n\t\t\tthis.chartWrapper,\n\t\t\t'chart',\n\t\t\tthis.baseWidth,\n\t\t\tthis.baseHeight\n\t\t);\n\t\tthis.svgDefs = makeSVGDefs(this.svg);\n\n\t\t// I WISH !!!\n\t\t// this.svg = makeSVGGroup(\n\t\t// \tsvgContainer,\n\t\t// \t'flipped-coord-system',\n\t\t// \t`translate(0, ${this.baseHeight}) scale(1, -1)`\n\t\t// );\n\n\t\tthis.drawArea = makeSVGGroup(\n\t\t\tthis.svg,\n\t\t\tthis.type + '-chart',\n\t\t\t`translate(${this.translateXLeft}, ${this.translateY})`\n\t\t);\n\t}\n\n\trenderLegend() {}\n\n\tsetupNavigation(init=false) {\n\t\tif(!this.config.isNavigable) return;\n\n\t\tif(init) {\n\t\t\tthis.bindOverlay();\n\n\t\t\tthis.keyActions = {\n\t\t\t\t'13': this.onEnterKey.bind(this),\n\t\t\t\t'37': this.onLeftArrow.bind(this),\n\t\t\t\t'38': this.onUpArrow.bind(this),\n\t\t\t\t'39': this.onRightArrow.bind(this),\n\t\t\t\t'40': this.onDownArrow.bind(this),\n\t\t\t}\n\n\t\t\tdocument.addEventListener('keydown', (e) => {\n\t\t\t\tif(isElementInViewport(this.chartWrapper)) {\n\t\t\t\t\te = e || window.event;\n\t\t\t\t\tthis.keyActions[e.keyCode]();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tmakeOverlays() {}\n\tbindOverlay() {}\n\tbindUnits() {}\n\n\tonLeftArrow() {}\n\tonRightArrow() {}\n\tonUpArrow() {}\n\tonDownArrow() {}\n\tonEnterKey() {}\n\n\tgetDataPoint(index = 0) {}\n\tsetCurrentDataPoint(point) {}\n\n\tupdateDataset(dataset, index) {}\n\taddDataset(dataset, index) {}\n\tremoveDataset(index = 0) {}\n\n\tupdateDatasets(datasets) {}\n\n\tupdateDataPoint(dataPoint, index = 0) {}\n\taddDataPoint(dataPoint, index = 0) {}\n\tremoveDataPoint(index = 0) {}\n\n\tgetDifferentChart(type) {\n\t\treturn getDifferentChart(type, this.type, this.rawChartArgs);\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { dataPrep, zeroDataPrep } from './axis-chart-utils';\nimport { Y_AXIS_MARGIN } from '../utils/constants';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset, fire } from '../utils/dom';\nimport { calcChartIntervals, getIntervalSize, getValueRange, getZeroIndex, scale } from '../utils/intervals';\nimport { floatTwo } from '../utils/helpers';\nimport { makeOverlay, updateOverlay } from '../utils/draw';\nimport { MIN_BAR_PERCENT_HEIGHT, DEFAULT_AXIS_CHART_TYPE, BAR_CHART_SPACE_RATIO, LINE_CHART_DOT_SIZE } from '../utils/constants';\n\nexport default class AxisChart extends BaseChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\tthis.isSeries = args.isSeries;\n\t\tthis.valuesOverPoints = args.valuesOverPoints;\n\t\tthis.formatTooltipY = args.formatTooltipY;\n\t\tthis.formatTooltipX = args.formatTooltipX;\n\t\tthis.barOptions = args.barOptions || {};\n\t\tthis.lineOptions = args.lineOptions || {};\n\t\tthis.type = args.type || 'line';\n\n\t\tthis.xAxisMode = args.xAxisMode || 'span';\n\t\tthis.yAxisMode = args.yAxisMode || 'span';\n\n\t\tthis.zeroLine = this.height;\n\t\t// this.setTrivialState();\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {3\n\t\tsuper.configure();\n\t\tthis.config.xAxisMode = args.xAxisMode;\n\t\tthis.config.yAxisMode = args.yAxisMode;\n\t}\n\n\tsetMargins() {\n\t\tsuper.setMargins();\n\t\tthis.translateXLeft = Y_AXIS_MARGIN;\n\t\tthis.translateXRight = Y_AXIS_MARGIN;\n\t}\n\n\tprepareData(data=this.data) {\n\t\treturn dataPrep(data, this.type);\n\t}\n\n\tprepareFirstData(data=this.data) {\n\t\treturn zeroDataPrep(data);\n\t}\n\n\tcalc() {\n\t\tthis.calcXPositions();\n\t\tthis.calcYAxisParameters(this.getAllYValues(), this.type === 'line');\n\t}\n\n\tcalcXPositions(s=this.state) {\n\t\tlet labels = this.data.labels;\n\t\ts.datasetLength = labels.length;\n\n\t\ts.unitWidth = this.width/(s.datasetLength);\n\t\t// Default, as per bar, and mixed. Only line will be a special case\n\t\ts.xOffset = s.unitWidth/2;\n\n\t\t// // For a pure Line Chart\n\t\t// s.unitWidth = this.width/(s.datasetLength - 1);\n\t\t// s.xOffset = 0;\n\n\t\ts.xAxis = {\n\t\t\tlabels: labels,\n\t\t\tpositions: labels.map((d, i) =>\n\t\t\t\tfloatTwo(s.xOffset + i * s.unitWidth)\n\t\t\t)\n\t\t};\n\t}\n\n\tcalcYAxisParameters(dataValues, withMinimum = 'false') {\n\t\tconst yPts = calcChartIntervals(dataValues, withMinimum);\n\t\tconst scaleMultiplier = this.height / getValueRange(yPts);\n\t\tconst intervalHeight = getIntervalSize(yPts) * scaleMultiplier;\n\t\tconst zeroLine = this.height - (getZeroIndex(yPts) * intervalHeight);\n\n\t\tthis.state.yAxis = {\n\t\t\tlabels: yPts,\n\t\t\tpositions: yPts.map(d => zeroLine - d * scaleMultiplier),\n\t\t\tscaleMultiplier: scaleMultiplier,\n\t\t\tzeroLine: zeroLine,\n\t\t}\n\n\t\t// Dependent if above changes\n\t\tthis.calcDatasetPoints();\n\t\tthis.calcYExtremes();\n\t\tthis.calcYRegions();\n\t}\n\n\tcalcDatasetPoints() {\n\t\tlet s = this.state;\n\t\tlet scaleAll = values => values.map(val => scale(val, s.yAxis));\n\n\t\ts.datasets = this.data.datasets.map((d, i) => {\n\t\t\tlet values = d.values;\n\t\t\tlet cumulativeYs = d.cumulativeYs || [];\n\t\t\treturn {\n\t\t\t\tname: d.name,\n\t\t\t\tindex: i,\n\t\t\t\tchartType: d.chartType,\n\n\t\t\t\tvalues: values,\n\t\t\t\tyPositions: scaleAll(values),\n\n\t\t\t\tcumulativeYs: cumulativeYs,\n\t\t\t\tcumulativeYPos: scaleAll(cumulativeYs),\n\t\t\t};\n\t\t});\n\t}\n\n\tcalcYExtremes() {\n\t\tlet s = this.state;\n\t\tif(this.barOptions.stacked) {\n\t\t\ts.yExtremes = s.datasets[s.datasets.length - 1].cumulativeYPos;\n\t\t\treturn;\n\t\t}\n\t\ts.yExtremes = new Array(s.datasetLength).fill(9999);\n\t\ts.datasets.map((d, i) => {\n\t\t\td.yPositions.map((pos, j) => {\n\t\t\t\tif(pos < s.yExtremes[j]) {\n\t\t\t\t\ts.yExtremes[j] = pos;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tcalcYRegions() {\n\t\tlet s = this.state;\n\t\tif(this.data.yMarkers) {\n\t\t\tthis.state.yMarkers = this.data.yMarkers.map(d => {\n\t\t\t\td.position = scale(d.value, s.yAxis);\n\t\t\t\td.label += ': ' + d.value;\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t\tif(this.data.yRegions) {\n\t\t\tthis.state.yRegions = this.data.yRegions.map(d => {\n\t\t\t\td.start = scale(d.start, s.yAxis);\n\t\t\t\td.end = scale(d.end, s.yAxis);\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t}\n\n\tgetAllYValues() {\n\t\t// TODO: yMarkers, regions, sums, every Y value ever\n\t\tlet key = 'values';\n\n\t\tif(this.barOptions.stacked) {\n\t\t\tkey = 'cumulativeYs';\n\t\t\tlet cumulative = new Array(this.state.datasetLength).fill(0);\n\t\t\tthis.data.datasets.map((d, i) => {\n\t\t\t\tlet values = this.data.datasets[i].values;\n\t\t\t\td[key] = cumulative = cumulative.map((c, i) => c + values[i]);\n\t\t\t});\n\t\t}\n\n\t\treturn [].concat(...this.data.datasets.map(d => d[key]));\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'yAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.yAxisMode,\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t}\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'xAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.xAxisMode,\n\t\t\t\t\theight: this.height,\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t}\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'yRegions',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t}\n\t\t\t],\n\t\t];\n\n\t\tcomponentConfigs.map(args => {\n\t\t\targs.push(\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state[args[0]];\n\t\t\t\t}.bind(this)\n\t\t\t);\n\t\t});\n\n\t\tlet barDatasets = this.state.datasets.filter(d => d.chartType === 'bar');\n\t\tlet lineDatasets = this.state.datasets.filter(d => d.chartType === 'line');\n\n\t\t// console.log('barDatasets', barDatasets, this.state.datasets);\n\n\t\tlet barsConfigs = barDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'barGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tstacked: this.barOptions.stacked,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.valuesOverPoints,\n\t\t\t\t\tminHeight: this.height * MIN_BAR_PERCENT_HEIGHT,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\n\t\t\t\t\tlet spaceRatio = this.barOptions.spaceRatio || BAR_CHART_SPACE_RATIO;\n\t\t\t\t\tlet barsWidth = s.unitWidth * (1 - spaceRatio);\n\t\t\t\t\tlet barWidth = barsWidth/(this.barOptions.stacked ? 1 : barDatasets.length);\n\n\t\t\t\t\tlet xPositions = s.xAxis.positions.map(x => x - barsWidth/2);\n\t\t\t\t\tif(!this.barOptions.stacked) {\n\t\t\t\t\t\txPositions = xPositions.map(p => p + barWidth * index);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: xPositions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\t\t\t\t\t\tcumulativeYPos: d.cumulativeYPos,\n\n\t\t\t\t\t\tvalues: d.values,\n\t\t\t\t\t\tcumulativeYs: d.cumulativeYs,\n\n\t\t\t\t\t\tzeroLine: s.yAxis.zeroLine,\n\t\t\t\t\t\tbarsWidth: barsWidth,\n\t\t\t\t\t\tbarWidth: barWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet lineConfigs = lineDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'lineGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tsvgDefs: this.svgDefs,\n\t\t\t\t\theatline: this.lineOptions.heatline,\n\t\t\t\t\tregionFill: this.lineOptions.regionFill,\n\t\t\t\t\thideDots: this.lineOptions.hideDots,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.valuesOverPoints,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: s.xAxis.positions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\n\t\t\t\t\t\tvalues: d.values,\n\n\t\t\t\t\t\tzeroLine: s.yAxis.zeroLine,\n\t\t\t\t\t\tradius: this.lineOptions.dotSize || LINE_CHART_DOT_SIZE,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet markerConfigs = [\n\t\t\t[\n\t\t\t\t'yMarkers',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t}\n\t\t\t]\n\t\t];\n\n\t\tmarkerConfigs.map(args => {\n\t\t\targs.push(\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state[args[0]];\n\t\t\t\t}.bind(this)\n\t\t\t);\n\t\t});\n\n\t\tcomponentConfigs = componentConfigs.concat(barsConfigs, lineConfigs, markerConfigs);\n\n\t\tlet optionals = ['yMarkers', 'yRegions'];\n\t\tthis.dataUnitComponents = [];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.filter(args => !optionals.includes(args[0]) || this.state[args[0]])\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\tif(args[0].includes('lineGraph') || args[0].includes('barGraph')) {\n\t\t\t\t\tthis.dataUnitComponents.push(component);\n\t\t\t\t}\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tbindTooltip() {\n\t\t// TODO: could be in tooltip itself, as it is a given functionality for its parent\n\t\tthis.chartWrapper.addEventListener('mousemove', (e) => {\n\t\t\tlet o = getOffset(this.chartWrapper);\n\t\t\tlet relX = e.pageX - o.left - this.translateXLeft;\n\t\t\tlet relY = e.pageY - o.top - this.translateY;\n\n\t\t\tif(relY < this.height + this.translateY * 2) {\n\t\t\t\tthis.mapTooltipXPosition(relX);\n\t\t\t} else {\n\t\t\t\tthis.tip.hide_tip();\n\t\t\t}\n\t\t});\n\t}\n\n\tmapTooltipXPosition(relX) {\n\t\tlet s = this.state;\n\t\tif(!s.yExtremes) return;\n\n\t\tlet titles = s.xAxis.labels;\n\t\tif(this.formatTooltipX && this.formatTooltipX(titles[0])) {\n\t\t\ttitles = titles.map(d=>this.formatTooltipX(d));\n\t\t}\n\n\t\tlet formatY = this.formatTooltipY && this.formatTooltipY(this.y[0].values[0]);\n\n\t\tfor(var i=s.datasetLength - 1; i >= 0 ; i--) {\n\t\t\tlet xVal = s.xAxis.positions[i];\n\t\t\t// let delta = i === 0 ? s.unitWidth : xVal - s.xAxis.positions[i-1];\n\t\t\tif(relX > xVal - s.unitWidth/2) {\n\t\t\t\tlet x = xVal + this.translateXLeft;\n\t\t\t\tlet y = s.yExtremes[i] + this.translateY;\n\n\t\t\t\tlet values = this.data.datasets.map((set, j) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttitle: set.title,\n\t\t\t\t\t\tvalue: formatY ? this.formatTooltipY(set.values[i]) : set.values[i],\n\t\t\t\t\t\tcolor: this.colors[j],\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\tthis.tip.set_values(x, y, titles[i], '', values);\n\t\t\t\tthis.tip.show_tip();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tmakeOverlays() {\n\t\t// Just make one out of the first element\n\t\t// let index = this.xAxisLabels.length - 1;\n\t\t// let unit = this.y[0].svg_units[index];\n\t\t// this.setCurrentDataPoint(index);\n\n\t\t// if(this.overlay) {\n\t\t// \tthis.overlay.parentNode.removeChild(this.overlay);\n\t\t// }\n\n\t\t// this.overlay = unit.cloneNode();\n\t\t// this.overlay.style.fill = '#000000';\n\t\t// this.overlay.style.opacity = '0.4';\n\t\t// this.drawArea.appendChild(this.overlay);\n\t\tthis.overlayGuides = this.dataUnitComponents.map(c => {\n\t\t\treturn {\n\t\t\t\ttype: c.unitType,\n\t\t\t\toverlay: undefined,\n\t\t\t\tunits: c.store,\n\t\t\t}\n\t\t});\n\n\t\tthis.state.currentIndex = 0;\n\n\t\t// Render overlays\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\t\t\td.overlay = makeOverlay[d.type](currentUnit);\n\t\t\tthis.drawArea.appendChild(d.overlay);\n\t\t})\n\t}\n\n\tbindOverlay() {\n\t\t// on event, update overlay\n\t\tthis.parent.addEventListener('data-select', (e) => {\n\t\t\tthis.updateOverlay(e.svg_unit);\n\t\t});\n\t}\n\n\tbindUnits(units_array) {\n\t\t// units_array.map(unit => {\n\t\t// \tunit.addEventListener('click', () => {\n\t\t// \t\tlet index = unit.getAttribute('data-point-index');\n\t\t// \t\tthis.setCurrentDataPoint(index);\n\t\t// \t});\n\t\t// });\n\t}\n\n\tupdateOverlay() {\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\t\t\tupdateOverlay[d.type](currentUnit, d.overlay);\n\t\t})\n\t}\n\n\tonLeftArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex - 1);\n\t}\n\n\tonRightArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex + 1);\n\t}\n\n\tgetDataPoint(index=this.state.currentIndex) {\n\t\t// check for length\n\t\tlet data_point = {\n\t\t\tindex: index\n\t\t};\n\t\t// let y = this.y[0];\n\t\t// ['svg_units', 'yUnitPositions', 'values'].map(key => {\n\t\t// \tlet data_key = key.slice(0, key.length-1);\n\t\t// \tdata_point[data_key] = y[key][index];\n\t\t// });\n\t\t// data_point.label = this.xAxis.labels[index];\n\t\treturn data_point;\n\t}\n\n\tsetCurrentDataPoint(index) {\n\t\tlet s = this.state;\n\t\tindex = parseInt(index);\n\t\tif(index < 0) index = 0;\n\t\tif(index >= s.xAxis.labels.length) index = s.xAxis.labels.length - 1;\n\t\tif(index === s.currentIndex) return;\n\t\ts.currentIndex = index;\n\t\tfire(this.parent, \"data-select\", this.getDataPoint());\n\t}\n\n\t// API\n\n\taddDataPoint(label, datasetValues, index=this.state.datasetLength) {\n\t\tsuper.addDataPoint(label, datasetValues, index);\n\t\t// console.log(label, datasetValues, this.data.labels);\n\t\tthis.data.labels.splice(index, 0, label);\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\td.values.splice(index, 0, datasetValues[i]);\n\t\t});\n\t\t// console.log(this.data);\n\t\tthis.update(this.data);\n\t}\n\n\tremoveDataPoint(index = this.state.datasetLength-1) {\n\t\tsuper.removeDataPoint(index);\n\t\tthis.data.labels.splice(index, 1);\n\t\tthis.data.datasets.map(d => {\n\t\t\td.values.splice(index, 1);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\t// getDataPoint(index = 0) {}\n\t// setCurrentDataPoint(point) {}\n\n\tupdateDataset(datasetValues, index=0) {\n\t\tthis.data.datasets[index].values = datasetValues;\n\t\tthis.update(this.data);\n\t}\n\t// addDataset(dataset, index) {}\n\t// removeDataset(index = 0) {}\n\n\t// updateDatasets(datasets) {}\n\n\t// updateDataPoint(dataPoint, index = 0) {}\n\t// addDataPoint(dataPoint, index = 0) {}\n\t// removeDataPoint(index = 0) {}\n}\n\n\n// keep a binding at the end of chart\n\n","import AxisChart from './AxisChart';\nimport { Y_AXIS_MARGIN } from '../utils/constants';\n// import { ChartComponent } from '../objects/ChartComponents';\nimport { floatTwo } from '../utils/helpers';\n\nexport default class MultiAxisChart extends AxisChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\t// this.unitType = args.unitType || 'line';\n\t\t// this.setup();\n\t}\n\n\tpreSetup() {\n\t\tthis.type = 'multiaxis';\n\t}\n\n\tsetMargins() {\n\t\tsuper.setMargins();\n\t\tlet noOfLeftAxes = this.data.datasets.filter(d => d.axisPosition === 'left').length;\n\t\tthis.translateXLeft = (noOfLeftAxes) * Y_AXIS_MARGIN || Y_AXIS_MARGIN;\n\t\tthis.translateXRight = (this.data.datasets.length - noOfLeftAxes) * Y_AXIS_MARGIN || Y_AXIS_MARGIN;\n\t}\n\n\tprepareYAxis() { }\n\n\tprepareData(data) {\n\t\tsuper.prepareData(data);\n\t\tlet sets = this.state.datasets;\n\t\t// let axesLeft = sets.filter(d => d.axisPosition === 'left');\n\t\t// let axesRight = sets.filter(d => d.axisPosition === 'right');\n\t\t// let axesNone = sets.filter(d => !d.axisPosition ||\n\t\t// \t!['left', 'right'].includes(d.axisPosition));\n\n\t\tlet leftCount = 0, rightCount = 0;\n\n\t\tsets.forEach((d, i) => {\n\t\t\td.yAxis = {\n\t\t\t\tposition: d.axisPosition,\n\t\t\t\tindex: d.axisPosition === 'left' ? leftCount++ : rightCount++\n\t\t\t};\n\t\t});\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.config.xAxisMode = args.xAxisMode || 'tick';\n\t\tthis.config.yAxisMode = args.yAxisMode || 'span';\n\t}\n\n\t// setUnitWidthAndXOffset() {\n\t// \tthis.state.unitWidth = this.width/(this.state.datasetLength);\n\t// \tthis.state.xOffset = this.state.unitWidth/2;\n\t// }\n\n\tconfigUnits() {\n\t\tthis.unitArgs = {\n\t\t\ttype: 'bar',\n\t\t\targs: {\n\t\t\t\tspaceWidth: this.state.unitWidth/2,\n\t\t\t}\n\t\t};\n\t}\n\n\tsetYAxis() {\n\t\tthis.state.datasets.map(d => {\n\t\t\tthis.calcYAxisParameters(d.yAxis, d.values, this.unitType === 'line');\n\t\t});\n\t}\n\n\tcalcYUnits() {\n\t\tthis.state.datasets.map(d => {\n\t\t\td.positions = d.values.map(val => floatTwo(d.yAxis.zeroLine - val * d.yAxis.scaleMultiplier));\n\t\t});\n\t}\n\n\t// TODO: function doesn't exist, handle with components\n\trenderConstants() {\n\t\tthis.state.datasets.map(d => {\n\t\t\tlet guidePos = d.yAxis.position === 'left'\n\t\t\t\t? -1 * d.yAxis.index * Y_AXIS_MARGIN\n\t\t\t\t: this.width + d.yAxis.index * Y_AXIS_MARGIN;\n\t\t\tthis.renderer.xLine(guidePos, '', {\n\t\t\t\tpos:'top',\n\t\t\t\tmode: 'span',\n\t\t\t\tstroke: this.colors[i],\n\t\t\t\tclassName: 'y-axis-guide'\n\t\t\t})\n\t\t});\n\t}\n\n\tgetYAxesComponents() {\n\t\treturn this.data.datasets.map((e, i) => {\n\t\t\treturn new ChartComponent({\n\t\t\t\tlayerClass: 'y axis y-axis-' + i,\n\t\t\t\tmake: () => {\n\t\t\t\t\tlet yAxis = this.state.datasets[i].yAxis;\n\t\t\t\t\tthis.renderer.setZeroline(yAxis.zeroline);\n\t\t\t\t\tlet options = {\n\t\t\t\t\t\tpos: yAxis.position,\n\t\t\t\t\t\tmode: 'tick',\n\t\t\t\t\t\toffset: yAxis.index * Y_AXIS_MARGIN,\n\t\t\t\t\t\tstroke: this.colors[i]\n\t\t\t\t\t};\n\n\t\t\t\t\treturn yAxis.positions.map((position, j) =>\n\t\t\t\t\t\tthis.renderer.yLine(position, yAxis.labels[j], options)\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tanimate: () => {}\n\t\t\t});\n\t\t});\n\t}\n\n\t// TODO remove renderer zeroline from above and below\n\tgetChartComponents() {\n\t\treturn this.data.datasets.map((d, index) => {\n\t\t\treturn new ChartComponent({\n\t\t\t\tlayerClass: 'dataset-units dataset-' + index,\n\t\t\t\tmake: () => {\n\t\t\t\t\tlet d = this.state.datasets[index];\n\t\t\t\t\tlet unitType = this.unitArgs;\n\n\t\t\t\t\t// the only difference, should be tied to datasets or default\n\t\t\t\t\tthis.renderer.setZeroline(d.yAxis.zeroLine);\n\n\t\t\t\t\treturn d.positions.map((y, j) => {\n\t\t\t\t\t\treturn this.renderer[unitType.type](\n\t\t\t\t\t\t\tthis.state.xAxisPositions[j],\n\t\t\t\t\t\t\ty,\n\t\t\t\t\t\t\tunitType.args,\n\t\t\t\t\t\t\tthis.colors[index],\n\t\t\t\t\t\t\tj,\n\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\tthis.state.datasetLength\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tanimate: (svgUnits) => {\n\t\t\t\t\tlet d = this.state.datasets[index];\n\t\t\t\t\tlet unitType = this.unitArgs.type;\n\n\t\t\t\t\t// have been updated in axis render;\n\t\t\t\t\tlet newX = this.state.xAxisPositions;\n\t\t\t\t\tlet newY = this.state.datasets[index].positions;\n\n\t\t\t\t\tlet lastUnit = svgUnits[svgUnits.length - 1];\n\t\t\t\t\tlet parentNode = lastUnit.parentNode;\n\n\t\t\t\t\tif(this.oldState.xExtra > 0) {\n\t\t\t\t\t\tfor(var i = 0; i<this.oldState.xExtra; i++) {\n\t\t\t\t\t\t\tlet unit = lastUnit.cloneNode(true);\n\t\t\t\t\t\t\tparentNode.appendChild(unit);\n\t\t\t\t\t\t\tsvgUnits.push(unit);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.renderer.setZeroline(d.yAxis.zeroLine);\n\n\t\t\t\t\tsvgUnits.map((unit, i) => {\n\t\t\t\t\t\tif(newX[i] === undefined || newY[i] === undefined) return;\n\t\t\t\t\t\tthis.elementsToAnimate.push(this.renderer['animate' + unitType](\n\t\t\t\t\t\t\tunit, // unit, with info to replace where it came from in the data\n\t\t\t\t\t\t\tnewX[i],\n\t\t\t\t\t\t\tnewY[i],\n\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\tthis.state.noOfDatasets\n\t\t\t\t\t\t));\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { $, getOffset } from '../utils/dom';\n\nexport default class PercentageChart extends BaseChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\tthis.type = 'percentage';\n\n\t\tthis.max_slices = 10;\n\t\tthis.max_legend_points = 6;\n\n\t\tthis.setup();\n\t}\n\n\tmakeChartArea() {\n\t\tthis.chartWrapper.className += ' ' + 'graph-focus-margin';\n\t\tthis.chartWrapper.style.marginTop = '45px';\n\n\t\tthis.statsWrapper.className += ' ' + 'graph-focus-margin';\n\t\tthis.statsWrapper.style.marginBottom = '30px';\n\t\tthis.statsWrapper.style.paddingTop = '0px';\n\n\t\tthis.chartDiv = $.create('div', {\n\t\t\tclassName: 'div',\n\t\t\tinside: this.chartWrapper\n\t\t});\n\n\t\tthis.chart = $.create('div', {\n\t\t\tclassName: 'progress-chart',\n\t\t\tinside: this.chartDiv\n\t\t});\n\t}\n\n\tsetupLayers() {\n\t\tthis.percentageBar = $.create('div', {\n\t\t\tclassName: 'progress',\n\t\t\tinside: this.chart\n\t\t});\n\t}\n\n\tsetup_values() {\n\t\tthis.slice_totals = [];\n\t\tlet all_totals = this.data.labels.map((d, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, d];\n\t\t}).filter(d => { return d[0] > 0; }); // keep only positive results\n\n\t\tlet totals = all_totals;\n\n\t\tif(all_totals.length > this.max_slices) {\n\t\t\tall_totals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = all_totals.slice(0, this.max_slices-1);\n\t\t\tlet others = all_totals.slice(this.max_slices-1);\n\n\t\t\tlet sum_of_others = 0;\n\t\t\tothers.map(d => {sum_of_others += d[0];});\n\n\t\t\ttotals.push([sum_of_others, 'Rest']);\n\n\t\t\tthis.colors[this.max_slices-1] = 'grey';\n\t\t}\n\n\t\tthis.labels = [];\n\t\ttotals.map(d => {\n\t\t\tthis.slice_totals.push(d[0]);\n\t\t\tthis.labels.push(d[1]);\n\t\t});\n\n\t\tthis.legend_totals = this.slice_totals.slice(0, this.max_legend_points);\n\t}\n\n\trenderComponents() {\n\t\tthis.grand_total = this.slice_totals.reduce((a, b) => a + b, 0);\n\t\tthis.slices = [];\n\t\tthis.slice_totals.map((total, i) => {\n\t\t\tlet slice = $.create('div', {\n\t\t\t\tclassName: `progress-bar`,\n\t\t\t\tinside: this.percentageBar,\n\t\t\t\tstyles: {\n\t\t\t\t\tbackground: this.colors[i],\n\t\t\t\t\twidth: total*100/this.grand_total + \"%\"\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.slices.push(slice);\n\t\t});\n\t}\n\n\tcalc() {}\n\n\tbindTooltip() {\n\t\tthis.slices.map((slice, i) => {\n\t\t\tslice.addEventListener('mouseenter', () => {\n\t\t\t\tlet g_off = getOffset(this.chartWrapper), p_off = getOffset(slice);\n\n\t\t\t\tlet x = p_off.left - g_off.left + slice.offsetWidth/2;\n\t\t\t\tlet y = p_off.top - g_off.top - 6;\n\t\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length>0\n\t\t\t\t\t? this.formatted_labels[i] : this.labels[i]) + ': ';\n\t\t\t\tlet percent = (this.slice_totals[i]*100/this.grand_total).toFixed(1);\n\n\t\t\t\tthis.tip.set_values(x, y, title, percent + \"%\");\n\t\t\t\tthis.tip.show_tip();\n\t\t\t});\n\t\t});\n\t}\n\n\trenderLegend() {\n\t\tlet x_values = this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t? this.formatted_labels : this.labels;\n\t\tthis.legend_totals.map((d, i) => {\n\t\t\tif(d) {\n\t\t\t\tlet stats = $.create('div', {\n\t\t\t\t\tclassName: 'stats',\n\t\t\t\t\tinside: this.statsWrapper\n\t\t\t\t});\n\t\t\t\tstats.innerHTML = `<span class=\"indicator\">\n\t\t\t\t\t<i style=\"background: ${this.colors[i]}\"></i>\n\t\t\t\t\t<span class=\"text-muted\">${x_values[i]}:</span>\n\t\t\t\t\t${d}\n\t\t\t\t</span>`;\n\t\t\t}\n\t\t});\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { $, getOffset } from '../utils/dom';\nimport { makePath } from '../utils/draw';\nimport { lightenDarkenColor } from '../utils/colors';\nimport { runSMILAnimation, transform } from '../utils/animation';\nconst ANGLE_RATIO = Math.PI / 180;\nconst FULL_ANGLE = 360;\n\nexport default class PieChart extends BaseChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\tthis.type = 'pie';\n\t\tthis.elements_to_animate = null;\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.max_slices = 10;\n\t\tthis.max_legend_points = 6;\n\t\tthis.isAnimate = false;\n\t\tthis.startAngle = args.startAngle || 0;\n\t\tthis.clockWise = args.clockWise || false;\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\t\tthis.setup();\n\t}\n\tsetup_values() {\n\t\tthis.centerX = this.width / 2;\n\t\tthis.centerY = this.height / 2;\n\t\tthis.radius = (this.height > this.width ? this.centerX : this.centerY);\n\t\tthis.slice_totals = [];\n\t\tlet all_totals = this.data.labels.map((d, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, d];\n\t\t}).filter(d => { return d[0] > 0; }); // keep only positive results\n\n\t\tlet totals = all_totals;\n\n\t\tif(all_totals.length > this.max_slices) {\n\t\t\tall_totals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = all_totals.slice(0, this.max_slices-1);\n\t\t\tlet others = all_totals.slice(this.max_slices-1);\n\n\t\t\tlet sum_of_others = 0;\n\t\t\tothers.map(d => {sum_of_others += d[0];});\n\n\t\t\ttotals.push([sum_of_others, 'Rest']);\n\n\t\t\tthis.colors[this.max_slices-1] = 'grey';\n\t\t}\n\n\t\tthis.labels = [];\n\t\ttotals.map(d => {\n\t\t\tthis.slice_totals.push(d[0]);\n\t\t\tthis.labels.push(d[1]);\n\t\t});\n\n\t\tthis.legend_totals = this.slice_totals.slice(0, this.max_legend_points);\n\t}\n\n\tstatic getPositionByAngle(angle,radius){\n\t\treturn {\n\t\t\tx:Math.sin(angle * ANGLE_RATIO) * radius,\n\t\t\ty:Math.cos(angle * ANGLE_RATIO) * radius,\n\t\t};\n\t}\n\tmakeArcPath(startPosition,endPosition){\n\t\tconst{centerX,centerY,radius,clockWise} = this;\n\t\treturn `M${centerX} ${centerY} L${centerX+startPosition.x} ${centerY+startPosition.y} A ${radius} ${radius} 0 0 ${clockWise ? 1 : 0} ${centerX+endPosition.x} ${centerY+endPosition.y} z`;\n\t}\n\trenderComponents(init){\n\t\tconst{radius,clockWise} = this;\n\t\tthis.grand_total = this.slice_totals.reduce((a, b) => a + b, 0);\n\t\tconst prevSlicesProperties = this.slicesProperties || [];\n\t\tthis.slices = [];\n\t\tthis.elements_to_animate = [];\n\t\tthis.slicesProperties = [];\n\t\tlet curAngle = 180 - this.startAngle;\n\t\tthis.slice_totals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / this.grand_total) * FULL_ANGLE;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = PieChart.getPositionByAngle(startAngle,radius);\n\t\t\tconst endPosition = PieChart.getPositionByAngle(endAngle,radius);\n\t\t\tconst prevProperty = init && prevSlicesProperties[i];\n\t\t\tlet curStart,curEnd;\n\t\t\tif(init){\n\t\t\t\tcurStart = prevProperty?prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty? prevProperty.endPosition : startPosition;\n\t\t\t}else{\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath = this.makeArcPath(curStart,curEnd);\n\t\t\tlet slice = makePath(curPath, 'pie-path', 'none', this.colors[i]);\n\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\tthis.drawArea.appendChild(slice);\n\n\t\t\tthis.slices.push(slice);\n\t\t\tthis.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: this.grand_total,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle:diffAngle\n\t\t\t});\n\t\t\tif(init){\n\t\t\t\tthis.elements_to_animate.push([{unit: slice, array: this.slices, index: this.slices.length - 1},\n\t\t\t\t\t{d:this.makeArcPath(startPosition,endPosition)},\n\t\t\t\t\t650, \"easein\",null,{\n\t\t\t\t\t\td:curPath\n\t\t\t\t\t}]);\n\t\t\t}\n\n\t\t});\n\t\tif(init){\n\t\t\trunSMILAnimation(this.chartWrapper, this.svg, this.elements_to_animate);\n\t\t}\n\t}\n\n\tcalTranslateByAngle(property){\n\t\tconst{radius,hoverRadio} = this;\n\t\tconst position = PieChart.getPositionByAngle(property.startAngle+(property.angle / 2),radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\thoverSlice(path,i,flag,e){\n\t\tif(!path) return;\n\t\tconst color = this.colors[i];\n\t\tif(flag){\n\t\t\ttransform(path,this.calTranslateByAngle(this.slicesProperties[i]));\n\t\t\tpath.style.fill = lightenDarkenColor(color,50);\n\t\t\tlet g_off = getOffset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length>0\n\t\t\t\t? this.formatted_labels[i] : this.labels[i]) + ': ';\n\t\t\tlet percent = (this.slice_totals[i]*100/this.grand_total).toFixed(1);\n\t\t\tthis.tip.set_values(x, y, title, percent + \"%\");\n\t\t\tthis.tip.show_tip();\n\t\t}else{\n\t\t\ttransform(path,'translate3d(0,0,0)');\n\t\t\tthis.tip.hide_tip();\n\t\t\tpath.style.fill = color;\n\t\t}\n\t}\n\n\tmouseMove(e){\n\t\tconst target = e.target;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevAcitve = this.curActiveSlice;\n\t\tfor(let i = 0; i < this.slices.length; i++){\n\t\t\tif(target === this.slices[i]){\n\t\t\t\tthis.hoverSlice(prevAcitve,prevIndex,false);\n\t\t\t\tthis.curActiveSlice = target;\n\t\t\t\tthis.curActiveSliceIndex = i;\n\t\t\t\tthis.hoverSlice(target,i,true,e);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tmouseLeave(){\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\n\t}\n\tbindTooltip() {\n\t\tthis.drawArea.addEventListener('mousemove',this.mouseMove);\n\t\tthis.drawArea.addEventListener('mouseleave',this.mouseLeave);\n\t}\n\n\trenderLegend() {\n\t\tlet x_values = this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t? this.formatted_labels : this.labels;\n\t\tthis.legend_totals.map((d, i) => {\n\t\t\tconst color = this.colors[i];\n\n\t\t\tif(d) {\n\t\t\t\tlet stats = $.create('div', {\n\t\t\t\t\tclassName: 'stats',\n\t\t\t\t\tinside: this.statsWrapper\n\t\t\t\t});\n\t\t\t\tstats.innerHTML = `<span class=\"indicator\">\n\t\t\t\t\t<i style=\"background-color:${color};\"></i>\n\t\t\t\t\t<span class=\"text-muted\">${x_values[i]}:</span>\n\t\t\t\t\t${d}\n\t\t\t\t</span>`;\n\t\t\t}\n\t\t});\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { makeSVGGroup, makeHeatSquare, makeText } from '../utils/draw';\nimport { addDays, getDdMmYyyy, getWeeksBetween } from '../utils/date-utils';\nimport { calcDistribution, getMaxCheckpoint } from '../utils/intervals';\nimport { isValidColor } from '../utils/colors';\n\nexport default class Heatmap extends BaseChart {\n\tconstructor({\n\t\tstart = '',\n\t\tdomain = '',\n\t\tsubdomain = '',\n\t\tdata = {},\n\t\tdiscrete_domains = 0,\n\t\tcount_label = '',\n\t\tlegend_colors = []\n\t}) {\n\t\tsuper(arguments[0]);\n\n\t\tthis.type = 'heatmap';\n\n\t\tthis.domain = domain;\n\t\tthis.subdomain = subdomain;\n\t\tthis.data = data;\n\t\tthis.discrete_domains = discrete_domains;\n\t\tthis.count_label = count_label;\n\n\t\tlet today = new Date();\n\t\tthis.start = start || addDays(today, 365);\n\n\t\tlegend_colors = legend_colors.slice(0, 5);\n\t\tthis.legend_colors = this.validate_colors(legend_colors)\n\t\t\t? legend_colors\n\t\t\t: ['#ebedf0', '#c6e48b', '#7bc96f', '#239a3b', '#196127'];\n\n\t\t// Fixed 5-color theme,\n\t\t// More colors are difficult to parse visually\n\t\tthis.distribution_size = 5;\n\n\t\tthis.translateX = 0;\n\t\t// this.setup();\n\t}\n\n\tvalidate_colors(colors) {\n\t\tif(colors.length < 5) return 0;\n\n\t\tlet valid = 1;\n\t\tcolors.forEach(function(string) {\n\t\t\tif(!isValidColor(string)) {\n\t\t\t\tvalid = 0;\n\t\t\t\tconsole.warn('\"' + string + '\" is not a valid color.');\n\t\t\t}\n\t\t}, this);\n\n\t\treturn valid;\n\t}\n\n\tconfigure() {\n\t\tsuper.configure();\n\t\tthis.today = new Date();\n\n\t\tif(!this.start) {\n\t\t\tthis.start = new Date();\n\t\t\tthis.start.setFullYear( this.start.getFullYear() - 1 );\n\t\t}\n\t\tthis.first_week_start = new Date(this.start.toDateString());\n\t\tthis.last_week_start = new Date(this.today.toDateString());\n\t\tif(this.first_week_start.getDay() !== 7) {\n\t\t\taddDays(this.first_week_start, (-1) * this.first_week_start.getDay());\n\t\t}\n\t\tif(this.last_week_start.getDay() !== 7) {\n\t\t\taddDays(this.last_week_start, (-1) * this.last_week_start.getDay());\n\t\t}\n\t\tthis.no_of_cols = getWeeksBetween(this.first_week_start + '', this.last_week_start + '') + 1;\n\t}\n\n\tcalcWidth() {\n\t\tthis.baseWidth = (this.no_of_cols + 3) * 12 ;\n\n\t\tif(this.discrete_domains) {\n\t\t\tthis.baseWidth += (12 * 12);\n\t\t}\n\t}\n\n\tsetupLayers() {\n\t\tthis.domain_label_group = this.makeLayer(\n\t\t\t'domain-label-group chart-label');\n\n\t\tthis.data_groups = this.makeLayer(\n\t\t\t'data-groups',\n\t\t\t`translate(0, 20)`\n\t\t);\n\t}\n\n\tsetup_values() {\n\t\tthis.domain_label_group.textContent = '';\n\t\tthis.data_groups.textContent = '';\n\n\t\tlet data_values = Object.keys(this.data).map(key => this.data[key]);\n\t\tthis.distribution = calcDistribution(data_values, this.distribution_size);\n\n\t\tthis.month_names = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n\t\t\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n\t\t];\n\n\t\tthis.render_all_weeks_and_store_x_values(this.no_of_cols);\n\t}\n\n\trender_all_weeks_and_store_x_values(no_of_weeks) {\n\t\tlet current_week_sunday = new Date(this.first_week_start);\n\t\tthis.week_col = 0;\n\t\tthis.current_month = current_week_sunday.getMonth();\n\n\t\tthis.months = [this.current_month + ''];\n\t\tthis.month_weeks = {}, this.month_start_points = [];\n\t\tthis.month_weeks[this.current_month] = 0;\n\t\tthis.month_start_points.push(13);\n\n\t\tfor(var i = 0; i < no_of_weeks; i++) {\n\t\t\tlet data_group, month_change = 0;\n\t\t\tlet day = new Date(current_week_sunday);\n\n\t\t\t[data_group, month_change] = this.get_week_squares_group(day, this.week_col);\n\t\t\tthis.data_groups.appendChild(data_group);\n\t\t\tthis.week_col += 1 + parseInt(this.discrete_domains && month_change);\n\t\t\tthis.month_weeks[this.current_month]++;\n\t\t\tif(month_change) {\n\t\t\t\tthis.current_month = (this.current_month + 1) % 12;\n\t\t\t\tthis.months.push(this.current_month + '');\n\t\t\t\tthis.month_weeks[this.current_month] = 1;\n\t\t\t}\n\t\t\taddDays(current_week_sunday, 7);\n\t\t}\n\t\tthis.render_month_labels();\n\t}\n\n\tget_week_squares_group(current_date, index) {\n\t\tconst no_of_weekdays = 7;\n\t\tconst square_side = 10;\n\t\tconst cell_padding = 2;\n\t\tconst step = 1;\n\t\tconst today_time = this.today.getTime();\n\n\t\tlet month_change = 0;\n\t\tlet week_col_change = 0;\n\n\t\tlet data_group = makeSVGGroup(this.data_groups, 'data-group');\n\n\t\tfor(var y = 0, i = 0; i < no_of_weekdays; i += step, y += (square_side + cell_padding)) {\n\t\t\tlet data_value = 0;\n\t\t\tlet color_index = 0;\n\n\t\t\tlet current_timestamp = current_date.getTime()/1000;\n\t\t\tlet timestamp = Math.floor(current_timestamp - (current_timestamp % 86400)).toFixed(1);\n\n\t\t\tif(this.data[timestamp]) {\n\t\t\t\tdata_value = this.data[timestamp];\n\t\t\t}\n\n\t\t\tif(this.data[Math.round(timestamp)]) {\n\t\t\t\tdata_value = this.data[Math.round(timestamp)];\n\t\t\t}\n\n\t\t\tif(data_value) {\n\t\t\t\tcolor_index = getMaxCheckpoint(data_value, this.distribution);\n\t\t\t}\n\n\t\t\tlet x = 13 + (index + week_col_change) * 12;\n\n\t\t\tlet dataAttr = {\n\t\t\t\t'data-date': getDdMmYyyy(current_date),\n\t\t\t\t'data-value': data_value,\n\t\t\t\t'data-day': current_date.getDay()\n\t\t\t};\n\t\t\tlet heatSquare = makeHeatSquare('day', x, y, square_side,\n\t\t\t\tthis.legend_colors[color_index], dataAttr);\n\n\t\t\tdata_group.appendChild(heatSquare);\n\n\t\t\tlet next_date = new Date(current_date);\n\t\t\taddDays(next_date, 1);\n\t\t\tif(next_date.getTime() > today_time) break;\n\n\n\t\t\tif(next_date.getMonth() - current_date.getMonth()) {\n\t\t\t\tmonth_change = 1;\n\t\t\t\tif(this.discrete_domains) {\n\t\t\t\t\tweek_col_change = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.month_start_points.push(13 + (index + week_col_change) * 12);\n\t\t\t}\n\t\t\tcurrent_date = next_date;\n\t\t}\n\n\t\treturn [data_group, month_change];\n\t}\n\n\trender_month_labels() {\n\t\t// this.first_month_label = 1;\n\t\t// if (this.first_week_start.getDate() > 8) {\n\t\t// \tthis.first_month_label = 0;\n\t\t// }\n\t\t// this.last_month_label = 1;\n\n\t\t// let first_month = this.months.shift();\n\t\t// let first_month_start = this.month_start_points.shift();\n\t\t// render first month if\n\n\t\t// let last_month = this.months.pop();\n\t\t// let last_month_start = this.month_start_points.pop();\n\t\t// render last month if\n\n\t\tthis.months.shift();\n\t\tthis.month_start_points.shift();\n\t\tthis.months.pop();\n\t\tthis.month_start_points.pop();\n\n\t\tthis.month_start_points.map((start, i) => {\n\t\t\tlet month_name =  this.month_names[this.months[i]].substring(0, 3);\n\t\t\tlet text = makeText('y-value-text', start+12, 10, month_name);\n\t\t\tthis.domain_label_group.appendChild(text);\n\t\t});\n\t}\n\n\trenderComponents() {\n\t\tArray.prototype.slice.call(\n\t\t\tthis.container.querySelectorAll('.graph-stats-container, .sub-title, .title')\n\t\t).map(d => {\n\t\t\td.style.display = 'None';\n\t\t});\n\t\tthis.chartWrapper.style.marginTop = '0px';\n\t\tthis.chartWrapper.style.paddingTop = '0px';\n\t}\n\n\tbindTooltip() {\n\t\tArray.prototype.slice.call(\n\t\t\tdocument.querySelectorAll(\".data-group .day\")\n\t\t).map(el => {\n\t\t\tel.addEventListener('mouseenter', (e) => {\n\t\t\t\tlet count = e.target.getAttribute('data-value');\n\t\t\t\tlet date_parts = e.target.getAttribute('data-date').split('-');\n\n\t\t\t\tlet month = this.month_names[parseInt(date_parts[1])-1].substring(0, 3);\n\n\t\t\t\tlet g_off = this.chartWrapper.getBoundingClientRect(), p_off = e.target.getBoundingClientRect();\n\n\t\t\t\tlet width = parseInt(e.target.getAttribute('width'));\n\t\t\t\tlet x = p_off.left - g_off.left + (width+2)/2;\n\t\t\t\tlet y = p_off.top - g_off.top - (width+2)/2;\n\t\t\t\tlet value = count + ' ' + this.count_label;\n\t\t\t\tlet name = ' on ' + month + ' ' + date_parts[0] + ', ' + date_parts[2];\n\n\t\t\t\tthis.tip.set_values(x, y, name, value, [], 1);\n\t\t\t\tthis.tip.show_tip();\n\t\t\t});\n\t\t});\n\t}\n\n\tupdate(data) {\n\t\tthis.data = data;\n\t\tthis.setup_values();\n\t\tthis.bindTooltip();\n\t}\n}\n"],"names":["expr","con","document","querySelector","getOffset","element","rect","getBoundingClientRect","top","documentElement","scrollTop","body","left","scrollLeft","isElementInViewport","el","bottom","window","innerHeight","clientHeight","right","innerWidth","clientWidth","getElementContentWidth","styles","getComputedStyle","padding","parseFloat","paddingLeft","paddingRight","fire","target","type","properties","evt","createEvent","initEvent","j","dispatchEvent","floatTwo","d","toFixed","fillArray","array","count","start","length","fillerArray","Array","Math","abs","fill","concat","getStringWidth","string","charWidth","getBarHeightAndYAttr","yTop","zeroLine","height","y","equilizeNoOfElements","array1","array2","extra_count","translate","unit","oldCoord","newCoord","duration","old","join","transform","STD_EASING","translateVertLine","xLine","newX","oldX","MARKER_LINE_ANIM_DUR","translateHoriLine","yLine","newY","oldY","animateRegion","rectGroup","newY1","newY2","oldY2","newHeight","childNodes","stroke-dasharray","getAttribute","animateBar","bar","x","width","nodeName","UNIT_ANIM_DUR","split","slice","animateDot","dot","cx","cy","animatePath","paths","newXList","newYList","pathComponents","pathStr","map","i","animPath","path","PATH_ANIM_DUR","push","region","regStartPt","regEndPt","animRegion","$","createSVG","tag","o","createElementNS","val","appendChild","ref","parentNode","insertBefore","keys","style","prop","setAttribute","renderVerticalGradient","svgDefElem","gradientId","setGradientStop","gradElem","offset","color","opacity","makeSVGContainer","parent","className","makeSVGDefs","svgContainer","makeSVGGroup","makePath","makeGradient","lighter","gradientDef","opacities","makeHeatSquare","size","data","args","key","makeText","content","FONT_SIZE","makeVertLine","label","y1","y2","options","stroke","BASE_LINE_COLOR","l","text","LABEL_MARGIN","line","makeHoriLine","x1","x2","lineType","pos","mode","AXIS_TICK_LENGTH","yMarker","labelSvg","yRegion","datasetBar","index","meta","minHeight","group","datasetDot","radius","getPaths","xList","yList","pointsStr","heatline","gradient_id","svgDefs","regionFill","gradient_id_region","limitColor","r","lightenDarkenColor","amt","col","getColor","usePound","num","parseInt","b","g","toString","isValidColor","test","getDifferentChart","current_type","ALL_CHART_TYPES","includes","error","COMPATIBLE_CHARTS","useColor","COLOR_COMPATIBLE_CHARTS","Chart","title","colors","undefined","animateSVGElement","props","dur","easingType","oldValues","animElement","cloneNode","newElement","attributeName","animateElement","currentValue","value","animAttr","EASING","webkitTransform","msTransform","mozTransform","oTransform","animateSVG","elements","newElements","animElements","replaceChild","animSvg","runSMILAnimation","svgElement","elementsToAnimate","animSvgElement","removeChild","REPLACE_ALL_NEW_DUR","dataPrep","labels","datasetLength","datasets","zeroArray","values","vals","isNaN","chartType","AXIS_DATASET_CHART_TYPES","yRegions","end","zeroDataPrep","realData","getComponent","name","constants","getData","Object","componentConfigs","filter","k","config","assign","ChartComponent","normalize","mantissa","exponent","sig","isFinite","exp","floor","log10","pow","getChartRangeIntervals","max","min","upperBound","ceil","lowerBound","range","noOfParts","partSize","intervals","getChartIntervals","maxValue","minValue","normalMaxValue","normalMinValue","calcChartIntervals","getPositiveFirstIntervals","absMinValue","intervalSize","unshift","withMinimum","pseudoMaxValue","pseudoMinValue","reverse","getZeroIndex","yPts","interval","getIntervalSize","indexOf","orderedArray","getValueRange","scale","yAxis","scaleMultiplier","calcDistribution","distributionSize","dataMaxValue","distributionStep","distribution","checkpoint","getMaxCheckpoint","treatAsUtc","dateStr","result","Date","setMinutes","getMinutes","getTimezoneOffset","getDdMmYyyy","date","dd","getDate","mm","getMonth","getFullYear","getWeeksBetween","startDateStr","endDateStr","getDaysBetween","addDays","numberOfDays","setDate","getChartByType","AxisChart","chartTypes","create","createElement","SvgTip","title_name","title_value","list_values","title_value_first","setup","make_tooltip","calc_position","container","this","hide_tip","data_point_list","addEventListener","innerHTML","set","_this2","li","offsetWidth","offsetHeight","max_left","pointer","pointer_offset","refresh","makeOverlay","transformValue","overlay","updateOverlay","attributes","attr","specified","nodeValue","PRESET_COLOR_MAP","DEFAULT_COLORS","BaseChart","subtitle","isNavigable","showLegend","rawChartArgs","arguments","argHeight","prepareData","prepareFirstData","state","currentIndex","overlays","configure","setColors","setMargins","_this","draw","list","baseHeight","translateY","translateXLeft","translateXRight","validate","_setup","makeContainer","makeTooltip","components","Map","chartWrapper","statsWrapper","tip","bindTooltip","init","calcWidth","calc","makeChartArea","setupComponents","forEach","c","drawArea","make","update","renderLegend","setupNavigation","baseWidth","render","animate","svg","updateNav","overlayGuides","updateOverlays","makeOverlays","bindUnits","bindOverlay","keyActions","onEnterKey","bind","onLeftArrow","onUpArrow","onRightArrow","onDownArrow","e","_this4","event","keyCode","point","dataset","dataPoint","layerClass","layerTransform","makeElements","animateElements","store","layer","oldData","textContent","positions","position","newData","newPos","newLabels","oldPos","oldLabels","_this3","marker","_this5","newStarts","oldStarts","unitType","yPositions","xPositions","barWidth","valuesOverPoints","stacked","cumulativeYs","cumulativeYPos","barsWidth","newXPos","newYPos","newCYPos","newValues","newCYs","oldXPos","oldYPos","oldCYPos","oldCYs","dots","hideDots","isSeries","formatTooltipY","formatTooltipX","barOptions","lineOptions","xAxisMode","yAxisMode","calcXPositions","calcYAxisParameters","getAllYValues","s","unitWidth","xOffset","xAxis","dataValues","intervalHeight","calcDatasetPoints","calcYExtremes","calcYRegions","scaleAll","yExtremes","yMarkers","cumulative","barDatasets","lineDatasets","barsConfigs","spaceRatio","p","lineConfigs","dotSize","markerConfigs","optionals","dataUnitComponents","component","relX","pageX","pageY","mapTooltipXPosition","titles","formatY","xVal","set_values","show_tip","currentUnit","units","_this6","svg_unit","units_array","_this8","setCurrentDataPoint","getDataPoint","datasetValues","splice","MultiAxisChart","noOfLeftAxes","axisPosition","leftCount","rightCount","unitArgs","guidePos","renderer","setZeroline","zeroline","xAxisPositions","svgUnits","lastUnit","oldState","xExtra","noOfDatasets","PercentageChart","max_slices","max_legend_points","marginTop","marginBottom","paddingTop","chartDiv","chart","percentageBar","slice_totals","all_totals","total","totals","sort","a","sum_of_others","legend_totals","grand_total","reduce","slices","g_off","p_off","formatted_labels","percent","x_values","ANGLE_RATIO","PI","PieChart","elements_to_animate","hoverRadio","isAnimate","startAngle","clockWise","mouseMove","mouseLeave","centerX","centerY","startPosition","endPosition","prevSlicesProperties","slicesProperties","curAngle","originDiffAngle","diffAngle","endAngle","getPositionByAngle","prevProperty","curStart","curEnd","curPath","makeArcPath","transition","property","angle","flag","calTranslateByAngle","prevIndex","curActiveSliceIndex","prevAcitve","curActiveSlice","hoverSlice","sin","cos","domain","subdomain","discrete_domains","count_label","legend_colors","today","validate_colors","distribution_size","translateX","valid","warn","setFullYear","first_week_start","toDateString","last_week_start","getDay","no_of_cols","domain_label_group","makeLayer","data_groups","data_values","month_names","render_all_weeks_and_store_x_values","no_of_weeks","current_week_sunday","week_col","current_month","months","month_weeks","month_start_points","data_group","month_change","day","get_week_squares_group","render_month_labels","current_date","today_time","getTime","week_col_change","square_side","data_value","color_index","current_timestamp","timestamp","round","dataAttr","heatSquare","next_date","shift","pop","substring","prototype","call","querySelectorAll","display","date_parts","month","setup_values","Heatmap"],"mappings":"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"}