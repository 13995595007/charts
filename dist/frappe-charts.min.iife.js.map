{"version":3,"file":"frappe-charts.min.iife.js","sources":["../src/js/utils/dom.js","../src/js/utils/helpers.js","../src/js/utils/draw-utils.js","../src/js/utils/animate.js","../src/js/utils/draw.js","../src/js/utils/colors.js","../src/js/config.js","../src/js/utils/animation.js","../src/js/charts/axis-chart-utils.js","../src/js/objects/ChartComponents.js","../src/js/utils/intervals.js","../src/js/utils/date-utils.js","../src/js/chart.js","../src/js/objects/SvgTip.js","../src/js/charts/BaseChart.js","../src/js/utils/constants.js","../src/js/charts/AxisChart.js","../src/js/charts/ScatterChart.js","../src/js/charts/LineChart.js","../src/js/charts/MultiAxisChart.js","../src/js/charts/PercentageChart.js","../src/js/charts/PieChart.js","../src/js/charts/Heatmap.js"],"sourcesContent":["export function $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function findNodeIndex(node)\n{\n\tvar i = 0;\n\twhile (node.previousSibling) {\n\t\tnode = node.previousSibling;\n\t\ti++;\n\t}\n\treturn i;\n}\n\n$.create = (tag, o) => {\n\tvar element = document.createElement(tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (i in element ) {\n\t\t\telement[i] = val;\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(i, val);\n\t\t}\n\t}\n\n\treturn element;\n};\n\nexport function getOffset(element) {\n\tlet rect = element.getBoundingClientRect();\n\treturn {\n\t\t// https://stackoverflow.com/a/7436602/6495043\n\t\t// rect.top varies with scroll, so we add whatever has been\n\t\t// scrolled to it to get absolute distance from actual page top\n\t\ttop: rect.top + (document.documentElement.scrollTop || document.body.scrollTop),\n\t\tleft: rect.left + (document.documentElement.scrollLeft || document.body.scrollLeft)\n\t};\n}\n\nexport function isElementInViewport(el) {\n\t// Although straightforward: https://stackoverflow.com/a/7557433/6495043\n\tvar rect = el.getBoundingClientRect();\n\n\treturn (\n\t\trect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\n\t);\n}\n\nexport function getElementContentWidth(element) {\n\tvar styles = window.getComputedStyle(element);\n\tvar padding = parseFloat(styles.paddingLeft) +\n\t\tparseFloat(styles.paddingRight);\n\n\treturn element.clientWidth - padding;\n}\n\nexport function bind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function (event) {\n\t\t\t\telement.addEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function unbind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function(event) {\n\t\t\t\telement.removeEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function fire(target, type, properties) {\n\tvar evt = document.createEvent(\"HTMLEvents\");\n\n\tevt.initEvent(type, true, true );\n\n\tfor (var j in properties) {\n\t\tevt[j] = properties[j];\n\t}\n\n\treturn target.dispatchEvent(evt);\n}\n","/**\n * Returns the value of a number upto 2 decimal places.\n * @param {Number} d Any number\n */\nexport function floatTwo(d) {\n\treturn parseFloat(d.toFixed(2));\n}\n\n/**\n * Returns whether or not two given arrays are equal.\n * @param {Array} arr1 First array\n * @param {Array} arr2 Second array\n */\nexport function arraysEqual(arr1, arr2) {\n\tif(arr1.length !== arr2.length) return false;\n\tlet areEqual = true;\n\tarr1.map((d, i) => {\n\t\tif(arr2[i] !== d) areEqual = false;\n\t});\n\treturn areEqual;\n}\n\n/**\n * Shuffles array in place. ES6 version\n * @param {Array} array An array containing the items.\n */\nexport function shuffle(array) {\n\t// Awesomeness: https://bost.ocks.org/mike/shuffle/\n\t// https://stackoverflow.com/a/2450976/6495043\n\t// https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array?noredirect=1&lq=1\n\n\tfor (let i = array.length - 1; i > 0; i--) {\n\t\tlet j = Math.floor(Math.random() * (i + 1));\n\t\t[array[i], array[j]] = [array[j], array[i]];\n\t}\n\n\treturn array;\n}\n\n/**\n * Fill an array with extra points\n * @param {Array} array Array\n * @param {Number} count number of filler elements\n * @param {Object} element element to fill with\n * @param {Boolean} start fill at start?\n */\nexport function fillArray(array, count, element, start=false) {\n\tif(!element) {\n\t\telement = start ? array[0] : array[array.length - 1];\n\t}\n\tlet fillerArray = new Array(Math.abs(count)).fill(element);\n\tarray = start ? fillerArray.concat(array) : array.concat(fillerArray);\n\treturn array;\n}\n\n/**\n * Returns pixel width of string.\n * @param {String} string\n * @param {Number} charWidth Width of single char in pixels\n */\nexport function getStringWidth(string, charWidth) {\n\treturn (string+\"\").length * charWidth;\n}\n\nexport function bindChange(obj, getFn, setFn) {\n\treturn new Proxy(obj, {\n\t\tset: function(target, prop, value) {\n\t\t\tsetFn();\n\t\t\treturn Reflect.set(target, prop, value);\n\t\t},\n\t\tget: function(target, prop, value) {\n\t\t\tgetFn();\n\t\t\treturn Reflect.get(target, prop);\n\t\t}\n\t});\n}\n","import { fillArray } from './helpers';\n\nexport function getBarHeightAndYAttr(yTop, zeroLine) {\n\tlet height, y;\n\tif (yTop <= zeroLine) {\n\t\theight = zeroLine - yTop;\n\t\ty = yTop;\n\t} else {\n\t\theight = yTop - zeroLine;\n\t\ty = zeroLine;\n\t}\n\n\treturn [height, y];\n}\n\nexport function equilizeNoOfElements(array1, array2,\n\textra_count=array2.length - array1.length) {\n\n\t// Doesn't work if either has zero elements.\n\tif(extra_count > 0) {\n\t\tarray1 = fillArray(array1, extra_count);\n\t} else {\n\t\tarray2 = fillArray(array2, extra_count);\n\t}\n\treturn [array1, array2];\n}\n\n// let char_width = 8;\n// let allowed_space = avgUnitWidth * 1.5;\n// let allowed_letters = allowed_space / 8;\n\n// return values.map((value, i) => {\n// \tlet space_taken = getStringWidth(value, char_width) + 2;\n// \tif(space_taken > allowed_space) {\n// \t\tif(isSeries) {\n// \t\t\t// Skip some axis lines if X axis is a series\n// \t\t\tlet skips = 1;\n// \t\t\twhile((space_taken/skips)*2 > allowed_space) {\n// \t\t\t\tskips++;\n// \t\t\t}\n// \t\t\tif(i % skips !== 0) {\n// \t\t\t\treturn;\n// \t\t\t}\n// \t\t} else {\n// \t\t\tvalue = value.slice(0, allowed_letters-3) + \" ...\";\n// \t\t}\n// \t}\n","import { getBarHeightAndYAttr } from './draw-utils';\n\nexport const UNIT_ANIM_DUR = 350;\nexport const PATH_ANIM_DUR = 350;\nexport const MARKER_LINE_ANIM_DUR = UNIT_ANIM_DUR;\nexport const REPLACE_ALL_NEW_DUR = 250;\n\nexport const STD_EASING = 'easein';\n\nexport function translate(unit, oldCoord, newCoord, duration) {\n\tlet old = typeof oldCoord === 'string' ? oldCoord : oldCoord.join(', ');\n\treturn [\n\t\tunit,\n\t\t{transform: newCoord.join(', ')},\n\t\tduration,\n\t\tSTD_EASING,\n\t\t\"translate\",\n\t\t{transform: old}\n\t];\n}\n\nexport function translateVertLine(xLine, newX, oldX) {\n\treturn translate(xLine, [oldX, 0], [newX, 0], MARKER_LINE_ANIM_DUR);\n}\n\nexport function translateHoriLine(yLine, newY, oldY) {\n\treturn translate(yLine, [0, oldY], [0, newY], MARKER_LINE_ANIM_DUR);\n}\n\nexport function animateRegion(rectGroup, newY1, newY2, oldY2) {\n\tlet newHeight = newY1 - newY2;\n\tlet rect = rectGroup.childNodes[0];\n\tlet width = rect.getAttribute(\"width\");\n\tlet rectAnim = [\n\t\trect,\n\t\t{ height: newHeight, 'stroke-dasharray': `${width}, ${newHeight}` },\n\t\tMARKER_LINE_ANIM_DUR,\n\t\tSTD_EASING\n\t]\n\n\tlet groupAnim = translate(rectGroup, [0, oldY2], [0, newY2], MARKER_LINE_ANIM_DUR);\n\treturn [rectAnim, groupAnim];\n}\n\nexport function animateBar(bar, x, yTop, width, index=0, meta={}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\tif(bar.nodeName !== 'rect') {\n\t\tlet rect = bar.childNodes[0];\n\t\tlet rectAnim = [\n\t\t\trect,\n\t\t\t{width: width, height: height},\n\t\t\tUNIT_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t]\n\n\t\tlet old = bar.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(bar, old, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [rectAnim, groupAnim];\n\t} else {\n\t\treturn [[bar, {width: width, height: height, x: x, y: y}, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// bar.animate({height: args.newHeight, y: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport var Animator = (function() {\n\tvar Animator = function(totalHeight, totalWidth, zeroLine, avgUnitWidth) {\n\t\t// constants\n\t\tthis.totalHeight = totalHeight;\n\t\tthis.totalWidth = totalWidth;\n\n\t\t// changeables\n\t\tthis.avgUnitWidth = avgUnitWidth;\n\t\tthis.zeroLine = zeroLine;\n\t};\n\n\tAnimator.prototype = {\n\t\tbar: function(barObj, x, yTop, index, noOfDatasets) {\n\t\t\tlet start = x - this.avgUnitWidth/4;\n\t\t\tlet width = (this.avgUnitWidth/2)/noOfDatasets;\n\t\t\tlet [height, y] = getBarHeightAndYAttr(yTop, this.zeroLine, this.totalHeight);\n\n\t\t\tx = start + (width * index);\n\n\t\t\treturn [barObj, {width: width, height: height, x: x, y: y}, UNIT_ANIM_DUR, STD_EASING];\n\t\t\t// bar.animate({height: args.newHeight, y: yTop}, UNIT_ANIM_DUR, mina.easein);\n\t\t},\n\n\t\tdot: function(dotObj, x, yTop) {\n\t\t\treturn [dotObj, {cx: x, cy: yTop}, UNIT_ANIM_DUR, STD_EASING];\n\t\t\t// dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\n\t\t},\n\n\t\tpath: function(d, pathStr) {\n\t\t\tlet pathComponents = [];\n\t\t\tconst animPath = [{unit: d.path, object: d, key: 'path'}, {d:\"M\"+pathStr}, PATH_ANIM_DUR, STD_EASING];\n\t\t\tpathComponents.push(animPath);\n\n\t\t\tif(d.regionPath) {\n\t\t\t\tlet regStartPt = `0,${this.zeroLine}L`;\n\t\t\t\tlet regEndPt = `L${this.totalWidth}, ${this.zeroLine}`;\n\n\t\t\t\tconst animRegion = [\n\t\t\t\t\t{unit: d.regionPath, object: d, key: 'regionPath'},\n\t\t\t\t\t{d:\"M\" + regStartPt + pathStr + regEndPt},\n\t\t\t\t\tPATH_ANIM_DUR,\n\t\t\t\t\tSTD_EASING\n\t\t\t\t];\n\t\t\t\tpathComponents.push(animRegion);\n\t\t\t}\n\n\t\t\treturn pathComponents;\n\t\t}\n\t};\n\n\treturn Animator;\n})();\n\n\n","import { getBarHeightAndYAttr } from './draw-utils';\nimport { getStringWidth } from './helpers';\nimport { STD_EASING, UNIT_ANIM_DUR, MARKER_LINE_ANIM_DUR, PATH_ANIM_DUR } from './animate';\n\n/*\n\n<filter id=\"glow\" x=\"-10%\" y=\"-10%\" width=\"120%\" height=\"120%\">\n\t<feGaussianBlur stdDeviation=\"0.5 0.5\" result=\"glow\"></feGaussianBlur>\n\t<feMerge>\n\t\t<feMergeNode in=\"glow\"></feMergeNode>\n\t\t<feMergeNode in=\"glow\"></feMergeNode>\n\t\t<feMergeNode in=\"glow\"></feMergeNode>\n\t</feMerge>\n</filter>\n\n    filter: url(#glow);\n    fill: #fff;\n\n*/\n\nconst AXIS_TICK_LENGTH = 6;\nconst LABEL_MARGIN = 4;\nexport const FONT_SIZE = 10;\nconst BASE_LINE_COLOR = '#dadada';\nconst BASE_BG_COLOR = '#F7FAFC';\n\nfunction $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function createSVG(tag, o) {\n\tvar element = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif(i === \"className\") { i = \"class\"; }\n\t\t\tif(i === \"innerHTML\") {\n\t\t\t\telement['textContent'] = val;\n\t\t\t} else {\n\t\t\t\telement.setAttribute(i, val);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn element;\n}\n\nfunction renderVerticalGradient(svgDefElem, gradientId) {\n\treturn createSVG('linearGradient', {\n\t\tinside: svgDefElem,\n\t\tid: gradientId,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: 0,\n\t\ty2: 1\n\t});\n}\n\nfunction setGradientStop(gradElem, offset, color, opacity) {\n\treturn createSVG('stop', {\n\t\t'inside': gradElem,\n\t\t'style': `stop-color: ${color}`,\n\t\t'offset': offset,\n\t\t'stop-opacity': opacity\n\t});\n}\n\nexport function makeSVGContainer(parent, className, width, height) {\n\treturn createSVG('svg', {\n\t\tclassName: className,\n\t\tinside: parent,\n\t\twidth: width,\n\t\theight: height\n\t});\n}\n\nexport function makeSVGDefs(svgContainer) {\n\treturn createSVG('defs', {\n\t\tinside: svgContainer,\n\t});\n}\n\nexport function makeSVGGroup(parent, className, transform='') {\n\treturn createSVG('g', {\n\t\tclassName: className,\n\t\tinside: parent,\n\t\ttransform: transform\n\t});\n}\n\nexport function wrapInSVGGroup(elements, className='') {\n\tlet g = createSVG('g', {\n\t\tclassName: className\n\t});\n\telements.forEach(e => g.appendChild(e));\n\treturn g;\n}\n\nexport function makePath(pathStr, className='', stroke='none', fill='none') {\n\treturn createSVG('path', {\n\t\tclassName: className,\n\t\td: pathStr,\n\t\tstyles: {\n\t\t\tstroke: stroke,\n\t\t\tfill: fill\n\t\t}\n\t});\n}\n\nexport function makeGradient(svgDefElem, color, lighter = false) {\n\tlet gradientId ='path-fill-gradient' + '-' + color;\n\tlet gradientDef = renderVerticalGradient(svgDefElem, gradientId);\n\tlet opacities = [1, 0.6, 0.2];\n\tif(lighter) {\n\t\topacities = [0.4, 0.2, 0];\n\t}\n\n\tsetGradientStop(gradientDef, \"0%\", color, opacities[0]);\n\tsetGradientStop(gradientDef, \"50%\", color, opacities[1]);\n\tsetGradientStop(gradientDef, \"100%\", color, opacities[2]);\n\n\treturn gradientId;\n}\n\nexport function makeHeatSquare(className, x, y, size, fill='none', data={}) {\n\tlet args = {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: size,\n\t\theight: size,\n\t\tfill: 1\n\t};\n\n\tObject.keys(data).map(key => {\n\t\targs[key] = data[key];\n\t});\n\n\treturn createSVG(\"rect\", args);\n}\n\nexport function makeText(className, x, y, content) {\n\treturn createSVG('text', {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\tdy: (FONT_SIZE / 2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\tinnerHTML: content\n\t});\n}\n\nfunction makeVertLine(x, label, y1, y2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tlet l = createSVG('line', {\n\t\tclassName: 'line-vertical ' + options.className,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: y1,\n\t\ty2: y2,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: 0,\n\t\ty: y1 > y2 ? y1 + LABEL_MARGIN : y1 - LABEL_MARGIN - FONT_SIZE,\n\t\tdy: FONT_SIZE + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'middle',\n\t\tinnerHTML: label\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(${ x }, 0)`\n\t});\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nfunction makeHoriLine(y, label, x1, x2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.lineType) options.lineType = '';\n\tlet className = 'line-horizontal ' + options.className +\n\t\t(options.lineType === \"dashed\" ? \"dashed\": \"\");\n\n\tlet l = createSVG('line', {\n\t\tclassName: className,\n\t\tx1: x1,\n\t\tx2: x2,\n\t\ty1: 0,\n\t\ty2: 0,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: x1 < x2 ? x1 - LABEL_MARGIN : x1 + LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / 2 - 2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': x1 < x2 ? 'end' : 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(0, ${y})`,\n\t\t'stroke-opacity': 1\n\t});\n\n\tif(text === 0 || text === '0') {\n\t\tline.style.stroke = \"rgba(27, 31, 35, 0.6)\";\n\t}\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nexport function yLine(y, label, width, options={}) {\n\tif(!options.pos) options.pos = 'left';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\tlet x1 = -1 * AXIS_TICK_LENGTH;\n\tlet x2 = options.mode === 'span' ? width + AXIS_TICK_LENGTH : 0;\n\n\tif(options.mode === 'tick' && options.pos === 'right') {\n\t\tx1 = width + AXIS_TICK_LENGTH\n\t\tx2 = width;\n\t}\n\n\tlet offset = options.pos === 'left' ? -1 * options.offset : options.offset;\n\n\tx1 += options.offset;\n\tx2 += options.offset;\n\n\treturn makeHoriLine(y, label, x1, x2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType\n\t});\n}\n\nexport function xLine(x, label, height, options={}) {\n\tif(!options.pos) options.pos = 'bottom';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\t// Draw X axis line in span/tick mode with optional label\n\t//                        \ty2(span)\n\t// \t\t\t\t\t\t|\n\t// \t\t\t\t\t\t|\n\t//\t\t\t\tx line\t|\n\t//\t\t\t\t\t\t|\n\t// \t\t\t\t\t   \t|\n\t// ---------------------+-- y2(tick)\n\t//\t\t\t\t\t\t|\n\t//\t\t\t\t\t\t\ty1\n\n\tlet y1 = height + AXIS_TICK_LENGTH;\n\tlet y2 = options.mode === 'span' ? -1 * AXIS_TICK_LENGTH : height;\n\n\tif(options.mode === 'tick' && options.pos === 'top') {\n\t\t// top axis ticks\n\t\ty1 = -1 * AXIS_TICK_LENGTH;\n\t\ty2 = 0;\n\t}\n\n\treturn makeVertLine(x, label, y1, y2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType\n\t});\n}\n\nexport function yMarker(y, label, width, options={}) {\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: width - getStringWidth(label, 5) - LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = makeHoriLine(y, '', 0, width, {\n\t\tstroke: options.stroke || BASE_LINE_COLOR,\n\t\tclassName: options.className || '',\n\t\tlineType: options.lineType\n\t});\n\n\tline.appendChild(labelSvg);\n\n\treturn line;\n}\n\nexport function yRegion(y1, y2, width, label) {\n\t// return a group\n\tlet height = y1 - y2;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`, // remove class\n\t\tstyles: {\n\t\t\tfill: `rgba(228, 234, 239, 0.49)`,\n\t\t\tstroke: BASE_LINE_COLOR,\n\t\t\t'stroke-dasharray': `${width}, ${height}`\n\t\t},\n\t\t// 'data-point-index': index,\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: width,\n\t\theight: height\n\t});\n\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: width - getStringWidth(label, 4.5) - LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet region = createSVG('g', {\n\t\ttransform: `translate(0, ${y2})`\n\t});\n\n\tregion.appendChild(rect);\n\tregion.appendChild(labelSvg);\n\n\treturn region;\n}\n\nexport function datasetBar(x, yTop, width, color, label='', index=0, offset=0, meta={}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\t// console.log(yTop, meta.zeroLine, y, offset);\n\ty -= offset;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`,\n\t\tstyle: `fill: ${color}`,\n\t\t'data-point-index': index,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height || meta.minHeight // TODO: correct y for positive min height\n\t});\n\n\tif(!label && !label.length) {\n\t\treturn rect;\n\t} else {\n\t\trect.setAttribute('y', 0);\n\t\trect.setAttribute('x', 0);\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: width/2,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(rect);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nexport class AxisChartRenderer {\n\tconstructor(state) {\n\t\tthis.refreshState(state);\n\t}\n\n\trefreshState(state) {\n\t\tthis.totalHeight = state.totalHeight;\n\t\tthis.totalWidth = state.totalWidth;\n\t\tthis.zeroLine = state.zeroLine;\n\t\tthis.unitWidth = state.unitWidth;\n\t\tthis.xAxisMode = state.xAxisMode;\n\t\tthis.yAxisMode = state.yAxisMode;\n\t}\n\n\tsetZeroline(zeroLine) {\n\t\tthis.zeroLine = zeroLine;\n\t}\n\n\txMarker() {}\n\n\n\txRegion() {\n\t\treturn createSVG('rect', {\n\t\t\tclassName: `bar mini`, // remove class\n\t\t\tstyle: `fill: rgba(228, 234, 239, 0.49)`,\n\t\t\t// 'data-point-index': index,\n\t\t\tx: 0,\n\t\t\ty: y2,\n\t\t\twidth: this.totalWidth,\n\t\t\theight: y1 - y2\n\t\t});\n\n\t\treturn region;\n\t}\n\n\tanimatebar(bar, x, yTop, index, noOfDatasets) {\n\t\tlet start = x - this.avgUnitWidth/4;\n\t\tlet width = (this.avgUnitWidth/2)/noOfDatasets;\n\t\tlet [height, y] = getBarHeightAndYAttr(yTop, this.zeroLine, this.totalHeight);\n\n\t\tx = start + (width * index);\n\n\t\treturn [bar, {width: width, height: height, x: x, y: y}, UNIT_ANIM_DUR, STD_EASING];\n\t\t// bar.animate({height: args.newHeight, y: yTop}, UNIT_ANIM_DUR, mina.easein);\n\t}\n\n\tanimatedot(dot, x, yTop) {\n\t\treturn [dot, {cx: x, cy: yTop}, UNIT_ANIM_DUR, STD_EASING];\n\t\t// dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\n\t}\n\n\tanimatepath(paths, pathStr) {\n\t\tlet pathComponents = [];\n\t\tconst animPath = [paths[0], {d:\"M\"+pathStr}, PATH_ANIM_DUR, STD_EASING];\n\t\tpathComponents.push(animPath);\n\n\t\tif(paths[1]) {\n\t\t\tlet regStartPt = `0,${this.zeroLine}L`;\n\t\t\tlet regEndPt = `L${this.totalWidth}, ${this.zeroLine}`;\n\n\t\t\tconst animRegion = [\n\t\t\t\tpaths[1],\n\t\t\t\t{d:\"M\" + regStartPt + pathStr + regEndPt},\n\t\t\t\tPATH_ANIM_DUR,\n\t\t\t\tSTD_EASING\n\t\t\t];\n\t\t\tpathComponents.push(animRegion);\n\t\t}\n\n\t\treturn pathComponents;\n\t}\n}\n","const PRESET_COLOR_MAP = {\n\t'light-blue': '#7cd6fd',\n\t'blue': '#5e64ff',\n\t'violet': '#743ee2',\n\t'red': '#ff5858',\n\t'orange': '#ffa00a',\n\t'yellow': '#feef72',\n\t'green': '#28a745',\n\t'light-green': '#98d85b',\n\t'purple': '#b554ff',\n\t'magenta': '#ffa3ef',\n\t'black': '#36114C',\n\t'grey': '#bdd3e6',\n\t'light-grey': '#f0f4f7',\n\t'dark-grey': '#b8c2cc'\n};\n\nexport const DEFAULT_COLORS = ['light-blue', 'blue', 'violet', 'red', 'orange',\n\t'yellow', 'green', 'light-green', 'purple', 'magenta'];\n\nfunction limitColor(r){\n\tif (r > 255) return 255;\n\telse if (r < 0) return 0;\n\treturn r;\n}\n\nexport function lightenDarkenColor(color, amt) {\n\tlet col = getColor(color);\n\tlet usePound = false;\n\tif (col[0] == \"#\") {\n\t\tcol = col.slice(1);\n\t\tusePound = true;\n\t}\n\tlet num = parseInt(col,16);\n\tlet r = limitColor((num >> 16) + amt);\n\tlet b = limitColor(((num >> 8) & 0x00FF) + amt);\n\tlet g = limitColor((num & 0x0000FF) + amt);\n\treturn (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\nexport function isValidColor(string) {\n\t// https://stackoverflow.com/a/8027444/6495043\n\treturn /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(string);\n}\n\nexport const getColor = (color) => {\n\treturn PRESET_COLOR_MAP[color] || color;\n};\n","import Chart from './chart';\n\nconst ALL_CHART_TYPES = ['line', 'scatter', 'bar', 'percentage', 'heatmap', 'pie'];\n\nconst COMPATIBLE_CHARTS = {\n\tbar: ['line', 'scatter', 'percentage', 'pie'],\n\tline: ['scatter', 'bar', 'percentage', 'pie'],\n\tpie: ['line', 'scatter', 'percentage', 'bar'],\n\tscatter: ['line', 'bar', 'percentage', 'pie'],\n\tpercentage: ['bar', 'line', 'scatter', 'pie'],\n\theatmap: []\n};\n\n// Needs structure as per only labels/datasets\nconst COLOR_COMPATIBLE_CHARTS = {\n\tbar: ['line', 'scatter'],\n\tline: ['scatter', 'bar'],\n\tpie: ['percentage'],\n\tscatter: ['line', 'bar'],\n\tpercentage: ['pie'],\n\theatmap: []\n};\n\nexport function getDifferentChart(type, current_type, args) {\n\tif(type === current_type) return;\n\n\tif(!ALL_CHART_TYPES.includes(type)) {\n\t\tconsole.error(`'${type}' is not a valid chart type.`);\n\t}\n\n\tif(!COMPATIBLE_CHARTS[current_type].includes(type)) {\n\t\tconsole.error(`'${current_type}' chart cannot be converted to a '${type}' chart.`);\n\t}\n\n\t// whether the new chart can use the existing colors\n\tconst useColor = COLOR_COMPATIBLE_CHARTS[current_type].includes(type);\n\n\t// Okay, this is anticlimactic\n\t// this function will need to actually be 'changeChartType(type)'\n\t// that will update only the required elements, but for now ...\n\treturn new Chart({\n\t\tparent: args.parent,\n\t\ttitle: args.title,\n\t\tdata: args.data,\n\t\ttype: type,\n\t\theight: args.height,\n\t\tcolors: useColor ? args.colors : undefined\n\t});\n}","// Leveraging SMIL Animations\n\nimport { REPLACE_ALL_NEW_DUR } from './animate';\n\nconst EASING = {\n\tease: \"0.25 0.1 0.25 1\",\n\tlinear: \"0 0 1 1\",\n\t// easein: \"0.42 0 1 1\",\n\teasein: \"0.1 0.8 0.2 1\",\n\teaseout: \"0 0 0.58 1\",\n\teaseinout: \"0.42 0 0.58 1\"\n};\n\nfunction animateSVGElement(element, props, dur, easingType=\"linear\", type=undefined, oldValues={}) {\n\n\tlet animElement = element.cloneNode(true);\n\tlet newElement = element.cloneNode(true);\n\n\tfor(var attributeName in props) {\n\t\tlet animateElement;\n\t\tif(attributeName === 'transform') {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animateTransform\");\n\t\t} else {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animate\");\n\t\t}\n\t\tlet currentValue = oldValues[attributeName] || element.getAttribute(attributeName);\n\t\tlet value = props[attributeName];\n\n\t\tlet animAttr = {\n\t\t\tattributeName: attributeName,\n\t\t\tfrom: currentValue,\n\t\t\tto: value,\n\t\t\tbegin: \"0s\",\n\t\t\tdur: dur/1000 + \"s\",\n\t\t\tvalues: currentValue + \";\" + value,\n\t\t\tkeySplines: EASING[easingType],\n\t\t\tkeyTimes: \"0;1\",\n\t\t\tcalcMode: \"spline\",\n\t\t\tfill: 'freeze'\n\t\t};\n\n\t\tif(type) {\n\t\t\tanimAttr[\"type\"] = type;\n\t\t}\n\n\t\tfor (var i in animAttr) {\n\t\t\tanimateElement.setAttribute(i, animAttr[i]);\n\t\t}\n\n\t\tanimElement.appendChild(animateElement);\n\n\t\tif(type) {\n\t\t\tnewElement.setAttribute(attributeName, `translate(${value})`);\n\t\t} else {\n\t\t\tnewElement.setAttribute(attributeName, value);\n\t\t}\n\t}\n\n\treturn [animElement, newElement];\n}\n\nexport function transform(element, style) { // eslint-disable-line no-unused-vars\n\telement.style.transform = style;\n\telement.style.webkitTransform = style;\n\telement.style.msTransform = style;\n\telement.style.mozTransform = style;\n\telement.style.oTransform = style;\n}\n\nfunction animateSVG(svgContainer, elements) {\n\tlet newElements = [];\n\tlet animElements = [];\n\n\telements.map(element => {\n\t\tlet unit = element[0];\n\t\tlet parent = unit.parentNode;\n\n\t\tlet animElement, newElement;\n\n\t\telement[0] = unit;\n\t\t[animElement, newElement] = animateSVGElement(...element);\n\n\t\tnewElements.push(newElement);\n\t\tanimElements.push([animElement, parent]);\n\n\t\tparent.replaceChild(animElement, unit);\n\t});\n\n\tlet animSvg = svgContainer.cloneNode(true);\n\n\tanimElements.map((animElement, i) => {\n\t\tanimElement[1].replaceChild(newElements[i], animElement[0]);\n\t\telements[i][0] = newElements[i];\n\t});\n\n\treturn animSvg;\n}\n\nexport function runSMILAnimation(parent, svgElement, elementsToAnimate) {\n\tif(elementsToAnimate.length === 0) return;\n\n\tlet animSvgElement = animateSVG(svgElement, elementsToAnimate);\n\tif(svgElement.parentNode == parent) {\n\t\tparent.removeChild(svgElement);\n\t\tparent.appendChild(animSvgElement);\n\n\t}\n\n\t// Replace the new svgElement (data has already been replaced)\n\tsetTimeout(() => {\n\t\tif(animSvgElement.parentNode == parent) {\n\t\t\tparent.removeChild(animSvgElement);\n\t\t\tparent.appendChild(svgElement);\n\t\t}\n\t}, REPLACE_ALL_NEW_DUR);\n}\n","import { floatTwo, fillArray } from '../utils/helpers';\nimport { DEFAULT_AXIS_CHART_TYPE, AXIS_DATASET_CHART_TYPES } from '../utils/constants';\n\nexport function dataPrep(data, type) {\n\tdata.labels = data.labels || [];\n\n\tlet datasetLength = data.labels.length;\n\n\t// Datasets\n\tlet datasets = data.datasets;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\tif(!datasets) {\n\t\t// default\n\t\tdatasets = [{\n\t\t\tvalues: zeroArray\n\t\t}];\n\t}\n\n\tdatasets.map((d, i)=> {\n\t\t// Set values\n\t\tif(!d.values) {\n\t\t\td.values = zeroArray;\n\t\t} else {\n\t\t\t// Check for non values\n\t\t\tlet vals = d.values;\n\t\t\tvals = vals.map(val => (!isNaN(val) ? val : 0));\n\n\t\t\t// Trim or extend\n\t\t\tif(vals.length > datasetLength) {\n\t\t\t\tvals = vals.slice(0, datasetLength);\n\t\t\t} else {\n\t\t\t\tvals = fillArray(vals, datasetLength - vals.length, 0);\n\t\t\t}\n\t\t}\n\n\t\t// Set labels\n\t\t//\n\n\t\t// Set type\n\t\tif(!d.chartType ) {\n\t\t\tif(!AXIS_DATASET_CHART_TYPES.includes(type)) type === DEFAULT_AXIS_CHART_TYPE;\n\t\t\td.chartType = type;\n\t\t}\n\n\t});\n\n\t// Markers\n\n\t// Regions\n\t// data.yRegions = data.yRegions || [];\n\tif(data.yRegions) {\n\t\tdata.yRegions.map(d => {\n\t\t\tif(d.end < d.start) {\n\t\t\t\t[d.start, d.end] = [d.end, start];\n\t\t\t}\n\t\t});\n\t}\n\n\treturn data;\n}\n\nexport function zeroDataPrep(realData) {\n\tlet datasetLength = realData.labels.length;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\n\tlet zeroData = {\n\t\tlabels: realData.labels.slice(0, -1),\n\t\tdatasets: realData.datasets.map(d => {\n\t\t\treturn {\n\t\t\t\tname: '',\n\t\t\t\tvalues: zeroArray.slice(0, -1),\n\t\t\t\tchartType: d.chartType\n\t\t\t}\n\t\t}),\n\t\tyRegions: [\n\t\t\t{\n\t\t\t\tstart: 0,\n\t\t\t\tend: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t],\n\t\tyMarkers: [\n\t\t\t{\n\t\t\t\tvalue: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t]\n\t};\n\n\treturn zeroData;\n}","import { makeSVGGroup } from '../utils/draw';\nimport { xLine, yLine, yMarker, yRegion, datasetBar } from '../utils/draw';\nimport { equilizeNoOfElements } from '../utils/draw-utils';\nimport { Animator, translateHoriLine, translateVertLine, animateRegion, animateBar } from '../utils/animate';\n\nclass ChartComponent {\n\tconstructor({\n\t\tlayerClass = '',\n\t\tlayerTransform = '',\n\t\tconstants,\n\n\t\tgetData,\n\t\tmakeElements,\n\t\tanimateElements\n\t}) {\n\t\tthis.layerTransform = layerTransform;\n\t\tthis.constants = constants;\n\n\t\tthis.makeElements = makeElements;\n\t\tthis.getData = getData;\n\n\t\tthis.animateElements = animateElements;\n\n\t\tthis.store = [];\n\n\t\tthis.layerClass = layerClass;\n\t\tthis.layerClass = typeof(this.layerClass) === 'function'\n\t\t\t? this.layerClass() : this.layerClass;\n\n\t\tthis.refresh();\n\t}\n\n\trefresh(data) {\n\t\tthis.data = data || this.getData();\n\t}\n\n\tsetup(parent) {\n\t\tthis.layer = makeSVGGroup(parent, this.layerClass, this.layerTransform);\n\t}\n\n\tmake() {\n\t\tthis.render(this.data);\n\t\tthis.oldData = this.data;\n\t}\n\n\trender(data) {\n\t\tthis.store = this.makeElements(data);\n\n\t\tthis.layer.textContent = '';\n\t\tthis.store.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t}\n\n\tupdate(animate = true) {\n\t\tthis.refresh();\n\t\tlet animateElements = []\n\t\tif(animate) {\n\t\t\tanimateElements = this.animateElements(this.data);\n\t\t}\n\t\t// TODO: Can we remove this?\n\t\tsetTimeout(() => {\n\t\t\tthis.make();\n\t\t}, 1400);\n\t\treturn animateElements;\n\t}\n}\n\nlet componentConfigs = {\n\tyAxis: {\n\t\tlayerClass: 'y axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\tyLine(position, data.labels[i], this.constants.width,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.labels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tlabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\txAxis: {\n\t\tlayerClass: 'x axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\txLine(position, data.labels[i], this.constants.height,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.labels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tlabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateVertLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyMarkers: {\n\t\tlayerClass: 'y-markers',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(marker =>\n\t\t\t\tyMarker(marker.position, marker.label, this.constants.width,\n\t\t\t\t\t{pos:'right', mode: 'span', lineType: 'dashed'})\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.position);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.position);\n\t\t\tlet oldLabels = this.oldData.map(d => d.label);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tposition: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i]\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyRegions: {\n\t\tlayerClass: 'y-regions',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(region =>\n\t\t\t\tyRegion(region.start, region.end, this.constants.width,\n\t\t\t\t\tregion.label)\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.end);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newStarts = newData.map(d => d.start);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.end);\n\t\t\tlet oldLabels = this.oldData.map(d => d.label);\n\t\t\tlet oldStarts = this.oldData.map(d => d.start);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tstart: oldStarts[i],\n\t\t\t\t\tend: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i]\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((rectGroup, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateRegion(\n\t\t\t\t\trectGroup, newStarts[i], newPos[i], oldPos[i]\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\tbarGraph: {\n\t\tlayerClass: function() { return 'dataset-units dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\treturn data.yPositions.map((y, j) => {\n\t\t\t\treturn datasetBar(\n\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\ty,\n\t\t\t\t\tdata.barWidth,\n\t\t\t\t\tc.color,\n\t\t\t\t\t(c.valuesOverPoints ? (c.stacked ? data.cumulativeYs[j] : data.values[j]) : ''),\n\t\t\t\t\tj,\n\t\t\t\t\ty - (c.stacked ? data.cumulativeYPos[j] : y),\n\t\t\t\t\t{\n\t\t\t\t\t\tzeroLine: data.zeroLine,\n\t\t\t\t\t\tbarsWidth: data.barsWidth,\n\t\t\t\t\t\tminHeight: c.minHeight\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t});\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet c = this.constants;\n\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newCYPos = newData.cumulativeYPos;\n\t\t\tlet newValues = newData.values;\n\t\t\tlet newCYs = newData.cumulativeYs;\n\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldCYPos = this.oldData.cumulativeYPos;\n\t\t\tlet oldValues = this.oldData.values;\n\t\t\tlet oldCYs = this.oldData.cumulativeYs;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldCYPos, newCYPos] = equilizeNoOfElements(oldCYPos, newCYPos);\n\t\t\t[oldValues, newValues] = equilizeNoOfElements(oldValues, newValues);\n\t\t\t[oldCYs, newCYs] = equilizeNoOfElements(oldCYs, newCYs);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\tcumulativeYPos: oldCYPos,\n\n\t\t\t\tvalues: newValues,\n\t\t\t\tcumulativeYs: newCYs,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tbarsWidth: this.oldData.barsWidth,\n\t\t\t\tbarWidth: this.oldData.barWidth,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((bar, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateBar(\n\t\t\t\t\tbar, newXPos[i], newYPos[i], newData.barWidth, c.index,\n\t\t\t\t\t\t{zeroLine: newData.zeroLine}\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\tlineGraph: {\n\n\t}\n}\n\nexport function getComponent(name, constants, getData) {\n\tlet keys = Object.keys(componentConfigs).filter(k => name.includes(k));\n\tlet config = componentConfigs[keys[0]];\n\tObject.assign(config, {\n\t\tconstants: constants,\n\t\tgetData: getData\n\t})\n\treturn new ChartComponent(config);\n}\n","import { floatTwo } from './helpers';\n\nfunction normalize(x) {\n\t// Calculates mantissa and exponent of a number\n\t// Returns normalized number and exponent\n\t// https://stackoverflow.com/q/9383593/6495043\n\n\tif(x===0) {\n\t\treturn [0, 0];\n\t}\n\tif(isNaN(x)) {\n\t\treturn {mantissa: -6755399441055744, exponent: 972};\n\t}\n\tvar sig = x > 0 ? 1 : -1;\n\tif(!isFinite(x)) {\n\t\treturn {mantissa: sig * 4503599627370496, exponent: 972};\n\t}\n\n\tx = Math.abs(x);\n\tvar exp = Math.floor(Math.log10(x));\n\tvar man = x/Math.pow(10, exp);\n\n\treturn [sig * man, exp];\n}\n\nfunction getChartRangeIntervals(max, min=0) {\n\tlet upperBound = Math.ceil(max);\n\tlet lowerBound = Math.floor(min);\n\tlet range = upperBound - lowerBound;\n\n\tlet noOfParts = range;\n\tlet partSize = 1;\n\n\t// To avoid too many partitions\n\tif(range > 5) {\n\t\tif(range % 2 !== 0) {\n\t\t\tupperBound++;\n\t\t\t// Recalc range\n\t\t\trange = upperBound - lowerBound;\n\t\t}\n\t\tnoOfParts = range/2;\n\t\tpartSize = 2;\n\t}\n\n\t// Special case: 1 and 2\n\tif(range <= 2) {\n\t\tnoOfParts = 4;\n\t\tpartSize = range/noOfParts;\n\t}\n\n\t// Special case: 0\n\tif(range === 0) {\n\t\tnoOfParts = 5;\n\t\tpartSize = 1;\n\t}\n\n\tlet intervals = [];\n\tfor(var i = 0; i <= noOfParts; i++){\n\t\tintervals.push(lowerBound + partSize * i);\n\t}\n\treturn intervals;\n}\n\nfunction getChartIntervals(maxValue, minValue=0) {\n\tlet [normalMaxValue, exponent] = normalize(maxValue);\n\tlet normalMinValue = minValue ? minValue/Math.pow(10, exponent): 0;\n\n\t// Allow only 7 significant digits\n\tnormalMaxValue = normalMaxValue.toFixed(6);\n\n\tlet intervals = getChartRangeIntervals(normalMaxValue, normalMinValue);\n\tintervals = intervals.map(value => value * Math.pow(10, exponent));\n\treturn intervals;\n}\n\nexport function calcChartIntervals(values, withMinimum=false) {\n\t//*** Where the magic happens ***\n\n\t// Calculates best-fit y intervals from given values\n\t// and returns the interval array\n\n\tlet maxValue = Math.max(...values);\n\tlet minValue = Math.min(...values);\n\n\t// Exponent to be used for pretty print\n\tlet exponent = 0, intervals = []; // eslint-disable-line no-unused-vars\n\n\tfunction getPositiveFirstIntervals(maxValue, absMinValue) {\n\t\tlet intervals = getChartIntervals(maxValue);\n\n\t\tlet intervalSize = intervals[1] - intervals[0];\n\n\t\t// Then unshift the negative values\n\t\tlet value = 0;\n\t\tfor(var i = 1; value < absMinValue; i++) {\n\t\t\tvalue += intervalSize;\n\t\t\tintervals.unshift((-1) * value);\n\t\t}\n\t\treturn intervals;\n\t}\n\n\t// CASE I: Both non-negative\n\n\tif(maxValue >= 0 && minValue >= 0) {\n\t\texponent = normalize(maxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(maxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(maxValue, minValue);\n\t\t}\n\t}\n\n\t// CASE II: Only minValue negative\n\n\telse if(maxValue > 0 && minValue < 0) {\n\t\t// `withMinimum` irrelevant in this case,\n\t\t// We'll be handling both sides of zero separately\n\t\t// (both starting from zero)\n\t\t// Because ceil() and floor() behave differently\n\t\t// in those two regions\n\n\t\tlet absMinValue = Math.abs(minValue);\n\n\t\tif(maxValue >= absMinValue) {\n\t\t\texponent = normalize(maxValue)[1];\n\t\t\tintervals = getPositiveFirstIntervals(maxValue, absMinValue);\n\t\t} else {\n\t\t\t// Mirror: maxValue => absMinValue, then change sign\n\t\t\texponent = normalize(absMinValue)[1];\n\t\t\tlet posIntervals = getPositiveFirstIntervals(absMinValue, maxValue);\n\t\t\tintervals = posIntervals.map(d => d * (-1));\n\t\t}\n\n\t}\n\n\t// CASE III: Both non-positive\n\n\telse if(maxValue <= 0 && minValue <= 0) {\n\t\t// Mirrored Case I:\n\t\t// Work with positives, then reverse the sign and array\n\n\t\tlet pseudoMaxValue = Math.abs(minValue);\n\t\tlet pseudoMinValue = Math.abs(maxValue);\n\n\t\texponent = normalize(pseudoMaxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue, pseudoMinValue);\n\t\t}\n\n\t\tintervals = intervals.reverse().map(d => d * (-1));\n\t}\n\n\treturn intervals;\n}\n\nexport function getZeroIndex(yPts) {\n\tlet zeroIndex;\n\tlet interval = getIntervalSize(yPts);\n\tif(yPts.indexOf(0) >= 0) {\n\t\t// the range has a given zero\n\t\t// zero-line on the chart\n\t\tzeroIndex = yPts.indexOf(0);\n\t} else if(yPts[0] > 0) {\n\t\t// Minimum value is positive\n\t\t// zero-line is off the chart: below\n\t\tlet min = yPts[0];\n\t\tzeroIndex = (-1) * min / interval;\n\t} else {\n\t\t// Maximum value is negative\n\t\t// zero-line is off the chart: above\n\t\tlet max = yPts[yPts.length - 1];\n\t\tzeroIndex = (-1) * max / interval + (yPts.length - 1);\n\t}\n\treturn zeroIndex;\n}\n\nexport function getRealIntervals(max, noOfIntervals, min = 0, asc = 1) {\n\tlet range = max - min;\n\tlet part = range * 1.0 / noOfIntervals;\n\tlet intervals = [];\n\n\tfor(var i = 0; i <= noOfIntervals; i++) {\n\t\tintervals.push(min + part * i);\n\t}\n\n\treturn asc ? intervals : intervals.reverse();\n}\n\nexport function getIntervalSize(orderedArray) {\n\treturn orderedArray[1] - orderedArray[0];\n}\n\nexport function getValueRange(orderedArray) {\n\treturn orderedArray[orderedArray.length-1] - orderedArray[0];\n}\n\nexport function scale(val, yAxis) {\n\treturn floatTwo(yAxis.zeroLine - val * yAxis.scaleMultiplier)\n}\n\nexport function calcDistribution(values, distributionSize) {\n\t// Assume non-negative values,\n\t// implying distribution minimum at zero\n\n\tlet dataMaxValue = Math.max(...values);\n\n\tlet distributionStep = 1 / (distributionSize - 1);\n\tlet distribution = [];\n\n\tfor(var i = 0; i < distributionSize; i++) {\n\t\tlet checkpoint = dataMaxValue * (distributionStep * i);\n\t\tdistribution.push(checkpoint);\n\t}\n\n\treturn distribution;\n}\n\nexport function getMaxCheckpoint(value, distribution) {\n\treturn distribution.filter(d => d < value).length;\n}\n","// Playing around with dates\n\n// https://stackoverflow.com/a/11252167/6495043\nfunction treatAsUtc(dateStr) {\n\tlet result = new Date(dateStr);\n\tresult.setMinutes(result.getMinutes() - result.getTimezoneOffset());\n\treturn result;\n}\n\nexport function getDdMmYyyy(date) {\n\tlet dd = date.getDate();\n\tlet mm = date.getMonth() + 1; // getMonth() is zero-based\n\treturn [\n\t\t(dd>9 ? '' : '0') + dd,\n\t\t(mm>9 ? '' : '0') + mm,\n\t\tdate.getFullYear()\n\t].join('-');\n}\n\nexport function getWeeksBetween(startDateStr, endDateStr) {\n\treturn Math.ceil(getDaysBetween(startDateStr, endDateStr) / 7);\n}\n\nexport function getDaysBetween(startDateStr, endDateStr) {\n\tlet millisecondsPerDay = 24 * 60 * 60 * 1000;\n\treturn (treatAsUtc(endDateStr) - treatAsUtc(startDateStr)) / millisecondsPerDay;\n}\n\n// mutates\nexport function addDays(date, numberOfDays) {\n\tdate.setDate(date.getDate() + numberOfDays);\n}\n\n// export function getMonthName() {}\n","import '../scss/charts.scss';\n\nimport ScatterChart from './charts/ScatterChart';\nimport MultiAxisChart from './charts/MultiAxisChart';\nimport PercentageChart from './charts/PercentageChart';\nimport PieChart from './charts/PieChart';\nimport Heatmap from './charts/Heatmap';\nimport AxisChart from './charts/AxisChart';\n\n// if (ENV !== 'production') {\n// \t// Enable LiveReload\n// \tdocument.write(\n// \t\t'<script src=\"http://' + (location.host || 'localhost').split(':')[0] +\n// \t\t':35729/livereload.js?snipver=1\"></' + 'script>'\n// \t);\n// }\n\n// If type is bar\n\n\n\n\nconst chartTypes = {\n\tmixed: AxisChart,\n\tmultiaxis: MultiAxisChart,\n\tscatter: ScatterChart,\n\tpercentage: PercentageChart,\n\theatmap: Heatmap,\n\tpie: PieChart\n};\n\nfunction getChartByType(chartType = 'line', options) {\n\tdebugger;\n\tif(chartType === 'line') {\n\t\toptions.type = 'line';\n\t\treturn new AxisChart(options);\n\t} else if (chartType === 'bar') {\n\t\toptions.type = 'bar';\n\t\treturn new AxisChart(options);\n\t}\n\n\tif (!chartTypes[chartType]) {\n\t\tconsole.error(\"Undefined chart type: \" + chartType);\n\t\treturn;\n\t}\n\n\treturn new chartTypes[chartType](options);\n}\n\nexport default class Chart {\n\tconstructor(args) {\n\t\treturn getChartByType(args.type, arguments[0]);\n\t}\n}\n","import { $ } from '../utils/dom';\n\nexport default class SvgTip {\n\tconstructor({\n\t\tparent = null,\n\t\tcolors = []\n\t}) {\n\t\tthis.parent = parent;\n\t\tthis.colors = colors;\n\t\tthis.title_name = '';\n\t\tthis.title_value = '';\n\t\tthis.list_values = [];\n\t\tthis.title_value_first = 0;\n\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\n\t\tthis.top = 0;\n\t\tthis.left = 0;\n\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tthis.make_tooltip();\n\t}\n\n\trefresh() {\n\t\tthis.fill();\n\t\tthis.calc_position();\n\t\t// this.show_tip();\n\t}\n\n\tmake_tooltip() {\n\t\tthis.container = $.create('div', {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'graph-svg-tip comparison',\n\t\t\tinnerHTML: `<span class=\"title\"></span>\n\t\t\t\t<ul class=\"data-point-list\"></ul>\n\t\t\t\t<div class=\"svg-pointer\"></div>`\n\t\t});\n\t\tthis.hide_tip();\n\n\t\tthis.title = this.container.querySelector('.title');\n\t\tthis.data_point_list = this.container.querySelector('.data-point-list');\n\n\t\tthis.parent.addEventListener('mouseleave', () => {\n\t\t\tthis.hide_tip();\n\t\t});\n\t}\n\n\tfill() {\n\t\tlet title;\n\t\tif(this.title_value_first) {\n\t\t\ttitle = `<strong>${this.title_value}</strong>${this.title_name}`;\n\t\t} else {\n\t\t\ttitle = `${this.title_name}<strong>${this.title_value}</strong>`;\n\t\t}\n\t\tthis.title.innerHTML = title;\n\t\tthis.data_point_list.innerHTML = '';\n\n\t\tthis.list_values.map((set, i) => {\n\t\t\tconst color = this.colors[i] || 'black';\n\n\t\t\tlet li = $.create('li', {\n\t\t\t\tstyles: {\n\t\t\t\t\t'border-top': `3px solid ${color}`\n\t\t\t\t},\n\t\t\t\tinnerHTML: `<strong style=\"display: block;\">${ set.value === 0 || set.value ? set.value : '' }</strong>\n\t\t\t\t\t${set.title ? set.title : '' }`\n\t\t\t});\n\n\t\t\tthis.data_point_list.appendChild(li);\n\t\t});\n\t}\n\n\tcalc_position() {\n\t\tlet width = this.container.offsetWidth;\n\n\t\tthis.top = this.y - this.container.offsetHeight;\n\t\tthis.left = this.x - width/2;\n\t\tlet max_left = this.parent.offsetWidth - width;\n\n\t\tlet pointer = this.container.querySelector('.svg-pointer');\n\n\t\tif(this.left < 0) {\n\t\t\tpointer.style.left = `calc(50% - ${-1 * this.left}px)`;\n\t\t\tthis.left = 0;\n\t\t} else if(this.left > max_left) {\n\t\t\tlet delta = this.left - max_left;\n\t\t\tlet pointer_offset = `calc(50% + ${delta}px)`;\n\t\t\tpointer.style.left = pointer_offset;\n\n\t\t\tthis.left = max_left;\n\t\t} else {\n\t\t\tpointer.style.left = `50%`;\n\t\t}\n\t}\n\n\tset_values(x, y, title_name = '', title_value = '', list_values = [], title_value_first = 0) {\n\t\tthis.title_name = title_name;\n\t\tthis.title_value = title_value;\n\t\tthis.list_values = list_values;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.title_value_first = title_value_first;\n\t\tthis.refresh();\n\t}\n\n\thide_tip() {\n\t\tthis.container.style.top = '0px';\n\t\tthis.container.style.left = '0px';\n\t\tthis.container.style.opacity = '0';\n\t}\n\n\tshow_tip() {\n\t\tthis.container.style.top = this.top + 'px';\n\t\tthis.container.style.left = this.left + 'px';\n\t\tthis.container.style.opacity = '1';\n\t}\n}\n","import SvgTip from '../objects/SvgTip';\nimport { $, isElementInViewport, getElementContentWidth } from '../utils/dom';\nimport { makeSVGContainer, makeSVGDefs, makeSVGGroup } from '../utils/draw';\nimport { getStringWidth } from '../utils/helpers';\nimport { getColor, DEFAULT_COLORS } from '../utils/colors';\nimport { getDifferentChart } from '../config';\nimport { runSMILAnimation } from '../utils/animation';\n\nexport default class BaseChart {\n\tconstructor({\n\t\theight = 240,\n\n\t\ttitle = '',\n\t\tsubtitle = '',\n\t\tcolors = [],\n\n\t\tisNavigable = 0,\n\t\tshowLegend = 1,\n\n\t\ttype = '',\n\n\t\tparent,\n\t\tdata\n\t}) {\n\t\tthis.rawChartArgs = arguments[0];\n\n\t\tthis.parent = typeof parent === 'string' ? document.querySelector(parent) : parent;\n\t\tthis.title = title;\n\t\tthis.subtitle = subtitle;\n\t\tthis.argHeight = height;\n\t\tthis.type = type;\n\n\t\tthis.isNavigable = isNavigable;\n\t\tif(this.isNavigable) {\n\t\t\tthis.currentIndex = 0;\n\t\t}\n\n\t\tthis.realData = this.prepareData(data);\n\t\tthis.data = this.prepareFirstData(this.realData);\n\t\tthis.colors = [];\n\t\tthis.config = {};\n\t\tthis.state = {};\n\t\tthis.options = {};\n\n\t\tthis.configure(arguments[0]);\n\t}\n\n\tconfigure(args) {\n\t\tthis.setColors();\n\t\tthis.config = {\n\t\t\tshowTooltip: 1, // calculate\n\t\t\tshowLegend: 1,\n\t\t\tisNavigable: 0,\n\t\t\tanimate: 1\n\t\t};\n\n\t\tthis.setMargins();\n\n\t\t// Bind window events\n\t\twindow.addEventListener('resize', () => this.draw());\n\t\twindow.addEventListener('orientationchange', () => this.draw());\n\t}\n\n\tsetColors() {\n\t\tlet args = this.rawChartArgs;\n\n\t\t// Needs structure as per only labels/datasets, from config\n\t\tconst list = args.type === 'percentage' || args.type === 'pie'\n\t\t\t? args.data.labels\n\t\t\t: args.data.datasets;\n\n\t\tif(!args.colors || (list && args.colors.length < list.length)) {\n\t\t\tthis.colors = DEFAULT_COLORS;\n\t\t} else {\n\t\t\tthis.colors = args.colors;\n\t\t}\n\n\t\tthis.colors = this.colors.map(color => getColor(color));\n\t}\n\n\tsetMargins() {\n\t\t// TODO: think for all\n\t\tlet height = this.argHeight;\n\t\tthis.baseHeight = height;\n\t\tthis.height = height - 40; // change\n\t\tthis.translateY = 20;\n\n\t\t// Horizontal margins\n\t\tthis.translateXLeft = 60;\n\t\tthis.translateXRight = 40;\n\t}\n\n\tvalidate(){\n\t\tlet args = this.rawChartArgs;\n\t\t// Now yo have the args, set this stuff only after validating\n\t\tif(!this.parent) {\n\t\t\tconsole.error(\"No parent element to render on was provided.\");\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tsetup() {\n\t\tif(this.validate()) {\n\t\t\tthis._setup();\n\t\t}\n\t}\n\n\t_setup() {\n\t\tthis.makeContainer();\n\t\tthis.makeTooltip(); // without binding\n\n\t\tthis.draw(true);\n\t}\n\n\tinitComponents() {}\n\n\tsetupComponents() {\n\t\tthis.components = new Map();\n\t}\n\n\tmakeContainer() {\n\t\tthis.container = $.create('div', {\n\t\t\tclassName: 'chart-container',\n\t\t\tinnerHTML: `<h6 class=\"title\">${this.title}</h6>\n\t\t\t\t<h6 class=\"sub-title uppercase\">${this.subtitle}</h6>\n\t\t\t\t<div class=\"frappe-chart graphics\"></div>\n\t\t\t\t<div class=\"graph-stats-container\"></div>`\n\t\t});\n\n\t\t// Chart needs a dedicated parent element\n\t\tthis.parent.innerHTML = '';\n\t\tthis.parent.appendChild(this.container);\n\n\t\tthis.chartWrapper = this.container.querySelector('.frappe-chart');\n\t\tthis.statsWrapper = this.container.querySelector('.graph-stats-container');\n\t}\n\n\tmakeTooltip() {\n\t\tthis.tip = new SvgTip({\n\t\t\tparent: this.chartWrapper,\n\t\t\tcolors: this.colors\n\t\t});\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {}\n\n\tdraw(init=false) {\n\t\tthis.calcWidth();\n\t\tthis.makeChartArea();\n\n\t\tthis.calc();\n\t\tthis.initComponents(); // Only depend on the drawArea made in makeChartArea\n\n\t\tthis.setupComponents();\n\n\t\tthis.components.forEach(c => c.setup(this.drawArea)); // or c.build()\n\t\tthis.components.forEach(c => c.make()); // or c.build()\n\t\tthis.renderLegend();\n\n\t\tthis.setupNavigation(init);\n\n\t\t// TODO: remove timeout and decrease post animate time in chart component\n\t\tif(init) {\n\t\t\tthis.data = this.realData;\n\t\t\tsetTimeout(() => {this.update();}, 1000);\n\t\t}\n\t}\n\n\tcalcWidth() {\n\t\tlet outerAnnotationsWidth = 0;\n\t\t// let charWidth = 8;\n\t\t// this.specificValues.map(val => {\n\t\t// \tlet strWidth = getStringWidth((val.title + \"\"), charWidth);\n\t\t// \tif(strWidth > outerAnnotationsWidth) {\n\t\t// \t\touterAnnotationsWidth = strWidth - 40;\n\t\t// \t}\n\t\t// });\n\t\tthis.baseWidth = getElementContentWidth(this.parent) - outerAnnotationsWidth;\n\t\tthis.width = this.baseWidth - (this.translateXLeft + this.translateXRight);\n\t}\n\n\tupdate(data=this.data) {\n\t\tthis.data = this.prepareData(data);\n\t\tthis.calc(); // builds state\n\t\tthis.render();\n\t}\n\n\tprepareData() {}\n\n\tcalc() {} // builds state\n\n\trender(components=this.components, animate=true) {\n\t\t// Can decouple to this.refreshComponents() first to save animation timeout\n\t\tlet elementsToAnimate = [];\n\t\tcomponents.forEach(c => {\n\t\t\telementsToAnimate = elementsToAnimate.concat(c.update(animate));\n\t\t});\n\t\tif(elementsToAnimate.length > 0) {\n\t\t\trunSMILAnimation(this.chartWrapper, this.svg, elementsToAnimate);\n\t\t}\n\n\t\t// TODO: rebind new units\n\t\t// if(this.isNavigable) {\n\t\t// \tthis.bind_units(units_array);\n\t\t// }\n\t}\n\n\tmakeChartArea() {\n\t\tif(this.svg) {\n\t\t\tthis.chartWrapper.removeChild(this.svg);\n\t\t}\n\t\tthis.svg = makeSVGContainer(\n\t\t\tthis.chartWrapper,\n\t\t\t'chart',\n\t\t\tthis.baseWidth,\n\t\t\tthis.baseHeight\n\t\t);\n\t\tthis.svgDefs = makeSVGDefs(this.svg);\n\n\t\t// I WISH !!!\n\t\t// this.svg = makeSVGGroup(\n\t\t// \tsvgContainer,\n\t\t// \t'flipped-coord-system',\n\t\t// \t`translate(0, ${this.baseHeight}) scale(1, -1)`\n\t\t// );\n\n\t\tthis.drawArea = makeSVGGroup(\n\t\t\tthis.svg,\n\t\t\tthis.type + '-chart',\n\t\t\t`translate(${this.translateXLeft}, ${this.translateY})`\n\t\t);\n\t}\n\n\trenderLegend() {}\n\n\tsetupNavigation(init=false) {\n\t\tif(this.isNavigable) return;\n\n\t\tthis.makeOverlay();\n\n\t\tif(init) {\n\t\t\tthis.bindOverlay();\n\n\t\t\tdocument.addEventListener('keydown', (e) => {\n\t\t\t\tif(isElementInViewport(this.chartWrapper)) {\n\t\t\t\t\te = e || window.event;\n\n\t\t\t\t\tif (e.keyCode == '37') {\n\t\t\t\t\t\tthis.onLeftArrow();\n\t\t\t\t\t} else if (e.keyCode == '39') {\n\t\t\t\t\t\tthis.onRightArrow();\n\t\t\t\t\t} else if (e.keyCode == '38') {\n\t\t\t\t\t\tthis.onUpArrow();\n\t\t\t\t\t} else if (e.keyCode == '40') {\n\t\t\t\t\t\tthis.onDownArrow();\n\t\t\t\t\t} else if (e.keyCode == '13') {\n\t\t\t\t\t\tthis.onEnterKey();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tmakeOverlay() {}\n\tbindOverlay() {}\n\tbind_units() {}\n\n\tonLeftArrow() {}\n\tonRightArrow() {}\n\tonUpArrow() {}\n\tonDownArrow() {}\n\tonEnterKey() {}\n\n\t// ????????????\n\t// Update the data here, then do relevant updates\n\t// and drawing in child classes by overriding\n\t// The Child chart will only know what a particular update means\n\t// and what components are affected,\n\t// BaseChart shouldn't be doing the animating\n\n\tgetDataPoint(index = 0) {}\n\tsetCurrentDataPoint(point) {}\n\n\tupdateDataset(dataset, index) {}\n\taddDataset(dataset, index) {}\n\tremoveDataset(index = 0) {}\n\n\tupdateDatasets(datasets) {}\n\n\tupdateDataPoint(dataPoint, index = 0) {}\n\taddDataPoint(dataPoint, index = 0) {}\n\tremoveDataPoint(index = 0) {}\n\n\tgetDifferentChart(type) {\n\t\treturn getDifferentChart(type, this.type, this.rawChartArgs);\n\t}\n}\n","export const Y_AXIS_MARGIN = 60;\n\nexport const MIN_BAR_PERCENT_HEIGHT = 0.01;\nexport const DEFAULT_AXIS_CHART_TYPE = 'line';\nexport const AXIS_DATASET_CHART_TYPES = ['line', 'bar'];\nexport const BAR_CHART_SPACE_RATIO = 0.5;","import BaseChart from './BaseChart';\nimport { dataPrep, zeroDataPrep } from './axis-chart-utils';\nimport { Y_AXIS_MARGIN } from '../utils/constants';\nimport { getComponent } from '../objects/ChartComponents';\nimport { AxisChartRenderer } from '../utils/draw';\nimport { getOffset, fire } from '../utils/dom';\nimport { equilizeNoOfElements } from '../utils/draw-utils';\nimport { Animator, translateHoriLine } from '../utils/animate';\nimport { runSMILAnimation } from '../utils/animation';\nimport { getRealIntervals, calcChartIntervals, getIntervalSize, getValueRange, getZeroIndex, scale } from '../utils/intervals';\nimport { floatTwo, fillArray, bindChange } from '../utils/helpers';\nimport { MIN_BAR_PERCENT_HEIGHT, DEFAULT_AXIS_CHART_TYPE, BAR_CHART_SPACE_RATIO } from '../utils/constants';\n\nexport default class AxisChart extends BaseChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\tthis.isSeries = args.isSeries;\n\t\tthis.valuesOverPoints = args.valuesOverPoints;\n\t\tthis.formatTooltipY = args.formatTooltipY;\n\t\tthis.formatTooltipX = args.formatTooltipX;\n\t\tthis.barOptions = args.barOptions || {};\n\t\tthis.lineOptions = args.lineOptions || {};\n\t\tthis.type = args.type || 'line';\n\n\t\tthis.xAxisMode = args.xAxisMode || 'span';\n\t\tthis.yAxisMode = args.yAxisMode || 'span';\n\n\t\tthis.zeroLine = this.height;\n\t\t// this.setTrivialState();\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {3\n\t\tsuper.configure();\n\n\t\t// TODO: set in options and use\n\n\t\tthis.config.xAxisMode = args.xAxisMode;\n\t\tthis.config.yAxisMode = args.yAxisMode;\n\t}\n\n\tsetMargins() {\n\t\tsuper.setMargins();\n\t\tthis.translateXLeft = Y_AXIS_MARGIN;\n\t\tthis.translateXRight = Y_AXIS_MARGIN;\n\t}\n\n\tprepareData(data=this.data) {\n\t\treturn dataPrep(data, this.type);\n\t}\n\n\tprepareFirstData(data=this.data) {\n\t\treturn zeroDataPrep(data);\n\t}\n\n\tcalc() {\n\t\tthis.calcXPositions();\n\t\tthis.calcYAxisParameters(this.getAllYValues(), this.type === 'line');\n\t}\n\n\tcalcXPositions(s=this.state) {\n\t\tlet labels = this.data.labels;\n\t\ts.datasetLength = labels.length;\n\n\t\ts.unitWidth = this.width/(s.datasetLength);\n\t\t// Default, as per bar, and mixed. Only line will be a special case\n\t\ts.xOffset = s.unitWidth/2;\n\n\t\ts.xAxis = {\n\t\t\tlabels: labels,\n\t\t\tpositions: labels.map((d, i) =>\n\t\t\t\tfloatTwo(s.xOffset + i * s.unitWidth)\n\t\t\t)\n\t\t};\n\t}\n\n\tcalcYAxisParameters(dataValues, withMinimum = 'false') {\n\t\tconst yPts = calcChartIntervals(dataValues, withMinimum);\n\t\tconst scaleMultiplier = this.height / getValueRange(yPts);\n\t\tconst intervalHeight = getIntervalSize(yPts) * scaleMultiplier;\n\t\tconst zeroLine = this.height - (getZeroIndex(yPts) * intervalHeight);\n\n\t\tthis.state.yAxis = {\n\t\t\tlabels: yPts,\n\t\t\tpositions: yPts.map(d => zeroLine - d * scaleMultiplier),\n\t\t\tscaleMultiplier: scaleMultiplier,\n\t\t\tzeroLine: zeroLine,\n\t\t}\n\n\t\tthis.calcYUnits();\n\t\tthis.calcYExtremes();\n\t\tthis.calcYRegions();\n\t}\n\n\tcalcYUnits() {\n\t\tlet s = this.state;\n\t\tlet scaleAll = values => values.map(val => scale(val, s.yAxis));\n\n\t\ts.datasets = this.data.datasets.map((d, i) => {\n\t\t\tlet values = d.values;\n\t\t\tlet cumulativeYs = d.cumulativeYs || [];\n\t\t\treturn {\n\t\t\t\tname: d.name,\n\t\t\t\tindex: i,\n\t\t\t\tchartType: d.chartType,\n\n\t\t\t\tvalues: values,\n\t\t\t\tyPositions: scaleAll(values),\n\n\t\t\t\tcumulativeYs: cumulativeYs,\n\t\t\t\tcumulativeYPos: scaleAll(cumulativeYs),\n\t\t\t};\n\t\t});\n\t}\n\n\tcalcYExtremes() {\n\t\tlet s = this.state;\n\t\tif(this.barOptions && this.barOptions.stacked) {\n\t\t\ts.yExtremes = s.datasets[s.datasets.length - 1].cumulativeYPos;\n\t\t\treturn;\n\t\t}\n\t\ts.yExtremes = new Array(s.datasetLength).fill(9999);\n\t\ts.datasets.map((d, i) => {\n\t\t\td.yPositions.map((pos, j) => {\n\t\t\t\tif(pos < s.yExtremes[j]) {\n\t\t\t\t\ts.yExtremes[j] = pos;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tcalcYRegions() {\n\t\tlet s = this.state;\n\t\tif(this.data.yMarkers) {\n\t\t\tthis.state.yMarkers = this.data.yMarkers.map(d => {\n\t\t\t\td.position = scale(d.value, s.yAxis);\n\t\t\t\td.label += ': ' + d.value;\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t\tif(this.data.yRegions) {\n\t\t\tthis.state.yRegions = this.data.yRegions.map(d => {\n\t\t\t\td.start = scale(d.start, s.yAxis);\n\t\t\t\td.end = scale(d.end, s.yAxis);\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t}\n\n\tgetAllYValues() {\n\t\t// TODO: yMarkers, regions, sums, every Y value ever\n\t\tlet key = 'values';\n\n\t\tif(this.barOptions && this.barOptions.stacked) {\n\t\t\tkey = 'cumulativeYs';\n\t\t\tlet cumulative = new Array(this.state.datasetLength).fill(0);\n\t\t\tthis.data.datasets.map((d, i) => {\n\t\t\t\tlet values = this.data.datasets[i].values;\n\t\t\t\td[key] = cumulative = cumulative.map((c, i) => c + values[i]);\n\t\t\t});\n\t\t}\n\n\t\treturn [].concat(...this.data.datasets.map(d => d[key]));\n\t}\n\n\tinitComponents() {\n\t\tlet s = this.state;\n\t\t// console.log('this.state', Object.assign({}, this.state));\n\t\t// console.log('this.state', this.state);\n\t\tthis.componentConfigs = [\n\t\t\t[\n\t\t\t\t'yAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.yAxisMode,\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t}\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'xAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.xAxisMode,\n\t\t\t\t\theight: this.height,\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t}\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'yRegions',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t}\n\t\t\t],\n\t\t];\n\n\t\tthis.componentConfigs.map(args => {\n\t\t\targs.push(\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state[args[0]];\n\t\t\t\t}.bind(this)\n\t\t\t);\n\t\t});\n\n\t\tlet barDatasets = this.state.datasets.filter(d => d.chartType === 'bar');\n\t\tlet lineDatasets = this.state.datasets.filter(d => d.chartType === 'line');\n\n\t\t// console.log('barDatasets', barDatasets, this.state.datasets);\n\n\t\t// Bars\n\n\t\tlet barsConfigs = barDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'barGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.valuesOverPoints,\n\t\t\t\t\tminHeight: this.height * MIN_BAR_PERCENT_HEIGHT,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\n\t\t\t\t\tlet spaceRatio = this.barOptions.spaceRatio || BAR_CHART_SPACE_RATIO;\n\t\t\t\t\tlet barsWidth = s.unitWidth * (1 - spaceRatio);\n\t\t\t\t\tlet barWidth = barsWidth/(this.barOptions.stacked ? 1 : barDatasets.length);\n\n\t\t\t\t\tlet xPositions = s.xAxis.positions.map(x => x - barsWidth/2 + barWidth * index);\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: xPositions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\t\t\t\t\t\tcumulativeYPos: d.cumulativeYPos,\n\n\t\t\t\t\t\tvalues: d.values,\n\t\t\t\t\t\tcumulativeYs: d.cumulativeYs,\n\n\t\t\t\t\t\tzeroLine: s.yAxis.zeroLine,\n\t\t\t\t\t\tbarsWidth: barsWidth,\n\t\t\t\t\t\tbarWidth: barWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet markerConfigs = [\n\t\t\t[\n\t\t\t\t'yMarkers',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t}\n\t\t\t]\n\t\t];\n\n\t\tmarkerConfigs.map(args => {\n\t\t\targs.push(\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state[args[0]];\n\t\t\t\t}.bind(this)\n\t\t\t);\n\t\t});\n\n\t\tthis.componentConfigs = this.componentConfigs.concat(barsConfigs, markerConfigs);\n\t}\n\n\tsetupComponents() {\n\t\tlet optionals = ['yMarkers', 'yRegions'];\n\t\tthis.components = new Map(this.componentConfigs\n\t\t\t.filter(args => !optionals.includes(args[0]) || this.state[args[0]] || args[0] === 'barGraph')\n\t\t\t.map(args => {\n\t\t\t\treturn [args[0], getComponent(...args)];\n\t\t\t}));\n\t}\n\n\tgetChartComponents() {\n\t\tlet dataUnitsComponents = []\n\t\t// this.state is not defined at this stage\n\t\tthis.data.datasets.forEach((d, index) => {\n\t\t\tif(d.chartType === 'line') {\n\t\t\t\tdataUnitsComponents.push(this.getPathComponent(d, index));\n\t\t\t}\n\n\t\t\tlet renderer = this.unitRenderers[d.chartType];\n\t\t\tdataUnitsComponents.push(this.getDataUnitComponent(\n\t\t\t\tindex, renderer\n\t\t\t));\n\t\t});\n\t\treturn dataUnitsComponents;\n\t}\n\n\tgetDataUnitComponent(index, unitRenderer) {\n\t\treturn new ChartComponent({\n\t\t\tlayerClass: 'dataset-units dataset-' + index,\n\t\t\tmakeElements: () => {\n\t\t\t\t// yPositions, xPostions, color, valuesOverPoints,\n\t\t\t\tlet d = this.data.datasets[index];\n\n\t\t\t\treturn d.positions.map((y, j) => {\n\t\t\t\t\treturn unitRenderer.draw(\n\t\t\t\t\t\tthis.state.xAxis.positions[j],\n\t\t\t\t\t\ty,\n\t\t\t\t\t\tthis.colors[index],\n\t\t\t\t\t\t(this.valuesOverPoints ? (this.barOptions &&\n\t\t\t\t\t\t\tthis.barOptions.stacked ? d.cumulativeYs[j] : d.values[j]) : ''),\n\t\t\t\t\t\tj,\n\t\t\t\t\t\ty - (d.cumulativePositions ? d.cumulativePositions[j] : y)\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t},\n\t\t\tpostMake: function() {\n\t\t\t\tlet translate_layer = () => {\n\t\t\t\t\tthis.layer.setAttribute('transform', `translate(${unitRenderer.consts.width * index}, 0)`);\n\t\t\t\t}\n\n\t\t\t\t// let d = this.data.datasets[index];\n\n\t\t\t\tif(this.meta.type === 'bar' && (!this.meta.barOptions\n\t\t\t\t\t|| !this.meta.barOptions.stacked)) {\n\n\t\t\t\t\ttranslate_layer();\n\t\t\t\t}\n\t\t\t},\n\t\t\tanimate: (svgUnits) => {\n\t\t\t\t// have been updated in axis render;\n\t\t\t\tlet newX = this.state.xAxis.positions;\n\t\t\t\tlet newY = this.data.datasets[index].positions;\n\n\t\t\t\tlet lastUnit = svgUnits[svgUnits.length - 1];\n\t\t\t\tlet parentNode = lastUnit.parentNode;\n\n\t\t\t\tif(this.oldState.xExtra > 0) {\n\t\t\t\t\tfor(var i = 0; i<this.oldState.xExtra; i++) {\n\t\t\t\t\t\tlet unit = lastUnit.cloneNode(true);\n\t\t\t\t\t\tparentNode.appendChild(unit);\n\t\t\t\t\t\tsvgUnits.push(unit);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsvgUnits.map((unit, i) => {\n\t\t\t\t\tif(newX[i] === undefined || newY[i] === undefined) return;\n\t\t\t\t\tthis.elementsToAnimate.push(unitRenderer.animate(\n\t\t\t\t\t\tunit, // unit, with info to replace where it came from in the data\n\t\t\t\t\t\tnewX[i],\n\t\t\t\t\t\tnewY[i],\n\t\t\t\t\t\tindex,\n\t\t\t\t\t\tthis.data.datasets.length\n\t\t\t\t\t));\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tgetPathComponent(d, index) {\n\t\treturn new ChartComponent({\n\t\t\tlayerClass: 'path dataset-path',\n\t\t\tsetData: () => {},\n\t\t\tmakeElements: () => {\n\t\t\t\tlet d = this.data.datasets[index];\n\t\t\t\tlet color = this.colors[index];\n\n\t\t\t\treturn getPaths(\n\t\t\t\t\td.positions,\n\t\t\t\t\tthis.state.xAxis.positions,\n\t\t\t\t\tcolor,\n\t\t\t\t\tthis.config.heatline,\n\t\t\t\t\tthis.config.regionFill\n\t\t\t\t);\n\t\t\t},\n\t\t\tanimate: (paths) => {\n\t\t\t\tlet newX = this.state.xAxis.positions;\n\t\t\t\tlet newY = this.data.datasets[index].positions;\n\n\t\t\t\tlet oldX = this.oldState.xAxis.positions;\n\t\t\t\tlet oldY = this.oldState.datasets[index].positions;\n\n\n\t\t\t\tlet parentNode = paths[0].parentNode;\n\n\t\t\t\t[oldX, newX] = equilizeNoOfElements(oldX, newX);\n\t\t\t\t[oldY, newY] = equilizeNoOfElements(oldY, newY);\n\n\t\t\t\tif(this.oldState.xExtra > 0) {\n\t\t\t\t\tpaths = getPaths(\n\t\t\t\t\t\toldY, oldX, this.colors[index],\n\t\t\t\t\t\tthis.config.heatline,\n\t\t\t\t\t\tthis.config.regionFill\n\t\t\t\t\t);\n\t\t\t\t\tparentNode.textContent = '';\n\t\t\t\t\tpaths.map(path => parentNode.appendChild(path));\n\t\t\t\t}\n\n\t\t\t\tconst newPointsList = newY.map((y, i) => (newX[i] + ',' + y));\n\t\t\t\tthis.elementsToAnimate = this.elementsToAnimate\n\t\t\t\t\t.concat(this.renderer.animatepath(paths, newPointsList.join(\"L\")));\n\t\t\t}\n\t\t});\n\t}\n\n\tbindTooltip() {\n\t\t// TODO: could be in tooltip itself, as it is a given functionality for its parent\n\t\tthis.chartWrapper.addEventListener('mousemove', (e) => {\n\t\t\tlet o = getOffset(this.chartWrapper);\n\t\t\tlet relX = e.pageX - o.left - this.translateXLeft;\n\t\t\tlet relY = e.pageY - o.top - this.translateY;\n\n\t\t\tif(relY < this.height + this.translateY * 2) {\n\t\t\t\tthis.mapTooltipXPosition(relX);\n\t\t\t} else {\n\t\t\t\tthis.tip.hide_tip();\n\t\t\t}\n\t\t});\n\t}\n\n\tmapTooltipXPosition(relX) {\n\t\tlet s = this.state;\n\t\tif(!s.yExtremes) return;\n\n\t\tlet titles = s.xAxis.labels;\n\t\tif(this.formatTooltipX && this.formatTooltipX(titles[0])) {\n\t\t\ttitles = titles.map(d=>this.formatTooltipX(d));\n\t\t}\n\n\t\tlet formatY = this.formatTooltipY && this.formatTooltipY(this.y[0].values[0]);\n\n\t\tfor(var i=s.datasetLength - 1; i >= 0 ; i--) {\n\t\t\tlet xVal = s.xAxis.positions[i];\n\t\t\t// let delta = i === 0 ? s.unitWidth : xVal - s.xAxis.positions[i-1];\n\t\t\tif(relX > xVal - s.unitWidth/2) {\n\t\t\t\tlet x = xVal + this.translateXLeft;\n\t\t\t\tlet y = s.yExtremes[i] + this.translateY;\n\n\t\t\t\tlet values = this.data.datasets.map((set, j) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttitle: set.title,\n\t\t\t\t\t\tvalue: formatY ? this.formatTooltipY(set.values[i]) : set.values[i],\n\t\t\t\t\t\tcolor: this.colors[j],\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\tthis.tip.set_values(x, y, titles[i], '', values);\n\t\t\t\tthis.tip.show_tip();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetDataPoint(index=this.current_index) {\n\t\t// check for length\n\t\tlet data_point = {\n\t\t\tindex: index\n\t\t};\n\t\tlet y = this.y[0];\n\t\t['svg_units', 'yUnitPositions', 'values'].map(key => {\n\t\t\tlet data_key = key.slice(0, key.length-1);\n\t\t\tdata_point[data_key] = y[key][index];\n\t\t});\n\t\tdata_point.label = this.xAxis.labels[index];\n\t\treturn data_point;\n\t}\n\n\tsetCurrentDataPoint(index) {\n\t\tindex = parseInt(index);\n\t\tif(index < 0) index = 0;\n\t\tif(index >= this.xAxis.labels.length) index = this.xAxis.labels.length - 1;\n\t\tif(index === this.current_index) return;\n\t\tthis.current_index = index;\n\t\t$.fire(this.parent, \"data-select\", this.getDataPoint());\n\t}\n\n\t// API\n\n\taddDataPoint(label, datasetValues, index=this.state.datasetLength) {\n\t\tsuper.addDataPoint(label, datasetValues, index);\n\t\t// console.log(label, datasetValues, this.data.labels);\n\t\tthis.data.labels.splice(index, 0, label);\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\td.values.splice(index, 0, datasetValues[i]);\n\t\t});\n\t\t// console.log(this.data);\n\t\tthis.update(this.data);\n\t}\n\n\tremoveDataPoint(index = this.state.datasetLength-1) {\n\t\tsuper.removeDataPoint(index);\n\t\tthis.data.labels.splice(index, 1);\n\t\tthis.data.datasets.map(d => {\n\t\t\td.values.splice(index, 1);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\t// updateData() {\n\t// \t// animate if same no. of datasets,\n\t// \t// else return new chart\n\n\t// \t//\n\t// }\n}\n\n\n// keep a binding at the end of chart\n\n","import LineChart from './LineChart';\n\nexport default class ScatterChart extends LineChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\n\t\tthis.type = 'scatter';\n\n\t\tif(!args.dotRadius) {\n\t\t\tthis.dotRadius = 8;\n\t\t} else {\n\t\t\tthis.dotRadius = args.dotRadius;\n\t\t}\n\n\t\tthis.setup();\n\t}\n\n\tsetup_values() {\n\t\tsuper.setup_values();\n\t\tthis.unit_args = {\n\t\t\ttype: 'dot',\n\t\t\targs: { radius: this.dotRadius }\n\t\t};\n\t}\n\n\tmake_paths() {}\n\tmake_path() {}\n}\n","import AxisChart from './AxisChart';\n// import { ChartComponent } from '../objects/ChartComponents';\nimport { makeSVGGroup, makePath, makeGradient } from '../utils/draw';\nimport { equilizeNoOfElements } from '../utils/draw-utils';\n\nexport default class LineChart extends AxisChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\tthis.type = 'line';\n\n\t\tif(Object.getPrototypeOf(this) !== LineChart.prototype) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.config.xAxisMode = args.xAxisMode || 'span';\n\t\tthis.config.yAxisMode = args.yAxisMode || 'span';\n\n\t\tthis.config.dotRadius = args.dotRadius || 4;\n\n\t\tthis.config.heatline = args.heatline || 0;\n\t\tthis.config.regionFill = args.regionFill || 0;\n\t\tthis.config.showDots = args.showDots || 1;\n\t}\n\n\tconfigUnits() {\n\t\tthis.unitArgs = {\n\t\t\ttype: 'dot',\n\t\t\targs: { radius: this.config.dotRadius }\n\t\t};\n\t}\n\n\t// temp commented\n\tsetUnitWidthAndXOffset() {\n\t\tthis.state.unitWidth = this.width/(this.state.datasetLength - 1);\n\t\tthis.state.xOffset = 0;\n\t}\n\n}\n","import AxisChart from './AxisChart';\nimport { Y_AXIS_MARGIN } from '../utils/constants';\n// import { ChartComponent } from '../objects/ChartComponents';\nimport { floatTwo } from '../utils/helpers';\n\nexport default class MultiAxisChart extends AxisChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\t// this.unitType = args.unitType || 'line';\n\t\t// this.setup();\n\t}\n\n\tpreSetup() {\n\t\tthis.type = 'multiaxis';\n\t}\n\n\tsetMargins() {\n\t\tsuper.setMargins();\n\t\tlet noOfLeftAxes = this.data.datasets.filter(d => d.axisPosition === 'left').length;\n\t\tthis.translateXLeft = (noOfLeftAxes) * Y_AXIS_MARGIN || Y_AXIS_MARGIN;\n\t\tthis.translateXRight = (this.data.datasets.length - noOfLeftAxes) * Y_AXIS_MARGIN || Y_AXIS_MARGIN;\n\t}\n\n\tprepareYAxis() { }\n\n\tprepareData(data) {\n\t\tsuper.prepareData(data);\n\t\tlet sets = this.state.datasets;\n\t\t// let axesLeft = sets.filter(d => d.axisPosition === 'left');\n\t\t// let axesRight = sets.filter(d => d.axisPosition === 'right');\n\t\t// let axesNone = sets.filter(d => !d.axisPosition ||\n\t\t// \t!['left', 'right'].includes(d.axisPosition));\n\n\t\tlet leftCount = 0, rightCount = 0;\n\n\t\tsets.forEach((d, i) => {\n\t\t\td.yAxis = {\n\t\t\t\tposition: d.axisPosition,\n\t\t\t\tindex: d.axisPosition === 'left' ? leftCount++ : rightCount++\n\t\t\t};\n\t\t});\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.config.xAxisMode = args.xAxisMode || 'tick';\n\t\tthis.config.yAxisMode = args.yAxisMode || 'span';\n\t}\n\n\t// setUnitWidthAndXOffset() {\n\t// \tthis.state.unitWidth = this.width/(this.state.datasetLength);\n\t// \tthis.state.xOffset = this.state.unitWidth/2;\n\t// }\n\n\tconfigUnits() {\n\t\tthis.unitArgs = {\n\t\t\ttype: 'bar',\n\t\t\targs: {\n\t\t\t\tspaceWidth: this.state.unitWidth/2,\n\t\t\t}\n\t\t};\n\t}\n\n\tsetYAxis() {\n\t\tthis.state.datasets.map(d => {\n\t\t\tthis.calcYAxisParameters(d.yAxis, d.values, this.unitType === 'line');\n\t\t});\n\t}\n\n\tcalcYUnits() {\n\t\tthis.state.datasets.map(d => {\n\t\t\td.positions = d.values.map(val => floatTwo(d.yAxis.zeroLine - val * d.yAxis.scaleMultiplier));\n\t\t});\n\t}\n\n\t// TODO: function doesn't exist, handle with components\n\trenderConstants() {\n\t\tthis.state.datasets.map(d => {\n\t\t\tlet guidePos = d.yAxis.position === 'left'\n\t\t\t\t? -1 * d.yAxis.index * Y_AXIS_MARGIN\n\t\t\t\t: this.width + d.yAxis.index * Y_AXIS_MARGIN;\n\t\t\tthis.renderer.xLine(guidePos, '', {\n\t\t\t\tpos:'top',\n\t\t\t\tmode: 'span',\n\t\t\t\tstroke: this.colors[i],\n\t\t\t\tclassName: 'y-axis-guide'\n\t\t\t})\n\t\t});\n\t}\n\n\tgetYAxesComponents() {\n\t\treturn this.data.datasets.map((e, i) => {\n\t\t\treturn new ChartComponent({\n\t\t\t\tlayerClass: 'y axis y-axis-' + i,\n\t\t\t\tmake: () => {\n\t\t\t\t\tlet yAxis = this.state.datasets[i].yAxis;\n\t\t\t\t\tthis.renderer.setZeroline(yAxis.zeroline);\n\t\t\t\t\tlet options = {\n\t\t\t\t\t\tpos: yAxis.position,\n\t\t\t\t\t\tmode: 'tick',\n\t\t\t\t\t\toffset: yAxis.index * Y_AXIS_MARGIN,\n\t\t\t\t\t\tstroke: this.colors[i]\n\t\t\t\t\t};\n\n\t\t\t\t\treturn yAxis.positions.map((position, j) =>\n\t\t\t\t\t\tthis.renderer.yLine(position, yAxis.labels[j], options)\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tanimate: () => {}\n\t\t\t});\n\t\t});\n\t}\n\n\t// TODO remove renderer zeroline from above and below\n\tgetChartComponents() {\n\t\treturn this.data.datasets.map((d, index) => {\n\t\t\treturn new ChartComponent({\n\t\t\t\tlayerClass: 'dataset-units dataset-' + index,\n\t\t\t\tmake: () => {\n\t\t\t\t\tlet d = this.state.datasets[index];\n\t\t\t\t\tlet unitType = this.unitArgs;\n\n\t\t\t\t\t// the only difference, should be tied to datasets or default\n\t\t\t\t\tthis.renderer.setZeroline(d.yAxis.zeroLine);\n\n\t\t\t\t\treturn d.positions.map((y, j) => {\n\t\t\t\t\t\treturn this.renderer[unitType.type](\n\t\t\t\t\t\t\tthis.state.xAxisPositions[j],\n\t\t\t\t\t\t\ty,\n\t\t\t\t\t\t\tunitType.args,\n\t\t\t\t\t\t\tthis.colors[index],\n\t\t\t\t\t\t\tj,\n\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\tthis.state.datasetLength\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tanimate: (svgUnits) => {\n\t\t\t\t\tlet d = this.state.datasets[index];\n\t\t\t\t\tlet unitType = this.unitArgs.type;\n\n\t\t\t\t\t// have been updated in axis render;\n\t\t\t\t\tlet newX = this.state.xAxisPositions;\n\t\t\t\t\tlet newY = this.state.datasets[index].positions;\n\n\t\t\t\t\tlet lastUnit = svgUnits[svgUnits.length - 1];\n\t\t\t\t\tlet parentNode = lastUnit.parentNode;\n\n\t\t\t\t\tif(this.oldState.xExtra > 0) {\n\t\t\t\t\t\tfor(var i = 0; i<this.oldState.xExtra; i++) {\n\t\t\t\t\t\t\tlet unit = lastUnit.cloneNode(true);\n\t\t\t\t\t\t\tparentNode.appendChild(unit);\n\t\t\t\t\t\t\tsvgUnits.push(unit);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.renderer.setZeroline(d.yAxis.zeroLine);\n\n\t\t\t\t\tsvgUnits.map((unit, i) => {\n\t\t\t\t\t\tif(newX[i] === undefined || newY[i] === undefined) return;\n\t\t\t\t\t\tthis.elementsToAnimate.push(this.renderer['animate' + unitType](\n\t\t\t\t\t\t\tunit, // unit, with info to replace where it came from in the data\n\t\t\t\t\t\t\tnewX[i],\n\t\t\t\t\t\t\tnewY[i],\n\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\tthis.state.noOfDatasets\n\t\t\t\t\t\t));\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { $, getOffset } from '../utils/dom';\n\nexport default class PercentageChart extends BaseChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\tthis.type = 'percentage';\n\n\t\tthis.max_slices = 10;\n\t\tthis.max_legend_points = 6;\n\n\t\tthis.setup();\n\t}\n\n\tmakeChartArea() {\n\t\tthis.chartWrapper.className += ' ' + 'graph-focus-margin';\n\t\tthis.chartWrapper.style.marginTop = '45px';\n\n\t\tthis.statsWrapper.className += ' ' + 'graph-focus-margin';\n\t\tthis.statsWrapper.style.marginBottom = '30px';\n\t\tthis.statsWrapper.style.paddingTop = '0px';\n\n\t\tthis.chartDiv = $.create('div', {\n\t\t\tclassName: 'div',\n\t\t\tinside: this.chartWrapper\n\t\t});\n\n\t\tthis.chart = $.create('div', {\n\t\t\tclassName: 'progress-chart',\n\t\t\tinside: this.chartDiv\n\t\t});\n\t}\n\n\tsetupLayers() {\n\t\tthis.percentageBar = $.create('div', {\n\t\t\tclassName: 'progress',\n\t\t\tinside: this.chart\n\t\t});\n\t}\n\n\tsetup_values() {\n\t\tthis.slice_totals = [];\n\t\tlet all_totals = this.data.labels.map((d, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, d];\n\t\t}).filter(d => { return d[0] > 0; }); // keep only positive results\n\n\t\tlet totals = all_totals;\n\n\t\tif(all_totals.length > this.max_slices) {\n\t\t\tall_totals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = all_totals.slice(0, this.max_slices-1);\n\t\t\tlet others = all_totals.slice(this.max_slices-1);\n\n\t\t\tlet sum_of_others = 0;\n\t\t\tothers.map(d => {sum_of_others += d[0];});\n\n\t\t\ttotals.push([sum_of_others, 'Rest']);\n\n\t\t\tthis.colors[this.max_slices-1] = 'grey';\n\t\t}\n\n\t\tthis.labels = [];\n\t\ttotals.map(d => {\n\t\t\tthis.slice_totals.push(d[0]);\n\t\t\tthis.labels.push(d[1]);\n\t\t});\n\n\t\tthis.legend_totals = this.slice_totals.slice(0, this.max_legend_points);\n\t}\n\n\trenderComponents() {\n\t\tthis.grand_total = this.slice_totals.reduce((a, b) => a + b, 0);\n\t\tthis.slices = [];\n\t\tthis.slice_totals.map((total, i) => {\n\t\t\tlet slice = $.create('div', {\n\t\t\t\tclassName: `progress-bar`,\n\t\t\t\tinside: this.percentageBar,\n\t\t\t\tstyles: {\n\t\t\t\t\tbackground: this.colors[i],\n\t\t\t\t\twidth: total*100/this.grand_total + \"%\"\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.slices.push(slice);\n\t\t});\n\t}\n\n\tcalc() {}\n\n\tbindTooltip() {\n\t\tthis.slices.map((slice, i) => {\n\t\t\tslice.addEventListener('mouseenter', () => {\n\t\t\t\tlet g_off = getOffset(this.chartWrapper), p_off = getOffset(slice);\n\n\t\t\t\tlet x = p_off.left - g_off.left + slice.offsetWidth/2;\n\t\t\t\tlet y = p_off.top - g_off.top - 6;\n\t\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length>0\n\t\t\t\t\t? this.formatted_labels[i] : this.labels[i]) + ': ';\n\t\t\t\tlet percent = (this.slice_totals[i]*100/this.grand_total).toFixed(1);\n\n\t\t\t\tthis.tip.set_values(x, y, title, percent + \"%\");\n\t\t\t\tthis.tip.show_tip();\n\t\t\t});\n\t\t});\n\t}\n\n\trenderLegend() {\n\t\tlet x_values = this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t? this.formatted_labels : this.labels;\n\t\tthis.legend_totals.map((d, i) => {\n\t\t\tif(d) {\n\t\t\t\tlet stats = $.create('div', {\n\t\t\t\t\tclassName: 'stats',\n\t\t\t\t\tinside: this.statsWrapper\n\t\t\t\t});\n\t\t\t\tstats.innerHTML = `<span class=\"indicator\">\n\t\t\t\t\t<i style=\"background: ${this.colors[i]}\"></i>\n\t\t\t\t\t<span class=\"text-muted\">${x_values[i]}:</span>\n\t\t\t\t\t${d}\n\t\t\t\t</span>`;\n\t\t\t}\n\t\t});\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { $, getOffset } from '../utils/dom';\nimport { makePath } from '../utils/draw';\nimport { lightenDarkenColor } from '../utils/colors';\nimport { runSMILAnimation, transform } from '../utils/animation';\nconst ANGLE_RATIO = Math.PI / 180;\nconst FULL_ANGLE = 360;\n\nexport default class PieChart extends BaseChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\tthis.type = 'pie';\n\t\tthis.elements_to_animate = null;\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.max_slices = 10;\n\t\tthis.max_legend_points = 6;\n\t\tthis.isAnimate = false;\n\t\tthis.startAngle = args.startAngle || 0;\n\t\tthis.clockWise = args.clockWise || false;\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\t\tthis.setup();\n\t}\n\tsetup_values() {\n\t\tthis.centerX = this.width / 2;\n\t\tthis.centerY = this.height / 2;\n\t\tthis.radius = (this.height > this.width ? this.centerX : this.centerY);\n\t\tthis.slice_totals = [];\n\t\tlet all_totals = this.data.labels.map((d, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, d];\n\t\t}).filter(d => { return d[0] > 0; }); // keep only positive results\n\n\t\tlet totals = all_totals;\n\n\t\tif(all_totals.length > this.max_slices) {\n\t\t\tall_totals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = all_totals.slice(0, this.max_slices-1);\n\t\t\tlet others = all_totals.slice(this.max_slices-1);\n\n\t\t\tlet sum_of_others = 0;\n\t\t\tothers.map(d => {sum_of_others += d[0];});\n\n\t\t\ttotals.push([sum_of_others, 'Rest']);\n\n\t\t\tthis.colors[this.max_slices-1] = 'grey';\n\t\t}\n\n\t\tthis.labels = [];\n\t\ttotals.map(d => {\n\t\t\tthis.slice_totals.push(d[0]);\n\t\t\tthis.labels.push(d[1]);\n\t\t});\n\n\t\tthis.legend_totals = this.slice_totals.slice(0, this.max_legend_points);\n\t}\n\n\tstatic getPositionByAngle(angle,radius){\n\t\treturn {\n\t\t\tx:Math.sin(angle * ANGLE_RATIO) * radius,\n\t\t\ty:Math.cos(angle * ANGLE_RATIO) * radius,\n\t\t};\n\t}\n\tmakeArcPath(startPosition,endPosition){\n\t\tconst{centerX,centerY,radius,clockWise} = this;\n\t\treturn `M${centerX} ${centerY} L${centerX+startPosition.x} ${centerY+startPosition.y} A ${radius} ${radius} 0 0 ${clockWise ? 1 : 0} ${centerX+endPosition.x} ${centerY+endPosition.y} z`;\n\t}\n\trenderComponents(init){\n\t\tconst{radius,clockWise} = this;\n\t\tthis.grand_total = this.slice_totals.reduce((a, b) => a + b, 0);\n\t\tconst prevSlicesProperties = this.slicesProperties || [];\n\t\tthis.slices = [];\n\t\tthis.elements_to_animate = [];\n\t\tthis.slicesProperties = [];\n\t\tlet curAngle = 180 - this.startAngle;\n\t\tthis.slice_totals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / this.grand_total) * FULL_ANGLE;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = PieChart.getPositionByAngle(startAngle,radius);\n\t\t\tconst endPosition = PieChart.getPositionByAngle(endAngle,radius);\n\t\t\tconst prevProperty = init && prevSlicesProperties[i];\n\t\t\tlet curStart,curEnd;\n\t\t\tif(init){\n\t\t\t\tcurStart = prevProperty?prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty? prevProperty.endPosition : startPosition;\n\t\t\t}else{\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath = this.makeArcPath(curStart,curEnd);\n\t\t\tlet slice = makePath(curPath, 'pie-path', 'none', this.colors[i]);\n\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\tthis.drawArea.appendChild(slice);\n\n\t\t\tthis.slices.push(slice);\n\t\t\tthis.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: this.grand_total,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle:diffAngle\n\t\t\t});\n\t\t\tif(init){\n\t\t\t\tthis.elements_to_animate.push([{unit: slice, array: this.slices, index: this.slices.length - 1},\n\t\t\t\t\t{d:this.makeArcPath(startPosition,endPosition)},\n\t\t\t\t\t650, \"easein\",null,{\n\t\t\t\t\t\td:curPath\n\t\t\t\t\t}]);\n\t\t\t}\n\n\t\t});\n\t\tif(init){\n\t\t\trunSMILAnimation(this.chartWrapper, this.svg, this.elements_to_animate);\n\t\t}\n\t}\n\n\tcalTranslateByAngle(property){\n\t\tconst{radius,hoverRadio} = this;\n\t\tconst position = PieChart.getPositionByAngle(property.startAngle+(property.angle / 2),radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\thoverSlice(path,i,flag,e){\n\t\tif(!path) return;\n\t\tconst color = this.colors[i];\n\t\tif(flag){\n\t\t\ttransform(path,this.calTranslateByAngle(this.slicesProperties[i]));\n\t\t\tpath.style.fill = lightenDarkenColor(color,50);\n\t\t\tlet g_off = getOffset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length>0\n\t\t\t\t? this.formatted_labels[i] : this.labels[i]) + ': ';\n\t\t\tlet percent = (this.slice_totals[i]*100/this.grand_total).toFixed(1);\n\t\t\tthis.tip.set_values(x, y, title, percent + \"%\");\n\t\t\tthis.tip.show_tip();\n\t\t}else{\n\t\t\ttransform(path,'translate3d(0,0,0)');\n\t\t\tthis.tip.hide_tip();\n\t\t\tpath.style.fill = color;\n\t\t}\n\t}\n\n\tmouseMove(e){\n\t\tconst target = e.target;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevAcitve = this.curActiveSlice;\n\t\tfor(let i = 0; i < this.slices.length; i++){\n\t\t\tif(target === this.slices[i]){\n\t\t\t\tthis.hoverSlice(prevAcitve,prevIndex,false);\n\t\t\t\tthis.curActiveSlice = target;\n\t\t\t\tthis.curActiveSliceIndex = i;\n\t\t\t\tthis.hoverSlice(target,i,true,e);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tmouseLeave(){\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\n\t}\n\tbindTooltip() {\n\t\tthis.drawArea.addEventListener('mousemove',this.mouseMove);\n\t\tthis.drawArea.addEventListener('mouseleave',this.mouseLeave);\n\t}\n\n\trenderLegend() {\n\t\tlet x_values = this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t? this.formatted_labels : this.labels;\n\t\tthis.legend_totals.map((d, i) => {\n\t\t\tconst color = this.colors[i];\n\n\t\t\tif(d) {\n\t\t\t\tlet stats = $.create('div', {\n\t\t\t\t\tclassName: 'stats',\n\t\t\t\t\tinside: this.statsWrapper\n\t\t\t\t});\n\t\t\t\tstats.innerHTML = `<span class=\"indicator\">\n\t\t\t\t\t<i style=\"background-color:${color};\"></i>\n\t\t\t\t\t<span class=\"text-muted\">${x_values[i]}:</span>\n\t\t\t\t\t${d}\n\t\t\t\t</span>`;\n\t\t\t}\n\t\t});\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { makeSVGGroup, makeHeatSquare, makeText } from '../utils/draw';\nimport { addDays, getDdMmYyyy, getWeeksBetween } from '../utils/date-utils';\nimport { calcDistribution, getMaxCheckpoint } from '../utils/intervals';\nimport { isValidColor } from '../utils/colors';\n\nexport default class Heatmap extends BaseChart {\n\tconstructor({\n\t\tstart = '',\n\t\tdomain = '',\n\t\tsubdomain = '',\n\t\tdata = {},\n\t\tdiscrete_domains = 0,\n\t\tcount_label = '',\n\t\tlegend_colors = []\n\t}) {\n\t\tsuper(arguments[0]);\n\n\t\tthis.type = 'heatmap';\n\n\t\tthis.domain = domain;\n\t\tthis.subdomain = subdomain;\n\t\tthis.data = data;\n\t\tthis.discrete_domains = discrete_domains;\n\t\tthis.count_label = count_label;\n\n\t\tlet today = new Date();\n\t\tthis.start = start || addDays(today, 365);\n\n\t\tlegend_colors = legend_colors.slice(0, 5);\n\t\tthis.legend_colors = this.validate_colors(legend_colors)\n\t\t\t? legend_colors\n\t\t\t: ['#ebedf0', '#c6e48b', '#7bc96f', '#239a3b', '#196127'];\n\n\t\t// Fixed 5-color theme,\n\t\t// More colors are difficult to parse visually\n\t\tthis.distribution_size = 5;\n\n\t\tthis.translateX = 0;\n\t\t// this.setup();\n\t}\n\n\tvalidate_colors(colors) {\n\t\tif(colors.length < 5) return 0;\n\n\t\tlet valid = 1;\n\t\tcolors.forEach(function(string) {\n\t\t\tif(!isValidColor(string)) {\n\t\t\t\tvalid = 0;\n\t\t\t\tconsole.warn('\"' + string + '\" is not a valid color.');\n\t\t\t}\n\t\t}, this);\n\n\t\treturn valid;\n\t}\n\n\tconfigure() {\n\t\tsuper.configure();\n\t\tthis.today = new Date();\n\n\t\tif(!this.start) {\n\t\t\tthis.start = new Date();\n\t\t\tthis.start.setFullYear( this.start.getFullYear() - 1 );\n\t\t}\n\t\tthis.first_week_start = new Date(this.start.toDateString());\n\t\tthis.last_week_start = new Date(this.today.toDateString());\n\t\tif(this.first_week_start.getDay() !== 7) {\n\t\t\taddDays(this.first_week_start, (-1) * this.first_week_start.getDay());\n\t\t}\n\t\tif(this.last_week_start.getDay() !== 7) {\n\t\t\taddDays(this.last_week_start, (-1) * this.last_week_start.getDay());\n\t\t}\n\t\tthis.no_of_cols = getWeeksBetween(this.first_week_start + '', this.last_week_start + '') + 1;\n\t}\n\n\tcalcWidth() {\n\t\tthis.baseWidth = (this.no_of_cols + 3) * 12 ;\n\n\t\tif(this.discrete_domains) {\n\t\t\tthis.baseWidth += (12 * 12);\n\t\t}\n\t}\n\n\tsetupLayers() {\n\t\tthis.domain_label_group = this.makeLayer(\n\t\t\t'domain-label-group chart-label');\n\n\t\tthis.data_groups = this.makeLayer(\n\t\t\t'data-groups',\n\t\t\t`translate(0, 20)`\n\t\t);\n\t}\n\n\tsetup_values() {\n\t\tthis.domain_label_group.textContent = '';\n\t\tthis.data_groups.textContent = '';\n\n\t\tlet data_values = Object.keys(this.data).map(key => this.data[key]);\n\t\tthis.distribution = calcDistribution(data_values, this.distribution_size);\n\n\t\tthis.month_names = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n\t\t\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n\t\t];\n\n\t\tthis.render_all_weeks_and_store_x_values(this.no_of_cols);\n\t}\n\n\trender_all_weeks_and_store_x_values(no_of_weeks) {\n\t\tlet current_week_sunday = new Date(this.first_week_start);\n\t\tthis.week_col = 0;\n\t\tthis.current_month = current_week_sunday.getMonth();\n\n\t\tthis.months = [this.current_month + ''];\n\t\tthis.month_weeks = {}, this.month_start_points = [];\n\t\tthis.month_weeks[this.current_month] = 0;\n\t\tthis.month_start_points.push(13);\n\n\t\tfor(var i = 0; i < no_of_weeks; i++) {\n\t\t\tlet data_group, month_change = 0;\n\t\t\tlet day = new Date(current_week_sunday);\n\n\t\t\t[data_group, month_change] = this.get_week_squares_group(day, this.week_col);\n\t\t\tthis.data_groups.appendChild(data_group);\n\t\t\tthis.week_col += 1 + parseInt(this.discrete_domains && month_change);\n\t\t\tthis.month_weeks[this.current_month]++;\n\t\t\tif(month_change) {\n\t\t\t\tthis.current_month = (this.current_month + 1) % 12;\n\t\t\t\tthis.months.push(this.current_month + '');\n\t\t\t\tthis.month_weeks[this.current_month] = 1;\n\t\t\t}\n\t\t\taddDays(current_week_sunday, 7);\n\t\t}\n\t\tthis.render_month_labels();\n\t}\n\n\tget_week_squares_group(current_date, index) {\n\t\tconst no_of_weekdays = 7;\n\t\tconst square_side = 10;\n\t\tconst cell_padding = 2;\n\t\tconst step = 1;\n\t\tconst today_time = this.today.getTime();\n\n\t\tlet month_change = 0;\n\t\tlet week_col_change = 0;\n\n\t\tlet data_group = makeSVGGroup(this.data_groups, 'data-group');\n\n\t\tfor(var y = 0, i = 0; i < no_of_weekdays; i += step, y += (square_side + cell_padding)) {\n\t\t\tlet data_value = 0;\n\t\t\tlet color_index = 0;\n\n\t\t\tlet current_timestamp = current_date.getTime()/1000;\n\t\t\tlet timestamp = Math.floor(current_timestamp - (current_timestamp % 86400)).toFixed(1);\n\n\t\t\tif(this.data[timestamp]) {\n\t\t\t\tdata_value = this.data[timestamp];\n\t\t\t}\n\n\t\t\tif(this.data[Math.round(timestamp)]) {\n\t\t\t\tdata_value = this.data[Math.round(timestamp)];\n\t\t\t}\n\n\t\t\tif(data_value) {\n\t\t\t\tcolor_index = getMaxCheckpoint(data_value, this.distribution);\n\t\t\t}\n\n\t\t\tlet x = 13 + (index + week_col_change) * 12;\n\n\t\t\tlet dataAttr = {\n\t\t\t\t'data-date': getDdMmYyyy(current_date),\n\t\t\t\t'data-value': data_value,\n\t\t\t\t'data-day': current_date.getDay()\n\t\t\t};\n\t\t\tlet heatSquare = makeHeatSquare('day', x, y, square_side,\n\t\t\t\tthis.legend_colors[color_index], dataAttr);\n\n\t\t\tdata_group.appendChild(heatSquare);\n\n\t\t\tlet next_date = new Date(current_date);\n\t\t\taddDays(next_date, 1);\n\t\t\tif(next_date.getTime() > today_time) break;\n\n\n\t\t\tif(next_date.getMonth() - current_date.getMonth()) {\n\t\t\t\tmonth_change = 1;\n\t\t\t\tif(this.discrete_domains) {\n\t\t\t\t\tweek_col_change = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.month_start_points.push(13 + (index + week_col_change) * 12);\n\t\t\t}\n\t\t\tcurrent_date = next_date;\n\t\t}\n\n\t\treturn [data_group, month_change];\n\t}\n\n\trender_month_labels() {\n\t\t// this.first_month_label = 1;\n\t\t// if (this.first_week_start.getDate() > 8) {\n\t\t// \tthis.first_month_label = 0;\n\t\t// }\n\t\t// this.last_month_label = 1;\n\n\t\t// let first_month = this.months.shift();\n\t\t// let first_month_start = this.month_start_points.shift();\n\t\t// render first month if\n\n\t\t// let last_month = this.months.pop();\n\t\t// let last_month_start = this.month_start_points.pop();\n\t\t// render last month if\n\n\t\tthis.months.shift();\n\t\tthis.month_start_points.shift();\n\t\tthis.months.pop();\n\t\tthis.month_start_points.pop();\n\n\t\tthis.month_start_points.map((start, i) => {\n\t\t\tlet month_name =  this.month_names[this.months[i]].substring(0, 3);\n\t\t\tlet text = makeText('y-value-text', start+12, 10, month_name);\n\t\t\tthis.domain_label_group.appendChild(text);\n\t\t});\n\t}\n\n\trenderComponents() {\n\t\tArray.prototype.slice.call(\n\t\t\tthis.container.querySelectorAll('.graph-stats-container, .sub-title, .title')\n\t\t).map(d => {\n\t\t\td.style.display = 'None';\n\t\t});\n\t\tthis.chartWrapper.style.marginTop = '0px';\n\t\tthis.chartWrapper.style.paddingTop = '0px';\n\t}\n\n\tbindTooltip() {\n\t\tArray.prototype.slice.call(\n\t\t\tdocument.querySelectorAll(\".data-group .day\")\n\t\t).map(el => {\n\t\t\tel.addEventListener('mouseenter', (e) => {\n\t\t\t\tlet count = e.target.getAttribute('data-value');\n\t\t\t\tlet date_parts = e.target.getAttribute('data-date').split('-');\n\n\t\t\t\tlet month = this.month_names[parseInt(date_parts[1])-1].substring(0, 3);\n\n\t\t\t\tlet g_off = this.chartWrapper.getBoundingClientRect(), p_off = e.target.getBoundingClientRect();\n\n\t\t\t\tlet width = parseInt(e.target.getAttribute('width'));\n\t\t\t\tlet x = p_off.left - g_off.left + (width+2)/2;\n\t\t\t\tlet y = p_off.top - g_off.top - (width+2)/2;\n\t\t\t\tlet value = count + ' ' + this.count_label;\n\t\t\t\tlet name = ' on ' + month + ' ' + date_parts[0] + ', ' + date_parts[2];\n\n\t\t\t\tthis.tip.set_values(x, y, name, value, [], 1);\n\t\t\t\tthis.tip.show_tip();\n\t\t\t});\n\t\t});\n\t}\n\n\tupdate(data) {\n\t\tthis.data = data;\n\t\tthis.setup_values();\n\t\tthis.bindTooltip();\n\t}\n}\n"],"names":["expr","con","document","querySelector","getOffset","element","rect","getBoundingClientRect","top","documentElement","scrollTop","body","left","scrollLeft","isElementInViewport","el","bottom","window","innerHeight","clientHeight","right","innerWidth","clientWidth","getElementContentWidth","styles","getComputedStyle","padding","parseFloat","paddingLeft","paddingRight","floatTwo","d","toFixed","fillArray","array","count","start","length","fillerArray","Array","Math","abs","fill","concat","getStringWidth","string","charWidth","getBarHeightAndYAttr","yTop","zeroLine","height","y","equilizeNoOfElements","array1","array2","extra_count","translate","unit","oldCoord","newCoord","duration","old","join","transform","STD_EASING","translateVertLine","xLine","newX","oldX","MARKER_LINE_ANIM_DUR","translateHoriLine","yLine","newY","oldY","animateRegion","rectGroup","newY1","newY2","oldY2","newHeight","childNodes","stroke-dasharray","getAttribute","animateBar","bar","x","width","nodeName","UNIT_ANIM_DUR","split","slice","$","createSVG","tag","o","createElementNS","i","val","appendChild","ref","parentNode","insertBefore","keys","map","style","prop","setAttribute","makeSVGContainer","parent","className","makeSVGDefs","svgContainer","makeSVGGroup","makePath","pathStr","makeHeatSquare","size","data","args","key","makeText","content","FONT_SIZE","makeVertLine","label","y1","y2","options","stroke","BASE_LINE_COLOR","l","text","LABEL_MARGIN","line","makeHoriLine","x1","x2","lineType","pos","offset","mode","AXIS_TICK_LENGTH","yMarker","labelSvg","yRegion","region","datasetBar","color","index","meta","minHeight","group","limitColor","r","lightenDarkenColor","amt","col","getColor","usePound","num","parseInt","b","g","toString","isValidColor","test","getDifferentChart","type","current_type","ALL_CHART_TYPES","includes","error","COMPATIBLE_CHARTS","useColor","COLOR_COMPATIBLE_CHARTS","Chart","title","colors","undefined","animateSVGElement","props","dur","easingType","oldValues","animElement","cloneNode","newElement","attributeName","animateElement","currentValue","value","animAttr","EASING","webkitTransform","msTransform","mozTransform","oTransform","animateSVG","elements","newElements","animElements","push","replaceChild","animSvg","runSMILAnimation","svgElement","elementsToAnimate","animSvgElement","removeChild","REPLACE_ALL_NEW_DUR","dataPrep","labels","datasetLength","datasets","zeroArray","values","vals","isNaN","chartType","AXIS_DATASET_CHART_TYPES","yRegions","end","zeroDataPrep","realData","getComponent","name","constants","getData","Object","componentConfigs","filter","k","config","assign","ChartComponent","normalize","mantissa","exponent","sig","isFinite","exp","floor","log10","pow","getChartRangeIntervals","max","min","upperBound","ceil","lowerBound","range","noOfParts","partSize","intervals","getChartIntervals","maxValue","minValue","normalMaxValue","normalMinValue","calcChartIntervals","getPositiveFirstIntervals","absMinValue","intervalSize","unshift","withMinimum","pseudoMaxValue","pseudoMinValue","reverse","getZeroIndex","yPts","interval","getIntervalSize","indexOf","orderedArray","getValueRange","scale","yAxis","scaleMultiplier","calcDistribution","distributionSize","dataMaxValue","distributionStep","distribution","checkpoint","getMaxCheckpoint","treatAsUtc","dateStr","result","Date","setMinutes","getMinutes","getTimezoneOffset","getDdMmYyyy","date","dd","getDate","mm","getMonth","getFullYear","getWeeksBetween","startDateStr","endDateStr","getDaysBetween","addDays","numberOfDays","setDate","getChartByType","AxisChart","chartTypes","create","createElement","SvgTip","title_name","title_value","list_values","title_value_first","setup","make_tooltip","calc_position","container","this","hide_tip","data_point_list","addEventListener","innerHTML","set","_this2","li","offsetWidth","offsetHeight","max_left","pointer","pointer_offset","refresh","opacity","PRESET_COLOR_MAP","state","refreshState","totalHeight","totalWidth","unitWidth","xAxisMode","yAxisMode","noOfDatasets","avgUnitWidth","dot","cx","cy","paths","pathComponents","animPath","regStartPt","regEndPt","animRegion","DEFAULT_COLORS","BaseChart","subtitle","isNavigable","showLegend","rawChartArgs","arguments","argHeight","currentIndex","prepareData","prepareFirstData","configure","setColors","setMargins","_this","draw","list","baseHeight","translateY","translateXLeft","translateXRight","validate","_setup","makeContainer","makeTooltip","components","Map","chartWrapper","statsWrapper","tip","bindTooltip","init","calcWidth","makeChartArea","calc","initComponents","setupComponents","forEach","c","drawArea","make","renderLegend","setupNavigation","update","baseWidth","render","animate","svg","svgDefs","makeOverlay","bindOverlay","e","_this3","event","keyCode","onLeftArrow","onRightArrow","onUpArrow","onDownArrow","onEnterKey","point","dataset","dataPoint","layerClass","layerTransform","makeElements","animateElements","store","layer","oldData","textContent","positions","position","newData","newPos","newLabels","oldPos","oldLabels","_this4","marker","_this5","_this6","newStarts","oldStarts","yPositions","j","xPositions","barWidth","valuesOverPoints","stacked","cumulativeYs","cumulativeYPos","barsWidth","newXPos","newYPos","newCYPos","newValues","newCYs","oldXPos","oldYPos","oldCYPos","oldCYs","isSeries","formatTooltipY","formatTooltipX","barOptions","lineOptions","calcXPositions","calcYAxisParameters","getAllYValues","s","xOffset","xAxis","dataValues","intervalHeight","calcYUnits","calcYExtremes","calcYRegions","scaleAll","yExtremes","yMarkers","cumulative","bind","barDatasets","barsConfigs","spaceRatio","markerConfigs","optionals","dataUnitsComponents","getPathComponent","renderer","unitRenderers","getDataUnitComponent","unitRenderer","cumulativePositions","consts","svgUnits","lastUnit","oldState","xExtra","_this8","getPaths","heatline","regionFill","path","newPointsList","animatepath","_this9","relX","pageX","pageY","mapTooltipXPosition","titles","_this10","formatY","xVal","set_values","show_tip","current_index","data_point","data_key","fire","getDataPoint","datasetValues","splice","ScatterChart","dotRadius","unit_args","radius","getPrototypeOf","LineChart","prototype","showDots","unitArgs","MultiAxisChart","noOfLeftAxes","axisPosition","leftCount","rightCount","unitType","guidePos","setZeroline","zeroline","xAxisPositions","PercentageChart","max_slices","max_legend_points","marginTop","marginBottom","paddingTop","chartDiv","chart","percentageBar","slice_totals","all_totals","total","totals","sort","a","sum_of_others","legend_totals","grand_total","reduce","slices","g_off","p_off","formatted_labels","percent","x_values","ANGLE_RATIO","PI","PieChart","elements_to_animate","hoverRadio","isAnimate","startAngle","clockWise","mouseMove","mouseLeave","centerX","centerY","startPosition","endPosition","prevSlicesProperties","slicesProperties","curAngle","originDiffAngle","diffAngle","endAngle","getPositionByAngle","prevProperty","curStart","curEnd","curPath","makeArcPath","transition","property","angle","flag","calTranslateByAngle","target","prevIndex","curActiveSliceIndex","prevAcitve","curActiveSlice","hoverSlice","sin","cos","domain","subdomain","discrete_domains","count_label","legend_colors","today","validate_colors","distribution_size","translateX","valid","warn","setFullYear","first_week_start","toDateString","last_week_start","getDay","no_of_cols","domain_label_group","makeLayer","data_groups","data_values","month_names","render_all_weeks_and_store_x_values","no_of_weeks","current_week_sunday","week_col","current_month","months","month_weeks","month_start_points","data_group","month_change","day","get_week_squares_group","render_month_labels","current_date","today_time","getTime","week_col_change","square_side","data_value","color_index","current_timestamp","timestamp","round","dataAttr","heatSquare","next_date","shift","pop","substring","call","querySelectorAll","display","date_parts","month","setup_values","Heatmap"],"mappings":"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"}