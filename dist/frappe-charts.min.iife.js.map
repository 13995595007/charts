{"version":3,"file":"frappe-charts.min.iife.js","sources":["../src/js/utils/dom.js","../src/js/utils/helpers.js","../src/js/utils/draw-utils.js","../src/js/utils/animate.js","../src/js/utils/draw.js","../src/js/utils/colors.js","../src/js/config.js","../src/js/utils/animation.js","../src/js/charts/axis-chart-utils.js","../src/js/objects/ChartComponents.js","../src/js/utils/intervals.js","../src/js/utils/date-utils.js","../src/js/chart.js","../src/js/objects/SvgTip.js","../src/js/charts/BaseChart.js","../src/js/utils/constants.js","../src/js/charts/AxisChart.js","../src/js/charts/ScatterChart.js","../src/js/charts/LineChart.js","../src/js/charts/MultiAxisChart.js","../src/js/charts/PercentageChart.js","../src/js/charts/PieChart.js","../src/js/charts/Heatmap.js"],"sourcesContent":["export function $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function findNodeIndex(node)\n{\n\tvar i = 0;\n\twhile (node.previousSibling) {\n\t\tnode = node.previousSibling;\n\t\ti++;\n\t}\n\treturn i;\n}\n\n$.create = (tag, o) => {\n\tvar element = document.createElement(tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (i in element ) {\n\t\t\telement[i] = val;\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(i, val);\n\t\t}\n\t}\n\n\treturn element;\n};\n\nexport function getOffset(element) {\n\tlet rect = element.getBoundingClientRect();\n\treturn {\n\t\t// https://stackoverflow.com/a/7436602/6495043\n\t\t// rect.top varies with scroll, so we add whatever has been\n\t\t// scrolled to it to get absolute distance from actual page top\n\t\ttop: rect.top + (document.documentElement.scrollTop || document.body.scrollTop),\n\t\tleft: rect.left + (document.documentElement.scrollLeft || document.body.scrollLeft)\n\t};\n}\n\nexport function isElementInViewport(el) {\n\t// Although straightforward: https://stackoverflow.com/a/7557433/6495043\n\tvar rect = el.getBoundingClientRect();\n\n\treturn (\n\t\trect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\n\t);\n}\n\nexport function getElementContentWidth(element) {\n\tvar styles = window.getComputedStyle(element);\n\tvar padding = parseFloat(styles.paddingLeft) +\n\t\tparseFloat(styles.paddingRight);\n\n\treturn element.clientWidth - padding;\n}\n\nexport function bind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function (event) {\n\t\t\t\telement.addEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function unbind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function(event) {\n\t\t\t\telement.removeEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function fire(target, type, properties) {\n\tvar evt = document.createEvent(\"HTMLEvents\");\n\n\tevt.initEvent(type, true, true );\n\n\tfor (var j in properties) {\n\t\tevt[j] = properties[j];\n\t}\n\n\treturn target.dispatchEvent(evt);\n}\n","/**\n * Returns the value of a number upto 2 decimal places.\n * @param {Number} d Any number\n */\nexport function floatTwo(d) {\n\treturn parseFloat(d.toFixed(2));\n}\n\n/**\n * Returns whether or not two given arrays are equal.\n * @param {Array} arr1 First array\n * @param {Array} arr2 Second array\n */\nexport function arraysEqual(arr1, arr2) {\n\tif(arr1.length !== arr2.length) return false;\n\tlet areEqual = true;\n\tarr1.map((d, i) => {\n\t\tif(arr2[i] !== d) areEqual = false;\n\t});\n\treturn areEqual;\n}\n\n/**\n * Shuffles array in place. ES6 version\n * @param {Array} array An array containing the items.\n */\nexport function shuffle(array) {\n\t// Awesomeness: https://bost.ocks.org/mike/shuffle/\n\t// https://stackoverflow.com/a/2450976/6495043\n\t// https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array?noredirect=1&lq=1\n\n\tfor (let i = array.length - 1; i > 0; i--) {\n\t\tlet j = Math.floor(Math.random() * (i + 1));\n\t\t[array[i], array[j]] = [array[j], array[i]];\n\t}\n\n\treturn array;\n}\n\n/**\n * Fill an array with extra points\n * @param {Array} array Array\n * @param {Number} count number of filler elements\n * @param {Object} element element to fill with\n * @param {Boolean} start fill at start?\n */\nexport function fillArray(array, count, element, start=false) {\n\tif(!element) {\n\t\telement = start ? array[0] : array[array.length - 1];\n\t}\n\tlet fillerArray = new Array(Math.abs(count)).fill(element);\n\tarray = start ? fillerArray.concat(array) : array.concat(fillerArray);\n\treturn array;\n}\n\n/**\n * Returns pixel width of string.\n * @param {String} string\n * @param {Number} charWidth Width of single char in pixels\n */\nexport function getStringWidth(string, charWidth) {\n\treturn (string+\"\").length * charWidth;\n}\n\nexport function bindChange(obj, getFn, setFn) {\n\treturn new Proxy(obj, {\n\t\tset: function(target, prop, value) {\n\t\t\tsetFn();\n\t\t\treturn Reflect.set(target, prop, value);\n\t\t},\n\t\tget: function(target, prop, value) {\n\t\t\tgetFn();\n\t\t\treturn Reflect.get(target, prop);\n\t\t}\n\t});\n}\n","import { fillArray } from './helpers';\n\nexport function getBarHeightAndYAttr(yTop, zeroLine) {\n\tlet height, y;\n\tif (yTop < zeroLine) {\n\t\theight = zeroLine - yTop;\n\t\ty = yTop;\n\t} else {\n\t\theight = yTop - zeroLine;\n\t\ty = zeroLine;\n\t}\n\n\treturn [height, y];\n}\n\nexport function equilizeNoOfElements(array1, array2,\n\textra_count=array2.length - array1.length) {\n\n\t// Doesn't work if either has zero elements.\n\tif(extra_count > 0) {\n\t\tarray1 = fillArray(array1, extra_count);\n\t} else {\n\t\tarray2 = fillArray(array2, extra_count);\n\t}\n\treturn [array1, array2];\n}\n\n// let char_width = 8;\n// let allowed_space = avgUnitWidth * 1.5;\n// let allowed_letters = allowed_space / 8;\n\n// return values.map((value, i) => {\n// \tlet space_taken = getStringWidth(value, char_width) + 2;\n// \tif(space_taken > allowed_space) {\n// \t\tif(isSeries) {\n// \t\t\t// Skip some axis lines if X axis is a series\n// \t\t\tlet skips = 1;\n// \t\t\twhile((space_taken/skips)*2 > allowed_space) {\n// \t\t\t\tskips++;\n// \t\t\t}\n// \t\t\tif(i % skips !== 0) {\n// \t\t\t\treturn;\n// \t\t\t}\n// \t\t} else {\n// \t\t\tvalue = value.slice(0, allowed_letters-3) + \" ...\";\n// \t\t}\n// \t}\n","import { getBarHeightAndYAttr } from './draw-utils';\n\nexport const UNIT_ANIM_DUR = 350;\nexport const PATH_ANIM_DUR = 350;\nexport const MARKER_LINE_ANIM_DUR = UNIT_ANIM_DUR;\nexport const REPLACE_ALL_NEW_DUR = 250;\n\nexport const STD_EASING = 'easein';\n\nexport function translate(unit, oldCoord, newCoord, duration) {\n\treturn [\n\t\tunit,\n\t\t{transform: newCoord.join(', ')},\n\t\tduration,\n\t\tSTD_EASING,\n\t\t\"translate\",\n\t\t{transform: oldCoord.join(', ')}\n\t];\n}\n\nexport function translateVertLine(xLine, newX, oldX) {\n\treturn translate(xLine, [oldX, 0], [newX, 0], MARKER_LINE_ANIM_DUR);\n}\n\nexport function translateHoriLine(yLine, newY, oldY) {\n\treturn translate(yLine, [0, oldY], [0, newY], MARKER_LINE_ANIM_DUR);\n}\n\nexport function animateRegion(rectGroup, newY1, newY2, oldY2) {\n\tlet newHeight = newY1 - newY2;\n\tlet rect = rectGroup.childNodes[0];\n\tlet width = rect.getAttribute(\"width\");\n\tlet rectAnim = [\n\t\trect,\n\t\t{ height: newHeight, 'stroke-dasharray': `${width}, ${newHeight}` },\n\t\tMARKER_LINE_ANIM_DUR,\n\t\tSTD_EASING\n\t]\n\n\tlet groupAnim = translate(rectGroup, [0, oldY2], [0, newY2], MARKER_LINE_ANIM_DUR);\n\treturn [rectAnim, groupAnim];\n}\n\nexport var Animator = (function() {\n\tvar Animator = function(totalHeight, totalWidth, zeroLine, avgUnitWidth) {\n\t\t// constants\n\t\tthis.totalHeight = totalHeight;\n\t\tthis.totalWidth = totalWidth;\n\n\t\t// changeables\n\t\tthis.avgUnitWidth = avgUnitWidth;\n\t\tthis.zeroLine = zeroLine;\n\t};\n\n\tAnimator.prototype = {\n\t\tbar: function(barObj, x, yTop, index, noOfDatasets) {\n\t\t\tlet start = x - this.avgUnitWidth/4;\n\t\t\tlet width = (this.avgUnitWidth/2)/noOfDatasets;\n\t\t\tlet [height, y] = getBarHeightAndYAttr(yTop, this.zeroLine, this.totalHeight);\n\n\t\t\tx = start + (width * index);\n\n\t\t\treturn [barObj, {width: width, height: height, x: x, y: y}, UNIT_ANIM_DUR, STD_EASING];\n\t\t\t// bar.animate({height: args.newHeight, y: yTop}, UNIT_ANIM_DUR, mina.easein);\n\t\t},\n\n\t\tdot: function(dotObj, x, yTop) {\n\t\t\treturn [dotObj, {cx: x, cy: yTop}, UNIT_ANIM_DUR, STD_EASING];\n\t\t\t// dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\n\t\t},\n\n\t\tpath: function(d, pathStr) {\n\t\t\tlet pathComponents = [];\n\t\t\tconst animPath = [{unit: d.path, object: d, key: 'path'}, {d:\"M\"+pathStr}, PATH_ANIM_DUR, STD_EASING];\n\t\t\tpathComponents.push(animPath);\n\n\t\t\tif(d.regionPath) {\n\t\t\t\tlet regStartPt = `0,${this.zeroLine}L`;\n\t\t\t\tlet regEndPt = `L${this.totalWidth}, ${this.zeroLine}`;\n\n\t\t\t\tconst animRegion = [\n\t\t\t\t\t{unit: d.regionPath, object: d, key: 'regionPath'},\n\t\t\t\t\t{d:\"M\" + regStartPt + pathStr + regEndPt},\n\t\t\t\t\tPATH_ANIM_DUR,\n\t\t\t\t\tSTD_EASING\n\t\t\t\t];\n\t\t\t\tpathComponents.push(animRegion);\n\t\t\t}\n\n\t\t\treturn pathComponents;\n\t\t}\n\t};\n\n\treturn Animator;\n})();\n\n\n","import { getBarHeightAndYAttr } from './draw-utils';\nimport { getStringWidth } from './helpers';\nimport { STD_EASING, UNIT_ANIM_DUR, MARKER_LINE_ANIM_DUR, PATH_ANIM_DUR } from './animate';\n\n/*\n\n<filter id=\"glow\" x=\"-10%\" y=\"-10%\" width=\"120%\" height=\"120%\">\n\t<feGaussianBlur stdDeviation=\"0.5 0.5\" result=\"glow\"></feGaussianBlur>\n\t<feMerge>\n\t\t<feMergeNode in=\"glow\"></feMergeNode>\n\t\t<feMergeNode in=\"glow\"></feMergeNode>\n\t\t<feMergeNode in=\"glow\"></feMergeNode>\n\t</feMerge>\n</filter>\n\n    filter: url(#glow);\n    fill: #fff;\n\n*/\n\nconst AXIS_TICK_LENGTH = 6;\nconst LABEL_MARGIN = 4;\nexport const FONT_SIZE = 10;\nconst BASE_LINE_COLOR = '#dadada';\nconst BASE_BG_COLOR = '#F7FAFC';\n\nfunction $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function createSVG(tag, o) {\n\tvar element = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif(i === \"className\") { i = \"class\"; }\n\t\t\tif(i === \"innerHTML\") {\n\t\t\t\telement['textContent'] = val;\n\t\t\t} else {\n\t\t\t\telement.setAttribute(i, val);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn element;\n}\n\nfunction renderVerticalGradient(svgDefElem, gradientId) {\n\treturn createSVG('linearGradient', {\n\t\tinside: svgDefElem,\n\t\tid: gradientId,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: 0,\n\t\ty2: 1\n\t});\n}\n\nfunction setGradientStop(gradElem, offset, color, opacity) {\n\treturn createSVG('stop', {\n\t\t'inside': gradElem,\n\t\t'style': `stop-color: ${color}`,\n\t\t'offset': offset,\n\t\t'stop-opacity': opacity\n\t});\n}\n\nexport function makeSVGContainer(parent, className, width, height) {\n\treturn createSVG('svg', {\n\t\tclassName: className,\n\t\tinside: parent,\n\t\twidth: width,\n\t\theight: height\n\t});\n}\n\nexport function makeSVGDefs(svgContainer) {\n\treturn createSVG('defs', {\n\t\tinside: svgContainer,\n\t});\n}\n\nexport function makeSVGGroup(parent, className, transform='') {\n\treturn createSVG('g', {\n\t\tclassName: className,\n\t\tinside: parent,\n\t\ttransform: transform\n\t});\n}\n\nexport function wrapInSVGGroup(elements, className='') {\n\tlet g = createSVG('g', {\n\t\tclassName: className\n\t});\n\telements.forEach(e => g.appendChild(e));\n\treturn g;\n}\n\nexport function makePath(pathStr, className='', stroke='none', fill='none') {\n\treturn createSVG('path', {\n\t\tclassName: className,\n\t\td: pathStr,\n\t\tstyles: {\n\t\t\tstroke: stroke,\n\t\t\tfill: fill\n\t\t}\n\t});\n}\n\nexport function makeGradient(svgDefElem, color, lighter = false) {\n\tlet gradientId ='path-fill-gradient' + '-' + color;\n\tlet gradientDef = renderVerticalGradient(svgDefElem, gradientId);\n\tlet opacities = [1, 0.6, 0.2];\n\tif(lighter) {\n\t\topacities = [0.4, 0.2, 0];\n\t}\n\n\tsetGradientStop(gradientDef, \"0%\", color, opacities[0]);\n\tsetGradientStop(gradientDef, \"50%\", color, opacities[1]);\n\tsetGradientStop(gradientDef, \"100%\", color, opacities[2]);\n\n\treturn gradientId;\n}\n\nexport function makeHeatSquare(className, x, y, size, fill='none', data={}) {\n\tlet args = {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: size,\n\t\theight: size,\n\t\tfill: 1\n\t};\n\n\tObject.keys(data).map(key => {\n\t\targs[key] = data[key];\n\t});\n\n\treturn createSVG(\"rect\", args);\n}\n\nexport function makeText(className, x, y, content) {\n\treturn createSVG('text', {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\tdy: (FONT_SIZE / 2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\tinnerHTML: content\n\t});\n}\n\nfunction makeVertLine(x, label, y1, y2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tlet l = createSVG('line', {\n\t\tclassName: 'line-vertical ' + options.className,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: y1,\n\t\ty2: y2,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: 0,\n\t\ty: y1 > y2 ? y1 + LABEL_MARGIN : y1 - LABEL_MARGIN - FONT_SIZE,\n\t\tdy: FONT_SIZE + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'middle',\n\t\tinnerHTML: label\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(${ x }, 0)`\n\t});\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nfunction makeHoriLine(y, label, x1, x2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.lineType) options.lineType = '';\n\tlet className = 'line-horizontal ' + options.className +\n\t\t(options.lineType === \"dashed\" ? \"dashed\": \"\");\n\n\tlet l = createSVG('line', {\n\t\tclassName: className,\n\t\tx1: x1,\n\t\tx2: x2,\n\t\ty1: 0,\n\t\ty2: 0,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: x1 < x2 ? x1 - LABEL_MARGIN : x1 + LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / 2 - 2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': x1 < x2 ? 'end' : 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(0, ${y})`,\n\t\t'stroke-opacity': 1\n\t});\n\n\tif(text === 0 || text === '0') {\n\t\tline.style.stroke = \"rgba(27, 31, 35, 0.6)\";\n\t}\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nexport function yLine(y, label, width, options={}) {\n\tif(!options.pos) options.pos = 'left';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\tlet x1 = -1 * AXIS_TICK_LENGTH;\n\tlet x2 = options.mode === 'span' ? width + AXIS_TICK_LENGTH : 0;\n\n\tif(options.mode === 'tick' && options.pos === 'right') {\n\t\tx1 = width + AXIS_TICK_LENGTH\n\t\tx2 = width;\n\t}\n\n\tlet offset = options.pos === 'left' ? -1 * options.offset : options.offset;\n\n\tx1 += options.offset;\n\tx2 += options.offset;\n\n\treturn makeHoriLine(y, label, x1, x2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType\n\t});\n}\n\nexport function xLine(x, label, height, options={}) {\n\tif(!options.pos) options.pos = 'bottom';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\t// Draw X axis line in span/tick mode with optional label\n\t//                        \ty2(span)\n\t// \t\t\t\t\t\t|\n\t// \t\t\t\t\t\t|\n\t//\t\t\t\tx line\t|\n\t//\t\t\t\t\t\t|\n\t// \t\t\t\t\t   \t|\n\t// ---------------------+-- y2(tick)\n\t//\t\t\t\t\t\t|\n\t//\t\t\t\t\t\t\ty1\n\n\tlet y1 = height + AXIS_TICK_LENGTH;\n\tlet y2 = options.mode === 'span' ? -1 * AXIS_TICK_LENGTH : height;\n\n\tif(options.mode === 'tick' && options.pos === 'top') {\n\t\t// top axis ticks\n\t\ty1 = -1 * AXIS_TICK_LENGTH;\n\t\ty2 = 0;\n\t}\n\n\treturn makeVertLine(x, label, y1, y2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType\n\t});\n}\n\nexport function yMarker(y, label, width, options={}) {\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: width - getStringWidth(label, 5) - LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = makeHoriLine(y, '', 0, width, {\n\t\tstroke: options.stroke || BASE_LINE_COLOR,\n\t\tclassName: options.className || '',\n\t\tlineType: options.lineType\n\t});\n\n\tline.appendChild(labelSvg);\n\n\treturn line;\n}\n\nexport function yRegion(y1, y2, width, label) {\n\t// return a group\n\tlet height = y1 - y2;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`, // remove class\n\t\tstyles: {\n\t\t\tfill: `rgba(228, 234, 239, 0.49)`,\n\t\t\tstroke: BASE_LINE_COLOR,\n\t\t\t'stroke-dasharray': `${width}, ${height}`\n\t\t},\n\t\t// 'data-point-index': index,\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: width,\n\t\theight: height\n\t});\n\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: width - getStringWidth(label, 4.5) - LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet region = createSVG('g', {\n\t\ttransform: `translate(0, ${y2})`\n\t});\n\n\tregion.appendChild(rect);\n\tregion.appendChild(labelSvg);\n\n\treturn region;\n}\n\nexport function datasetBar(x, yTop, width, color, label='', index=0, offset=0, meta={}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\t// console.log(yTop, meta.zeroLine, y, offset);\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`,\n\t\tstyle: `fill: ${color}`,\n\t\t'data-point-index': index,\n\t\tx: x - meta.barsWidth/2,\n\t\ty: y - offset,\n\t\twidth: width,\n\t\theight: height || meta.minHeight\n\t});\n\n\tif(!label && !label.length) {\n\t\treturn rect;\n\t} else {\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: x,\n\t\t\ty: y - offset,\n\t\t\tdy: (FONT_SIZE / 2 * -1) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\treturn wrapInSVGGroup([rect, text]);\n\t}\n}\n\nexport class AxisChartRenderer {\n\tconstructor(state) {\n\t\tthis.refreshState(state);\n\t}\n\n\trefreshState(state) {\n\t\tthis.totalHeight = state.totalHeight;\n\t\tthis.totalWidth = state.totalWidth;\n\t\tthis.zeroLine = state.zeroLine;\n\t\tthis.unitWidth = state.unitWidth;\n\t\tthis.xAxisMode = state.xAxisMode;\n\t\tthis.yAxisMode = state.yAxisMode;\n\t}\n\n\tsetZeroline(zeroLine) {\n\t\tthis.zeroLine = zeroLine;\n\t}\n\n\txMarker() {}\n\n\n\txRegion() {\n\t\treturn createSVG('rect', {\n\t\t\tclassName: `bar mini`, // remove class\n\t\t\tstyle: `fill: rgba(228, 234, 239, 0.49)`,\n\t\t\t// 'data-point-index': index,\n\t\t\tx: 0,\n\t\t\ty: y2,\n\t\t\twidth: this.totalWidth,\n\t\t\theight: y1 - y2\n\t\t});\n\n\t\treturn region;\n\t}\n\n\tanimatebar(bar, x, yTop, index, noOfDatasets) {\n\t\tlet start = x - this.avgUnitWidth/4;\n\t\tlet width = (this.avgUnitWidth/2)/noOfDatasets;\n\t\tlet [height, y] = getBarHeightAndYAttr(yTop, this.zeroLine, this.totalHeight);\n\n\t\tx = start + (width * index);\n\n\t\treturn [bar, {width: width, height: height, x: x, y: y}, UNIT_ANIM_DUR, STD_EASING];\n\t\t// bar.animate({height: args.newHeight, y: yTop}, UNIT_ANIM_DUR, mina.easein);\n\t}\n\n\tanimatedot(dot, x, yTop) {\n\t\treturn [dot, {cx: x, cy: yTop}, UNIT_ANIM_DUR, STD_EASING];\n\t\t// dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\n\t}\n\n\tanimatepath(paths, pathStr) {\n\t\tlet pathComponents = [];\n\t\tconst animPath = [paths[0], {d:\"M\"+pathStr}, PATH_ANIM_DUR, STD_EASING];\n\t\tpathComponents.push(animPath);\n\n\t\tif(paths[1]) {\n\t\t\tlet regStartPt = `0,${this.zeroLine}L`;\n\t\t\tlet regEndPt = `L${this.totalWidth}, ${this.zeroLine}`;\n\n\t\t\tconst animRegion = [\n\t\t\t\tpaths[1],\n\t\t\t\t{d:\"M\" + regStartPt + pathStr + regEndPt},\n\t\t\t\tPATH_ANIM_DUR,\n\t\t\t\tSTD_EASING\n\t\t\t];\n\t\t\tpathComponents.push(animRegion);\n\t\t}\n\n\t\treturn pathComponents;\n\t}\n}\n","const PRESET_COLOR_MAP = {\n\t'light-blue': '#7cd6fd',\n\t'blue': '#5e64ff',\n\t'violet': '#743ee2',\n\t'red': '#ff5858',\n\t'orange': '#ffa00a',\n\t'yellow': '#feef72',\n\t'green': '#28a745',\n\t'light-green': '#98d85b',\n\t'purple': '#b554ff',\n\t'magenta': '#ffa3ef',\n\t'black': '#36114C',\n\t'grey': '#bdd3e6',\n\t'light-grey': '#f0f4f7',\n\t'dark-grey': '#b8c2cc'\n};\n\nexport const DEFAULT_COLORS = ['light-blue', 'blue', 'violet', 'red', 'orange',\n\t'yellow', 'green', 'light-green', 'purple', 'magenta'];\n\nfunction limitColor(r){\n\tif (r > 255) return 255;\n\telse if (r < 0) return 0;\n\treturn r;\n}\n\nexport function lightenDarkenColor(color, amt) {\n\tlet col = getColor(color);\n\tlet usePound = false;\n\tif (col[0] == \"#\") {\n\t\tcol = col.slice(1);\n\t\tusePound = true;\n\t}\n\tlet num = parseInt(col,16);\n\tlet r = limitColor((num >> 16) + amt);\n\tlet b = limitColor(((num >> 8) & 0x00FF) + amt);\n\tlet g = limitColor((num & 0x0000FF) + amt);\n\treturn (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\nexport function isValidColor(string) {\n\t// https://stackoverflow.com/a/8027444/6495043\n\treturn /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(string);\n}\n\nexport const getColor = (color) => {\n\treturn PRESET_COLOR_MAP[color] || color;\n};\n","import Chart from './chart';\n\nconst ALL_CHART_TYPES = ['line', 'scatter', 'bar', 'percentage', 'heatmap', 'pie'];\n\nconst COMPATIBLE_CHARTS = {\n\tbar: ['line', 'scatter', 'percentage', 'pie'],\n\tline: ['scatter', 'bar', 'percentage', 'pie'],\n\tpie: ['line', 'scatter', 'percentage', 'bar'],\n\tscatter: ['line', 'bar', 'percentage', 'pie'],\n\tpercentage: ['bar', 'line', 'scatter', 'pie'],\n\theatmap: []\n};\n\n// Needs structure as per only labels/datasets\nconst COLOR_COMPATIBLE_CHARTS = {\n\tbar: ['line', 'scatter'],\n\tline: ['scatter', 'bar'],\n\tpie: ['percentage'],\n\tscatter: ['line', 'bar'],\n\tpercentage: ['pie'],\n\theatmap: []\n};\n\nexport function getDifferentChart(type, current_type, args) {\n\tif(type === current_type) return;\n\n\tif(!ALL_CHART_TYPES.includes(type)) {\n\t\tconsole.error(`'${type}' is not a valid chart type.`);\n\t}\n\n\tif(!COMPATIBLE_CHARTS[current_type].includes(type)) {\n\t\tconsole.error(`'${current_type}' chart cannot be converted to a '${type}' chart.`);\n\t}\n\n\t// whether the new chart can use the existing colors\n\tconst useColor = COLOR_COMPATIBLE_CHARTS[current_type].includes(type);\n\n\t// Okay, this is anticlimactic\n\t// this function will need to actually be 'changeChartType(type)'\n\t// that will update only the required elements, but for now ...\n\treturn new Chart({\n\t\tparent: args.parent,\n\t\ttitle: args.title,\n\t\tdata: args.data,\n\t\ttype: type,\n\t\theight: args.height,\n\t\tcolors: useColor ? args.colors : undefined\n\t});\n}","// Leveraging SMIL Animations\n\nimport { REPLACE_ALL_NEW_DUR } from './animate';\n\nconst EASING = {\n\tease: \"0.25 0.1 0.25 1\",\n\tlinear: \"0 0 1 1\",\n\t// easein: \"0.42 0 1 1\",\n\teasein: \"0.1 0.8 0.2 1\",\n\teaseout: \"0 0 0.58 1\",\n\teaseinout: \"0.42 0 0.58 1\"\n};\n\nfunction animateSVGElement(element, props, dur, easingType=\"linear\", type=undefined, oldValues={}) {\n\n\tlet animElement = element.cloneNode(true);\n\tlet newElement = element.cloneNode(true);\n\n\tfor(var attributeName in props) {\n\t\tlet animateElement;\n\t\tif(attributeName === 'transform') {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animateTransform\");\n\t\t} else {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animate\");\n\t\t}\n\t\tlet currentValue = oldValues[attributeName] || element.getAttribute(attributeName);\n\t\tlet value = props[attributeName];\n\n\t\tlet animAttr = {\n\t\t\tattributeName: attributeName,\n\t\t\tfrom: currentValue,\n\t\t\tto: value,\n\t\t\tbegin: \"0s\",\n\t\t\tdur: dur/1000 + \"s\",\n\t\t\tvalues: currentValue + \";\" + value,\n\t\t\tkeySplines: EASING[easingType],\n\t\t\tkeyTimes: \"0;1\",\n\t\t\tcalcMode: \"spline\",\n\t\t\tfill: 'freeze'\n\t\t};\n\n\t\tif(type) {\n\t\t\tanimAttr[\"type\"] = type;\n\t\t}\n\n\t\tfor (var i in animAttr) {\n\t\t\tanimateElement.setAttribute(i, animAttr[i]);\n\t\t}\n\n\t\tanimElement.appendChild(animateElement);\n\n\t\tif(type) {\n\t\t\tnewElement.setAttribute(attributeName, `translate(${value})`);\n\t\t} else {\n\t\t\tnewElement.setAttribute(attributeName, value);\n\t\t}\n\t}\n\n\treturn [animElement, newElement];\n}\n\nexport function transform(element, style) { // eslint-disable-line no-unused-vars\n\telement.style.transform = style;\n\telement.style.webkitTransform = style;\n\telement.style.msTransform = style;\n\telement.style.mozTransform = style;\n\telement.style.oTransform = style;\n}\n\nfunction animateSVG(svgContainer, elements) {\n\tlet newElements = [];\n\tlet animElements = [];\n\n\telements.map(element => {\n\t\tlet unit = element[0];\n\t\tlet parent = unit.parentNode;\n\n\t\tlet animElement, newElement;\n\n\t\telement[0] = unit;\n\t\t[animElement, newElement] = animateSVGElement(...element);\n\n\t\tnewElements.push(newElement);\n\t\tanimElements.push([animElement, parent]);\n\n\t\tparent.replaceChild(animElement, unit);\n\t});\n\n\tlet animSvg = svgContainer.cloneNode(true);\n\n\tanimElements.map((animElement, i) => {\n\t\tanimElement[1].replaceChild(newElements[i], animElement[0]);\n\t\telements[i][0] = newElements[i];\n\t});\n\n\treturn animSvg;\n}\n\nexport function runSMILAnimation(parent, svgElement, elementsToAnimate) {\n\tif(elementsToAnimate.length === 0) return;\n\n\tlet animSvgElement = animateSVG(svgElement, elementsToAnimate);\n\tif(svgElement.parentNode == parent) {\n\t\tparent.removeChild(svgElement);\n\t\tparent.appendChild(animSvgElement);\n\n\t}\n\n\t// Replace the new svgElement (data has already been replaced)\n\tsetTimeout(() => {\n\t\tif(animSvgElement.parentNode == parent) {\n\t\t\tparent.removeChild(animSvgElement);\n\t\t\tparent.appendChild(svgElement);\n\t\t}\n\t}, REPLACE_ALL_NEW_DUR);\n}\n","import { floatTwo, fillArray } from '../utils/helpers';\nimport { DEFAULT_AXIS_CHART_TYPE, AXIS_DATASET_CHART_TYPES } from '../utils/constants';\n\nexport function dataPrep(data, type) {\n\tdata.labels = data.labels || [];\n\n\tlet datasetLength = data.labels.length;\n\n\t// Datasets\n\tlet datasets = data.datasets;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\tif(!datasets) {\n\t\t// default\n\t\tdatasets = [{\n\t\t\tvalues: zeroArray\n\t\t}];\n\t}\n\n\tdatasets.map((d, i)=> {\n\t\t// Set values\n\t\tif(!d.values) {\n\t\t\td.values = zeroArray;\n\t\t} else {\n\t\t\t// Check for non values\n\t\t\tlet vals = d.values;\n\t\t\tvals = vals.map(val => (!isNaN(val) ? val : 0));\n\n\t\t\t// Trim or extend\n\t\t\tif(vals.length > datasetLength) {\n\t\t\t\tvals = vals.slice(0, datasetLength);\n\t\t\t} else {\n\t\t\t\tvals = fillArray(vals, datasetLength - vals.length, 0);\n\t\t\t}\n\t\t}\n\n\t\t// Set labels\n\t\t//\n\n\t\t// Set type\n\t\tif(!d.chartType ) {\n\t\t\tif(!AXIS_DATASET_CHART_TYPES.includes(type)) type === DEFAULT_AXIS_CHART_TYPE;\n\t\t\td.chartType = type;\n\t\t}\n\n\t});\n\n\t// Markers\n\n\t// Regions\n\t// data.yRegions = data.yRegions || [];\n\tif(data.yRegions) {\n\t\tdata.yRegions.map(d => {\n\t\t\tif(d.end < d.start) {\n\t\t\t\t[d.start, d.end] = [d.end, start];\n\t\t\t}\n\t\t});\n\t}\n\n\treturn data;\n}\n\nexport function zeroDataPrep(realData) {\n\tlet datasetLength = realData.labels.length;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\n\tlet zeroData = {\n\t\tlabels: realData.labels,\n\t\tdatasets: realData.datasets.map(d => {\n\t\t\treturn {\n\t\t\t\tname: '',\n\t\t\t\tvalues: zeroArray,\n\t\t\t\tchartType: d.chartType\n\t\t\t}\n\t\t}),\n\t\tyRegions: [\n\t\t\t{\n\t\t\t\tstart: 0,\n\t\t\t\tend: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t],\n\t\tyMarkers: [\n\t\t\t{\n\t\t\t\tvalue: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t]\n\t};\n\n\treturn zeroData;\n}","import { makeSVGGroup } from '../utils/draw';\nimport { xLine, yLine, yMarker, yRegion, datasetBar } from '../utils/draw';\nimport { equilizeNoOfElements } from '../utils/draw-utils';\nimport { Animator, translateHoriLine, translateVertLine, animateRegion } from '../utils/animate';\n\nclass ChartComponent {\n\tconstructor({\n\t\tlayerClass = '',\n\t\tlayerTransform = '',\n\t\tconstants,\n\n\t\tgetData,\n\t\tmakeElements,\n\t\tpostMake,\n\t\tanimateElements\n\t}) {\n\t\tthis.layerTransform = layerTransform;\n\t\tthis.constants = constants;\n\n\t\tthis.makeElements = makeElements;\n\t\tthis.postMake = postMake;\n\t\tthis.getData = getData;\n\n\t\tthis.animateElements = animateElements;\n\n\t\tthis.store = [];\n\n\t\tthis.layerClass = layerClass;\n\t\tthis.layerClass = typeof(this.layerClass) === 'function'\n\t\t\t? this.layerClass() : this.layerClass;\n\n\t\tthis.refresh();\n\t}\n\n\trefresh(data) {\n\t\tthis.data = data || this.getData();\n\t}\n\n\tsetup(parent) {\n\t\tthis.layer = makeSVGGroup(parent, this.layerClass, this.layerTransform);\n\t}\n\n\tmake() {\n\t\tthis.preMake && this.preMake();\n\t\tthis.render(this.data);\n\t\tthis.postMake && this.postMake();\n\t\tthis.oldData = this.data;\n\t}\n\n\trender(data) {\n\t\tthis.store = this.makeElements(data);\n\n\t\tthis.layer.textContent = '';\n\t\tthis.store.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t}\n\n\tupdate(animate = true) {\n\t\tthis.refresh();\n\t\tlet animateElements = []\n\t\tif(animate) {\n\t\t\tanimateElements = this.animateElements(this.data);\n\t\t}\n\t\t// TODO: Can we remove this?\n\t\tsetTimeout(() => {\n\t\t\tthis.make();\n\t\t}, 1400);\n\t\treturn animateElements;\n\t}\n}\n\nlet componentConfigs = {\n\tyAxis: {\n\t\tlayerClass: 'y axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\tyLine(position, data.labels[i], this.constants.width,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos =  newData.positions;\n\t\t\tlet newLabels =  newData.labels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tlabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\txAxis: {\n\t\tlayerClass: 'x axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\txLine(position, data.labels[i], this.constants.height,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos =  newData.positions;\n\t\t\tlet newLabels =  newData.labels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tlabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateVertLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyMarkers: {\n\t\tlayerClass: 'y-markers',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(marker =>\n\t\t\t\tyMarker(marker.position, marker.label, this.constants.width,\n\t\t\t\t\t{pos:'right', mode: 'span', lineType: 'dashed'})\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos =  newData.map(d => d.position);\n\t\t\tlet newLabels =  newData.map(d => d.label);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.position);\n\t\t\tlet oldLabels = this.oldData.map(d => d.label);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tposition: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i]\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyRegions: {\n\t\tlayerClass: 'y-regions',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(region =>\n\t\t\t\tyRegion(region.start, region.end, this.constants.width,\n\t\t\t\t\tregion.label)\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos =  newData.map(d => d.end);\n\t\t\tlet newLabels =  newData.map(d => d.label);\n\t\t\tlet newStarts =  newData.map(d => d.start);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.end);\n\t\t\tlet oldLabels = this.oldData.map(d => d.label);\n\t\t\tlet oldStarts = this.oldData.map(d => d.start);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tstart: oldStarts[i],\n\t\t\t\t\tend: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i]\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((rectGroup, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateRegion(\n\t\t\t\t\trectGroup, newStarts[i], newPos[i], oldPos[i]\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\tbarGraph: {\n\t\tlayerClass: function() { return 'dataset-units dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\treturn data.yPositions.map((y, j) => {\n\t\t\t\t// console.log(data.cumulativeYPos, data.cumulativeYPos[j]);\n\t\t\t\treturn datasetBar(\n\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\ty,\n\t\t\t\t\tc.barWidth,\n\t\t\t\t\tc.color,\n\t\t\t\t\t(c.valuesOverPoints ? (c.stacked ? data.cumulativeYs[j] : data.values[j]) : ''),\n\t\t\t\t\tj,\n\t\t\t\t\ty - (c.stacked ? data.cumulativeYPos[j] : y),\n\t\t\t\t\t{\n\t\t\t\t\t\tzeroLine: c.zeroLine,\n\t\t\t\t\t\tbarsWidth: c.barsWidth,\n\t\t\t\t\t\tminHeight: c.minHeight\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t});\n\t\t},\n\t\tpostMake() {\n\t\t\tif((!this.constants.stacked)) {\n\t\t\t\tthis.layer.setAttribute('transform',\n\t\t\t\t\t`translate(${this.constants.width * this.constants.index}, 0)`);\n\t\t\t}\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t// [this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\t// let newPos =  newData.map(d => d.end);\n\t\t\t// let newLabels =  newData.map(d => d.label);\n\t\t\t// let newStarts =  newData.map(d => d.start);\n\n\t\t\t// let oldPos = this.oldData.map(d => d.end);\n\t\t\t// let oldLabels = this.oldData.map(d => d.label);\n\t\t\t// let oldStarts = this.oldData.map(d => d.start);\n\n\t\t\t// this.render(oldPos.map((pos, i) => {\n\t\t\t// \treturn {\n\t\t\t// \t\tstart: oldStarts[i],\n\t\t\t// \t\tend: oldPos[i],\n\t\t\t// \t\tlabel: newLabels[i]\n\t\t\t// \t}\n\t\t\t// }));\n\n\t\t\t// let animateElements = [];\n\n\t\t\t// this.store.map((rectGroup, i) => {\n\t\t\t// \tanimateElements = animateElements.concat(animateRegion(\n\t\t\t// \t\trectGroup, newStarts[i], newPos[i], oldPos[i]\n\t\t\t// \t));\n\t\t\t// });\n\n\t\t\t// return animateElements;\n\t\t}\n\t},\n\n\tlineGraph: {\n\n\t}\n}\n\nexport function getComponent(name, constants, getData) {\n\tlet config = componentConfigs[name];\n\tObject.assign(config, {\n\t\tconstants: constants,\n\t\tgetData: getData\n\t})\n\treturn new ChartComponent(config);\n}\n","import { floatTwo } from './helpers';\n\nfunction normalize(x) {\n\t// Calculates mantissa and exponent of a number\n\t// Returns normalized number and exponent\n\t// https://stackoverflow.com/q/9383593/6495043\n\n\tif(x===0) {\n\t\treturn [0, 0];\n\t}\n\tif(isNaN(x)) {\n\t\treturn {mantissa: -6755399441055744, exponent: 972};\n\t}\n\tvar sig = x > 0 ? 1 : -1;\n\tif(!isFinite(x)) {\n\t\treturn {mantissa: sig * 4503599627370496, exponent: 972};\n\t}\n\n\tx = Math.abs(x);\n\tvar exp = Math.floor(Math.log10(x));\n\tvar man = x/Math.pow(10, exp);\n\n\treturn [sig * man, exp];\n}\n\nfunction getChartRangeIntervals(max, min=0) {\n\tlet upperBound = Math.ceil(max);\n\tlet lowerBound = Math.floor(min);\n\tlet range = upperBound - lowerBound;\n\n\tlet noOfParts = range;\n\tlet partSize = 1;\n\n\t// To avoid too many partitions\n\tif(range > 5) {\n\t\tif(range % 2 !== 0) {\n\t\t\tupperBound++;\n\t\t\t// Recalc range\n\t\t\trange = upperBound - lowerBound;\n\t\t}\n\t\tnoOfParts = range/2;\n\t\tpartSize = 2;\n\t}\n\n\t// Special case: 1 and 2\n\tif(range <= 2) {\n\t\tnoOfParts = 4;\n\t\tpartSize = range/noOfParts;\n\t}\n\n\t// Special case: 0\n\tif(range === 0) {\n\t\tnoOfParts = 5;\n\t\tpartSize = 1;\n\t}\n\n\tlet intervals = [];\n\tfor(var i = 0; i <= noOfParts; i++){\n\t\tintervals.push(lowerBound + partSize * i);\n\t}\n\treturn intervals;\n}\n\nfunction getChartIntervals(maxValue, minValue=0) {\n\tlet [normalMaxValue, exponent] = normalize(maxValue);\n\tlet normalMinValue = minValue ? minValue/Math.pow(10, exponent): 0;\n\n\t// Allow only 7 significant digits\n\tnormalMaxValue = normalMaxValue.toFixed(6);\n\n\tlet intervals = getChartRangeIntervals(normalMaxValue, normalMinValue);\n\tintervals = intervals.map(value => value * Math.pow(10, exponent));\n\treturn intervals;\n}\n\nexport function calcChartIntervals(values, withMinimum=false) {\n\t//*** Where the magic happens ***\n\n\t// Calculates best-fit y intervals from given values\n\t// and returns the interval array\n\n\tlet maxValue = Math.max(...values);\n\tlet minValue = Math.min(...values);\n\n\t// Exponent to be used for pretty print\n\tlet exponent = 0, intervals = []; // eslint-disable-line no-unused-vars\n\n\tfunction getPositiveFirstIntervals(maxValue, absMinValue) {\n\t\tlet intervals = getChartIntervals(maxValue);\n\n\t\tlet intervalSize = intervals[1] - intervals[0];\n\n\t\t// Then unshift the negative values\n\t\tlet value = 0;\n\t\tfor(var i = 1; value < absMinValue; i++) {\n\t\t\tvalue += intervalSize;\n\t\t\tintervals.unshift((-1) * value);\n\t\t}\n\t\treturn intervals;\n\t}\n\n\t// CASE I: Both non-negative\n\n\tif(maxValue >= 0 && minValue >= 0) {\n\t\texponent = normalize(maxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(maxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(maxValue, minValue);\n\t\t}\n\t}\n\n\t// CASE II: Only minValue negative\n\n\telse if(maxValue > 0 && minValue < 0) {\n\t\t// `withMinimum` irrelevant in this case,\n\t\t// We'll be handling both sides of zero separately\n\t\t// (both starting from zero)\n\t\t// Because ceil() and floor() behave differently\n\t\t// in those two regions\n\n\t\tlet absMinValue = Math.abs(minValue);\n\n\t\tif(maxValue >= absMinValue) {\n\t\t\texponent = normalize(maxValue)[1];\n\t\t\tintervals = getPositiveFirstIntervals(maxValue, absMinValue);\n\t\t} else {\n\t\t\t// Mirror: maxValue => absMinValue, then change sign\n\t\t\texponent = normalize(absMinValue)[1];\n\t\t\tlet posIntervals = getPositiveFirstIntervals(absMinValue, maxValue);\n\t\t\tintervals = posIntervals.map(d => d * (-1));\n\t\t}\n\n\t}\n\n\t// CASE III: Both non-positive\n\n\telse if(maxValue <= 0 && minValue <= 0) {\n\t\t// Mirrored Case I:\n\t\t// Work with positives, then reverse the sign and array\n\n\t\tlet pseudoMaxValue = Math.abs(minValue);\n\t\tlet pseudoMinValue = Math.abs(maxValue);\n\n\t\texponent = normalize(pseudoMaxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue, pseudoMinValue);\n\t\t}\n\n\t\tintervals = intervals.reverse().map(d => d * (-1));\n\t}\n\n\treturn intervals;\n}\n\nexport function getZeroIndex(yPts) {\n\tlet zeroIndex;\n\tlet interval = getIntervalSize(yPts);\n\tif(yPts.indexOf(0) >= 0) {\n\t\t// the range has a given zero\n\t\t// zero-line on the chart\n\t\tzeroIndex = yPts.indexOf(0);\n\t} else if(yPts[0] > 0) {\n\t\t// Minimum value is positive\n\t\t// zero-line is off the chart: below\n\t\tlet min = yPts[0];\n\t\tzeroIndex = (-1) * min / interval;\n\t} else {\n\t\t// Maximum value is negative\n\t\t// zero-line is off the chart: above\n\t\tlet max = yPts[yPts.length - 1];\n\t\tzeroIndex = (-1) * max / interval + (yPts.length - 1);\n\t}\n\treturn zeroIndex;\n}\n\nexport function getRealIntervals(max, noOfIntervals, min = 0, asc = 1) {\n\tlet range = max - min;\n\tlet part = range * 1.0 / noOfIntervals;\n\tlet intervals = [];\n\n\tfor(var i = 0; i <= noOfIntervals; i++) {\n\t\tintervals.push(min + part * i);\n\t}\n\n\treturn asc ? intervals : intervals.reverse();\n}\n\nexport function getIntervalSize(orderedArray) {\n\treturn orderedArray[1] - orderedArray[0];\n}\n\nexport function getValueRange(orderedArray) {\n\treturn orderedArray[orderedArray.length-1] - orderedArray[0];\n}\n\nexport function scale(val, yAxis) {\n\treturn floatTwo(yAxis.zeroLine - val * yAxis.scaleMultiplier)\n}\n\nexport function calcDistribution(values, distributionSize) {\n\t// Assume non-negative values,\n\t// implying distribution minimum at zero\n\n\tlet dataMaxValue = Math.max(...values);\n\n\tlet distributionStep = 1 / (distributionSize - 1);\n\tlet distribution = [];\n\n\tfor(var i = 0; i < distributionSize; i++) {\n\t\tlet checkpoint = dataMaxValue * (distributionStep * i);\n\t\tdistribution.push(checkpoint);\n\t}\n\n\treturn distribution;\n}\n\nexport function getMaxCheckpoint(value, distribution) {\n\treturn distribution.filter(d => d < value).length;\n}\n","// Playing around with dates\n\n// https://stackoverflow.com/a/11252167/6495043\nfunction treatAsUtc(dateStr) {\n\tlet result = new Date(dateStr);\n\tresult.setMinutes(result.getMinutes() - result.getTimezoneOffset());\n\treturn result;\n}\n\nexport function getDdMmYyyy(date) {\n\tlet dd = date.getDate();\n\tlet mm = date.getMonth() + 1; // getMonth() is zero-based\n\treturn [\n\t\t(dd>9 ? '' : '0') + dd,\n\t\t(mm>9 ? '' : '0') + mm,\n\t\tdate.getFullYear()\n\t].join('-');\n}\n\nexport function getWeeksBetween(startDateStr, endDateStr) {\n\treturn Math.ceil(getDaysBetween(startDateStr, endDateStr) / 7);\n}\n\nexport function getDaysBetween(startDateStr, endDateStr) {\n\tlet millisecondsPerDay = 24 * 60 * 60 * 1000;\n\treturn (treatAsUtc(endDateStr) - treatAsUtc(startDateStr)) / millisecondsPerDay;\n}\n\n// mutates\nexport function addDays(date, numberOfDays) {\n\tdate.setDate(date.getDate() + numberOfDays);\n}\n\n// export function getMonthName() {}\n","import '../scss/charts.scss';\n\nimport ScatterChart from './charts/ScatterChart';\nimport MultiAxisChart from './charts/MultiAxisChart';\nimport PercentageChart from './charts/PercentageChart';\nimport PieChart from './charts/PieChart';\nimport Heatmap from './charts/Heatmap';\nimport AxisChart from './charts/AxisChart';\n\n// if (ENV !== 'production') {\n// \t// Enable LiveReload\n// \tdocument.write(\n// \t\t'<script src=\"http://' + (location.host || 'localhost').split(':')[0] +\n// \t\t':35729/livereload.js?snipver=1\"></' + 'script>'\n// \t);\n// }\n\n// If type is bar\n\n\n\n\nconst chartTypes = {\n\tmixed: AxisChart,\n\tmultiaxis: MultiAxisChart,\n\tscatter: ScatterChart,\n\tpercentage: PercentageChart,\n\theatmap: Heatmap,\n\tpie: PieChart\n};\n\nfunction getChartByType(chartType = 'line', options) {\n\tdebugger;\n\tif(chartType === 'line') {\n\t\toptions.type = 'line';\n\t\treturn new AxisChart(options);\n\t} else if (chartType === 'bar') {\n\t\toptions.type = 'bar';\n\t\treturn new AxisChart(options);\n\t}\n\n\tif (!chartTypes[chartType]) {\n\t\tconsole.error(\"Undefined chart type: \" + chartType);\n\t\treturn;\n\t}\n\n\treturn new chartTypes[chartType](options);\n}\n\nexport default class Chart {\n\tconstructor(args) {\n\t\treturn getChartByType(args.type, arguments[0]);\n\t}\n}\n","import { $ } from '../utils/dom';\n\nexport default class SvgTip {\n\tconstructor({\n\t\tparent = null,\n\t\tcolors = []\n\t}) {\n\t\tthis.parent = parent;\n\t\tthis.colors = colors;\n\t\tthis.title_name = '';\n\t\tthis.title_value = '';\n\t\tthis.list_values = [];\n\t\tthis.title_value_first = 0;\n\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\n\t\tthis.top = 0;\n\t\tthis.left = 0;\n\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tthis.make_tooltip();\n\t}\n\n\trefresh() {\n\t\tthis.fill();\n\t\tthis.calc_position();\n\t\t// this.show_tip();\n\t}\n\n\tmake_tooltip() {\n\t\tthis.container = $.create('div', {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'graph-svg-tip comparison',\n\t\t\tinnerHTML: `<span class=\"title\"></span>\n\t\t\t\t<ul class=\"data-point-list\"></ul>\n\t\t\t\t<div class=\"svg-pointer\"></div>`\n\t\t});\n\t\tthis.hide_tip();\n\n\t\tthis.title = this.container.querySelector('.title');\n\t\tthis.data_point_list = this.container.querySelector('.data-point-list');\n\n\t\tthis.parent.addEventListener('mouseleave', () => {\n\t\t\tthis.hide_tip();\n\t\t});\n\t}\n\n\tfill() {\n\t\tlet title;\n\t\tif(this.title_value_first) {\n\t\t\ttitle = `<strong>${this.title_value}</strong>${this.title_name}`;\n\t\t} else {\n\t\t\ttitle = `${this.title_name}<strong>${this.title_value}</strong>`;\n\t\t}\n\t\tthis.title.innerHTML = title;\n\t\tthis.data_point_list.innerHTML = '';\n\n\t\tthis.list_values.map((set, i) => {\n\t\t\tconst color = this.colors[i] || 'black';\n\n\t\t\tlet li = $.create('li', {\n\t\t\t\tstyles: {\n\t\t\t\t\t'border-top': `3px solid ${color}`\n\t\t\t\t},\n\t\t\t\tinnerHTML: `<strong style=\"display: block;\">${ set.value === 0 || set.value ? set.value : '' }</strong>\n\t\t\t\t\t${set.title ? set.title : '' }`\n\t\t\t});\n\n\t\t\tthis.data_point_list.appendChild(li);\n\t\t});\n\t}\n\n\tcalc_position() {\n\t\tlet width = this.container.offsetWidth;\n\n\t\tthis.top = this.y - this.container.offsetHeight;\n\t\tthis.left = this.x - width/2;\n\t\tlet max_left = this.parent.offsetWidth - width;\n\n\t\tlet pointer = this.container.querySelector('.svg-pointer');\n\n\t\tif(this.left < 0) {\n\t\t\tpointer.style.left = `calc(50% - ${-1 * this.left}px)`;\n\t\t\tthis.left = 0;\n\t\t} else if(this.left > max_left) {\n\t\t\tlet delta = this.left - max_left;\n\t\t\tlet pointer_offset = `calc(50% + ${delta}px)`;\n\t\t\tpointer.style.left = pointer_offset;\n\n\t\t\tthis.left = max_left;\n\t\t} else {\n\t\t\tpointer.style.left = `50%`;\n\t\t}\n\t}\n\n\tset_values(x, y, title_name = '', title_value = '', list_values = [], title_value_first = 0) {\n\t\tthis.title_name = title_name;\n\t\tthis.title_value = title_value;\n\t\tthis.list_values = list_values;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.title_value_first = title_value_first;\n\t\tthis.refresh();\n\t}\n\n\thide_tip() {\n\t\tthis.container.style.top = '0px';\n\t\tthis.container.style.left = '0px';\n\t\tthis.container.style.opacity = '0';\n\t}\n\n\tshow_tip() {\n\t\tthis.container.style.top = this.top + 'px';\n\t\tthis.container.style.left = this.left + 'px';\n\t\tthis.container.style.opacity = '1';\n\t}\n}\n","import SvgTip from '../objects/SvgTip';\nimport { $, isElementInViewport, getElementContentWidth } from '../utils/dom';\nimport { makeSVGContainer, makeSVGDefs, makeSVGGroup } from '../utils/draw';\nimport { getStringWidth } from '../utils/helpers';\nimport { getColor, DEFAULT_COLORS } from '../utils/colors';\nimport { getDifferentChart } from '../config';\nimport { runSMILAnimation } from '../utils/animation';\n\nexport default class BaseChart {\n\tconstructor({\n\t\theight = 240,\n\n\t\ttitle = '',\n\t\tsubtitle = '',\n\t\tcolors = [],\n\n\t\tisNavigable = 0,\n\t\tshowLegend = 1,\n\n\t\ttype = '',\n\n\t\tparent,\n\t\tdata\n\t}) {\n\t\tthis.rawChartArgs = arguments[0];\n\n\t\tthis.parent = typeof parent === 'string' ? document.querySelector(parent) : parent;\n\t\tthis.title = title;\n\t\tthis.subtitle = subtitle;\n\t\tthis.argHeight = height;\n\t\tthis.type = type;\n\n\t\tthis.isNavigable = isNavigable;\n\t\tif(this.isNavigable) {\n\t\t\tthis.currentIndex = 0;\n\t\t}\n\n\t\tthis.realData = this.prepareData(data);\n\t\tthis.data = this.prepareFirstData(this.realData);\n\t\tthis.colors = [];\n\t\tthis.config = {};\n\t\tthis.state = {};\n\t\tthis.options = {};\n\n\t\tthis.configure(arguments[0]);\n\t}\n\n\tconfigure(args) {\n\t\tthis.setColors();\n\t\tthis.config = {\n\t\t\tshowTooltip: 1, // calculate\n\t\t\tshowLegend: 1,\n\t\t\tisNavigable: 0,\n\t\t\tanimate: 1\n\t\t};\n\n\t\tthis.setMargins();\n\n\t\t// Bind window events\n\t\twindow.addEventListener('resize', () => this.draw());\n\t\twindow.addEventListener('orientationchange', () => this.draw());\n\t}\n\n\tsetColors() {\n\t\tlet args = this.rawChartArgs;\n\n\t\t// Needs structure as per only labels/datasets, from config\n\t\tconst list = args.type === 'percentage' || args.type === 'pie'\n\t\t\t? args.data.labels\n\t\t\t: args.data.datasets;\n\n\t\tif(!args.colors || (list && args.colors.length < list.length)) {\n\t\t\tthis.colors = DEFAULT_COLORS;\n\t\t} else {\n\t\t\tthis.colors = args.colors;\n\t\t}\n\n\t\tthis.colors = this.colors.map(color => getColor(color));\n\t}\n\n\tsetMargins() {\n\t\t// TODO: think for all\n\t\tlet height = this.argHeight;\n\t\tthis.baseHeight = height;\n\t\tthis.height = height - 40; // change\n\t\tthis.translateY = 20;\n\n\t\t// Horizontal margins\n\t\tthis.translateXLeft = 60;\n\t\tthis.translateXRight = 40;\n\t}\n\n\tvalidate(){\n\t\tlet args = this.rawChartArgs;\n\t\t// Now yo have the args, set this stuff only after validating\n\t\tif(!this.parent) {\n\t\t\tconsole.error(\"No parent element to render on was provided.\");\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tsetup() {\n\t\tif(this.validate()) {\n\t\t\tthis._setup();\n\t\t}\n\t}\n\n\t_setup() {\n\t\tthis.makeContainer();\n\t\tthis.makeTooltip(); // without binding\n\n\t\tthis.draw(true);\n\t}\n\n\tinitComponents() {}\n\n\tsetupComponents() {\n\t\tthis.components = new Map();\n\t}\n\n\tmakeContainer() {\n\t\tthis.container = $.create('div', {\n\t\t\tclassName: 'chart-container',\n\t\t\tinnerHTML: `<h6 class=\"title\">${this.title}</h6>\n\t\t\t\t<h6 class=\"sub-title uppercase\">${this.subtitle}</h6>\n\t\t\t\t<div class=\"frappe-chart graphics\"></div>\n\t\t\t\t<div class=\"graph-stats-container\"></div>`\n\t\t});\n\n\t\t// Chart needs a dedicated parent element\n\t\tthis.parent.innerHTML = '';\n\t\tthis.parent.appendChild(this.container);\n\n\t\tthis.chartWrapper = this.container.querySelector('.frappe-chart');\n\t\tthis.statsWrapper = this.container.querySelector('.graph-stats-container');\n\t}\n\n\tmakeTooltip() {\n\t\tthis.tip = new SvgTip({\n\t\t\tparent: this.chartWrapper,\n\t\t\tcolors: this.colors\n\t\t});\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {}\n\n\tdraw(init=false) {\n\t\tthis.calcWidth();\n\t\tthis.makeChartArea();\n\n\t\tthis.calc();\n\t\tthis.initComponents(); // Only depend on the drawArea made in makeChartArea\n\n\t\tthis.setupComponents();\n\n\t\tthis.components.forEach(c => c.setup(this.drawArea)); // or c.build()\n\t\tthis.components.forEach(c => c.make()); // or c.build()\n\t\tthis.renderLegend();\n\n\t\tthis.setupNavigation(init);\n\n\t\t// TODO: remove timeout and decrease post animate time in chart component\n\t\tif(init) {\n\t\t\tthis.data = this.realData;\n\t\t\tsetTimeout(() => {this.update();}, 1000);\n\t\t}\n\t}\n\n\tcalcWidth() {\n\t\tlet outerAnnotationsWidth = 0;\n\t\t// let charWidth = 8;\n\t\t// this.specificValues.map(val => {\n\t\t// \tlet strWidth = getStringWidth((val.title + \"\"), charWidth);\n\t\t// \tif(strWidth > outerAnnotationsWidth) {\n\t\t// \t\touterAnnotationsWidth = strWidth - 40;\n\t\t// \t}\n\t\t// });\n\t\tthis.baseWidth = getElementContentWidth(this.parent) - outerAnnotationsWidth;\n\t\tthis.width = this.baseWidth - (this.translateXLeft + this.translateXRight);\n\t}\n\n\tupdate(data=this.data) {\n\t\tthis.data = this.prepareData(data);\n\t\tthis.calc(); // builds state\n\t\tthis.render();\n\t}\n\n\tprepareData() {}\n\n\tcalc() {} // builds state\n\n\trender(components=this.components, animate=true) {\n\t\t// Can decouple to this.refreshComponents() first to save animation timeout\n\t\tlet elementsToAnimate = [];\n\t\tcomponents.forEach(c => {\n\t\t\telementsToAnimate = elementsToAnimate.concat(c.update(animate));\n\t\t});\n\t\tif(elementsToAnimate.length > 0) {\n\t\t\trunSMILAnimation(this.chartWrapper, this.svg, elementsToAnimate);\n\t\t}\n\n\t\t// TODO: rebind new units\n\t\t// if(this.isNavigable) {\n\t\t// \tthis.bind_units(units_array);\n\t\t// }\n\t}\n\n\tmakeChartArea() {\n\t\tif(this.svg) {\n\t\t\tthis.chartWrapper.removeChild(this.svg);\n\t\t}\n\t\tthis.svg = makeSVGContainer(\n\t\t\tthis.chartWrapper,\n\t\t\t'chart',\n\t\t\tthis.baseWidth,\n\t\t\tthis.baseHeight\n\t\t);\n\t\tthis.svgDefs = makeSVGDefs(this.svg);\n\n\t\t// I WISH !!!\n\t\t// this.svg = makeSVGGroup(\n\t\t// \tsvgContainer,\n\t\t// \t'flipped-coord-system',\n\t\t// \t`translate(0, ${this.baseHeight}) scale(1, -1)`\n\t\t// );\n\n\t\tthis.drawArea = makeSVGGroup(\n\t\t\tthis.svg,\n\t\t\tthis.type + '-chart',\n\t\t\t`translate(${this.translateXLeft}, ${this.translateY})`\n\t\t);\n\t}\n\n\trenderLegend() {}\n\n\tsetupNavigation(init=false) {\n\t\tif(this.isNavigable) return;\n\n\t\tthis.makeOverlay();\n\n\t\tif(init) {\n\t\t\tthis.bindOverlay();\n\n\t\t\tdocument.addEventListener('keydown', (e) => {\n\t\t\t\tif(isElementInViewport(this.chartWrapper)) {\n\t\t\t\t\te = e || window.event;\n\n\t\t\t\t\tif (e.keyCode == '37') {\n\t\t\t\t\t\tthis.onLeftArrow();\n\t\t\t\t\t} else if (e.keyCode == '39') {\n\t\t\t\t\t\tthis.onRightArrow();\n\t\t\t\t\t} else if (e.keyCode == '38') {\n\t\t\t\t\t\tthis.onUpArrow();\n\t\t\t\t\t} else if (e.keyCode == '40') {\n\t\t\t\t\t\tthis.onDownArrow();\n\t\t\t\t\t} else if (e.keyCode == '13') {\n\t\t\t\t\t\tthis.onEnterKey();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tmakeOverlay() {}\n\tbindOverlay() {}\n\tbind_units() {}\n\n\tonLeftArrow() {}\n\tonRightArrow() {}\n\tonUpArrow() {}\n\tonDownArrow() {}\n\tonEnterKey() {}\n\n\t// ????????????\n\t// Update the data here, then do relevant updates\n\t// and drawing in child classes by overriding\n\t// The Child chart will only know what a particular update means\n\t// and what components are affected,\n\t// BaseChart shouldn't be doing the animating\n\n\tgetDataPoint(index = 0) {}\n\tsetCurrentDataPoint(point) {}\n\n\tupdateDataset(dataset, index) {}\n\taddDataset(dataset, index) {}\n\tremoveDataset(index = 0) {}\n\n\tupdateDatasets(datasets) {}\n\n\tupdateDataPoint(dataPoint, index = 0) {}\n\taddDataPoint(dataPoint, index = 0) {}\n\tremoveDataPoint(index = 0) {}\n\n\tgetDifferentChart(type) {\n\t\treturn getDifferentChart(type, this.type, this.rawChartArgs);\n\t}\n}\n","export const Y_AXIS_MARGIN = 60;\n\nexport const MIN_BAR_PERCENT_HEIGHT = 0.01;\nexport const DEFAULT_AXIS_CHART_TYPE = 'line';\nexport const AXIS_DATASET_CHART_TYPES = ['line', 'bar'];\nexport const BAR_CHART_SPACE_RATIO = 0.5;","import BaseChart from './BaseChart';\nimport { dataPrep, zeroDataPrep } from './axis-chart-utils';\nimport { Y_AXIS_MARGIN } from '../utils/constants';\nimport { getComponent } from '../objects/ChartComponents';\nimport { AxisChartRenderer } from '../utils/draw';\nimport { getOffset, fire } from '../utils/dom';\nimport { equilizeNoOfElements } from '../utils/draw-utils';\nimport { Animator, translateHoriLine } from '../utils/animate';\nimport { runSMILAnimation } from '../utils/animation';\nimport { getRealIntervals, calcChartIntervals, getIntervalSize, getValueRange, getZeroIndex, scale } from '../utils/intervals';\nimport { floatTwo, fillArray, bindChange } from '../utils/helpers';\nimport { MIN_BAR_PERCENT_HEIGHT, DEFAULT_AXIS_CHART_TYPE, BAR_CHART_SPACE_RATIO } from '../utils/constants';\n\nexport default class AxisChart extends BaseChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\tthis.isSeries = args.isSeries;\n\t\tthis.valuesOverPoints = args.valuesOverPoints;\n\t\tthis.formatTooltipY = args.formatTooltipY;\n\t\tthis.formatTooltipX = args.formatTooltipX;\n\t\tthis.barOptions = args.barOptions || {};\n\t\tthis.lineOptions = args.lineOptions || {};\n\t\tthis.type = args.type || 'line';\n\n\t\tthis.xAxisMode = args.xAxisMode || 'span';\n\t\tthis.yAxisMode = args.yAxisMode || 'span';\n\n\t\tthis.zeroLine = this.height;\n\t\t// this.setTrivialState();\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {3\n\t\tsuper.configure();\n\n\t\t// TODO: set in options and use\n\n\t\tthis.config.xAxisMode = args.xAxisMode;\n\t\tthis.config.yAxisMode = args.yAxisMode;\n\t}\n\n\tsetMargins() {\n\t\tsuper.setMargins();\n\t\tthis.translateXLeft = Y_AXIS_MARGIN;\n\t\tthis.translateXRight = Y_AXIS_MARGIN;\n\t}\n\n\tprepareData(data=this.data) {\n\t\treturn dataPrep(data, this.type);\n\t}\n\n\tprepareFirstData(data=this.data) {\n\t\treturn zeroDataPrep(data);\n\t}\n\n\tcalc() {\n\t\tthis.calcXPositions();\n\t\tthis.calcYAxisParameters(this.getAllYValues(), this.type === 'line');\n\t}\n\n\tcalcXPositions(s=this.state) {\n\t\tlet labels = this.data.labels;\n\t\ts.datasetLength = labels.length;\n\n\t\ts.unitWidth = this.width/(s.datasetLength);\n\t\t// Default, as per bar, and mixed. Only line will be a special case\n\t\ts.xOffset = s.unitWidth/2;\n\n\t\ts.xAxis = {\n\t\t\tlabels: labels,\n\t\t\tpositions: labels.map((d, i) =>\n\t\t\t\tfloatTwo(s.xOffset + i * s.unitWidth)\n\t\t\t)\n\t\t};\n\t}\n\n\tcalcYAxisParameters(dataValues, withMinimum = 'false') {\n\t\tconst yPts = calcChartIntervals(dataValues, withMinimum);\n\t\tconst scaleMultiplier = this.height / getValueRange(yPts);\n\t\tconst intervalHeight = getIntervalSize(yPts) * scaleMultiplier;\n\t\tconst zeroLine = this.height - (getZeroIndex(yPts) * intervalHeight);\n\n\t\tthis.state.yAxis = {\n\t\t\tlabels: yPts,\n\t\t\tpositions: yPts.map(d => zeroLine - d * scaleMultiplier),\n\t\t\tscaleMultiplier: scaleMultiplier,\n\t\t\tzeroLine: zeroLine,\n\t\t}\n\n\t\tthis.calcYUnits();\n\t\tthis.calcYExtremes();\n\t\tthis.calcYRegions();\n\t}\n\n\tcalcYUnits() {\n\t\tlet s = this.state;\n\t\tlet scaleAll = values => values.map(val => scale(val, s.yAxis));\n\n\t\ts.datasets = this.data.datasets.map((d, i) => {\n\t\t\tlet values = d.values;\n\t\t\tlet cumulativeYs = d.cumulativeYs || [];\n\t\t\treturn {\n\t\t\t\tname: d.name,\n\t\t\t\tindex: i,\n\t\t\t\tchartType: d.chartType,\n\n\t\t\t\tvalues: values,\n\t\t\t\tyPositions: scaleAll(values),\n\n\t\t\t\tcumulativeYs: cumulativeYs,\n\t\t\t\tcumulativeYPos: scaleAll(cumulativeYs),\n\t\t\t};\n\t\t});\n\t}\n\n\tcalcYExtremes() {\n\t\tlet s = this.state;\n\t\tif(this.barOptions && this.barOptions.stacked) {\n\t\t\ts.yExtremes = s.datasets[s.datasets.length - 1].cumulativeYPos;\n\t\t\treturn;\n\t\t}\n\t\ts.yExtremes = new Array(s.datasetLength).fill(9999);\n\t\ts.datasets.map((d, i) => {\n\t\t\td.yPositions.map((pos, j) => {\n\t\t\t\tif(pos < s.yExtremes[j]) {\n\t\t\t\t\ts.yExtremes[j] = pos;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tcalcYRegions() {\n\t\tlet s = this.state;\n\t\tif(this.data.yMarkers) {\n\t\t\tthis.state.yMarkers = this.data.yMarkers.map(d => {\n\t\t\t\td.position = scale(d.value, s.yAxis);\n\t\t\t\td.label += ': ' + d.value;\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t\tif(this.data.yRegions) {\n\t\t\tthis.state.yRegions = this.data.yRegions.map(d => {\n\t\t\t\td.start = scale(d.start, s.yAxis);\n\t\t\t\td.end = scale(d.end, s.yAxis);\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t}\n\n\tgetAllYValues() {\n\t\t// TODO: yMarkers, regions, sums, every Y value ever\n\t\tlet key = 'values';\n\n\t\tif(this.barOptions && this.barOptions.stacked) {\n\t\t\tkey = 'cumulativeYs';\n\t\t\tlet cumulative = new Array(this.state.datasetLength).fill(0);\n\t\t\tthis.data.datasets.map((d, i) => {\n\t\t\t\tlet values = this.data.datasets[i].values;\n\t\t\t\td[key] = cumulative = cumulative.map((c, i) => c + values[i]);\n\t\t\t});\n\t\t}\n\n\t\treturn [].concat(...this.data.datasets.map(d => d[key]));\n\t}\n\n\tinitComponents() {\n\t\tlet s = this.state;\n\t\t// console.log('this.state', Object.assign({}, this.state));\n\t\t// console.log('this.state', this.state);\n\t\tthis.componentConfigs = [\n\t\t\t[\n\t\t\t\t'yAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.yAxisMode,\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t}\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'xAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.xAxisMode,\n\t\t\t\t\theight: this.height,\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t}\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'yRegions',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t}\n\t\t\t],\n\t\t];\n\n\t\tthis.componentConfigs.map(args => {\n\t\t\targs.push(\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state[args[0]];\n\t\t\t\t}.bind(this)\n\t\t\t);\n\t\t});\n\n\t\tlet barDatasets = this.state.datasets.filter(d => d.chartType === 'bar');\n\t\tlet lineDatasets = this.state.datasets.filter(d => d.chartType === 'line');\n\n\t\t// console.log('barDatasets', barDatasets, this.state.datasets);\n\n\t\t// Bars\n\t\tlet spaceRatio = this.barOptions.spaceRatio || BAR_CHART_SPACE_RATIO;\n\t\tlet barsWidth = s.unitWidth * (1 - spaceRatio);\n\t\tlet barWidth = barsWidth/(this.barOptions.stacked ? 1 : barDatasets.length);\n\n\t\tlet barsConfigs = barDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'barGraph',\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.valuesOverPoints,\n\t\t\t\t\tminHeight: this.height * MIN_BAR_PERCENT_HEIGHT,\n\t\t\t\t\tbarsWidth: barsWidth,\n\t\t\t\t\tbarWidth: barWidth,\n\t\t\t\t\tzeroLine: s.yAxis.zeroLine\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: s.xAxis.positions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\t\t\t\t\t\tcumulativeYPos: d.cumulativeYPos,\n\n\t\t\t\t\t\tvalues: d.values,\n\t\t\t\t\t\tcumulativeYs: d.cumulativeYs\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet markerConfigs = [\n\t\t\t[\n\t\t\t\t'yMarkers',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t}\n\t\t\t]\n\t\t];\n\n\t\tmarkerConfigs.map(args => {\n\t\t\targs.push(\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state[args[0]];\n\t\t\t\t}.bind(this)\n\t\t\t);\n\t\t});\n\n\t\tthis.componentConfigs = this.componentConfigs.concat(barsConfigs, markerConfigs);\n\t}\n\n\tsetupComponents() {\n\t\tlet optionals = ['yMarkers', 'yRegions'];\n\t\tthis.components = new Map(this.componentConfigs\n\t\t\t.filter(args => !optionals.includes(args[0]) || this.state[args[0]] || args[0] === 'barGraph')\n\t\t\t.map(args => {\n\t\t\t\treturn [args[0], getComponent(...args)];\n\t\t\t}));\n\t}\n\n\tgetChartComponents() {\n\t\tlet dataUnitsComponents = []\n\t\t// this.state is not defined at this stage\n\t\tthis.data.datasets.forEach((d, index) => {\n\t\t\tif(d.chartType === 'line') {\n\t\t\t\tdataUnitsComponents.push(this.getPathComponent(d, index));\n\t\t\t}\n\n\t\t\tlet renderer = this.unitRenderers[d.chartType];\n\t\t\tdataUnitsComponents.push(this.getDataUnitComponent(\n\t\t\t\tindex, renderer\n\t\t\t));\n\t\t});\n\t\treturn dataUnitsComponents;\n\t}\n\n\tgetDataUnitComponent(index, unitRenderer) {\n\t\treturn new ChartComponent({\n\t\t\tlayerClass: 'dataset-units dataset-' + index,\n\t\t\tmakeElements: () => {\n\t\t\t\t// yPositions, xPostions, color, valuesOverPoints,\n\t\t\t\tlet d = this.data.datasets[index];\n\n\t\t\t\treturn d.positions.map((y, j) => {\n\t\t\t\t\treturn unitRenderer.draw(\n\t\t\t\t\t\tthis.state.xAxis.positions[j],\n\t\t\t\t\t\ty,\n\t\t\t\t\t\tthis.colors[index],\n\t\t\t\t\t\t(this.valuesOverPoints ? (this.barOptions &&\n\t\t\t\t\t\t\tthis.barOptions.stacked ? d.cumulativeYs[j] : d.values[j]) : ''),\n\t\t\t\t\t\tj,\n\t\t\t\t\t\ty - (d.cumulativePositions ? d.cumulativePositions[j] : y)\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t},\n\t\t\tpostMake: function() {\n\t\t\t\tlet translate_layer = () => {\n\t\t\t\t\tthis.layer.setAttribute('transform', `translate(${unitRenderer.consts.width * index}, 0)`);\n\t\t\t\t}\n\n\t\t\t\t// let d = this.data.datasets[index];\n\n\t\t\t\tif(this.meta.type === 'bar' && (!this.meta.barOptions\n\t\t\t\t\t|| !this.meta.barOptions.stacked)) {\n\n\t\t\t\t\ttranslate_layer();\n\t\t\t\t}\n\t\t\t},\n\t\t\tanimate: (svgUnits) => {\n\t\t\t\t// have been updated in axis render;\n\t\t\t\tlet newX = this.state.xAxis.positions;\n\t\t\t\tlet newY = this.data.datasets[index].positions;\n\n\t\t\t\tlet lastUnit = svgUnits[svgUnits.length - 1];\n\t\t\t\tlet parentNode = lastUnit.parentNode;\n\n\t\t\t\tif(this.oldState.xExtra > 0) {\n\t\t\t\t\tfor(var i = 0; i<this.oldState.xExtra; i++) {\n\t\t\t\t\t\tlet unit = lastUnit.cloneNode(true);\n\t\t\t\t\t\tparentNode.appendChild(unit);\n\t\t\t\t\t\tsvgUnits.push(unit);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsvgUnits.map((unit, i) => {\n\t\t\t\t\tif(newX[i] === undefined || newY[i] === undefined) return;\n\t\t\t\t\tthis.elementsToAnimate.push(unitRenderer.animate(\n\t\t\t\t\t\tunit, // unit, with info to replace where it came from in the data\n\t\t\t\t\t\tnewX[i],\n\t\t\t\t\t\tnewY[i],\n\t\t\t\t\t\tindex,\n\t\t\t\t\t\tthis.data.datasets.length\n\t\t\t\t\t));\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tgetPathComponent(d, index) {\n\t\treturn new ChartComponent({\n\t\t\tlayerClass: 'path dataset-path',\n\t\t\tsetData: () => {},\n\t\t\tmakeElements: () => {\n\t\t\t\tlet d = this.data.datasets[index];\n\t\t\t\tlet color = this.colors[index];\n\n\t\t\t\treturn getPaths(\n\t\t\t\t\td.positions,\n\t\t\t\t\tthis.state.xAxis.positions,\n\t\t\t\t\tcolor,\n\t\t\t\t\tthis.config.heatline,\n\t\t\t\t\tthis.config.regionFill\n\t\t\t\t);\n\t\t\t},\n\t\t\tanimate: (paths) => {\n\t\t\t\tlet newX = this.state.xAxis.positions;\n\t\t\t\tlet newY = this.data.datasets[index].positions;\n\n\t\t\t\tlet oldX = this.oldState.xAxis.positions;\n\t\t\t\tlet oldY = this.oldState.datasets[index].positions;\n\n\n\t\t\t\tlet parentNode = paths[0].parentNode;\n\n\t\t\t\t[oldX, newX] = equilizeNoOfElements(oldX, newX);\n\t\t\t\t[oldY, newY] = equilizeNoOfElements(oldY, newY);\n\n\t\t\t\tif(this.oldState.xExtra > 0) {\n\t\t\t\t\tpaths = getPaths(\n\t\t\t\t\t\toldY, oldX, this.colors[index],\n\t\t\t\t\t\tthis.config.heatline,\n\t\t\t\t\t\tthis.config.regionFill\n\t\t\t\t\t);\n\t\t\t\t\tparentNode.textContent = '';\n\t\t\t\t\tpaths.map(path => parentNode.appendChild(path));\n\t\t\t\t}\n\n\t\t\t\tconst newPointsList = newY.map((y, i) => (newX[i] + ',' + y));\n\t\t\t\tthis.elementsToAnimate = this.elementsToAnimate\n\t\t\t\t\t.concat(this.renderer.animatepath(paths, newPointsList.join(\"L\")));\n\t\t\t}\n\t\t});\n\t}\n\n\tbindTooltip() {\n\t\t// TODO: could be in tooltip itself, as it is a given functionality for its parent\n\t\tthis.chartWrapper.addEventListener('mousemove', (e) => {\n\t\t\tlet o = getOffset(this.chartWrapper);\n\t\t\tlet relX = e.pageX - o.left - this.translateXLeft;\n\t\t\tlet relY = e.pageY - o.top - this.translateY;\n\n\t\t\tif(relY < this.height + this.translateY * 2) {\n\t\t\t\tthis.mapTooltipXPosition(relX);\n\t\t\t} else {\n\t\t\t\tthis.tip.hide_tip();\n\t\t\t}\n\t\t});\n\t}\n\n\tmapTooltipXPosition(relX) {\n\t\tlet s = this.state;\n\t\tif(!s.yExtremes) return;\n\n\t\tlet titles = s.xAxis.labels;\n\t\tif(this.formatTooltipX && this.formatTooltipX(titles[0])) {\n\t\t\ttitles = titles.map(d=>this.formatTooltipX(d));\n\t\t}\n\n\t\tlet formatY = this.formatTooltipY && this.formatTooltipY(this.y[0].values[0]);\n\n\t\tfor(var i=s.datasetLength - 1; i >= 0 ; i--) {\n\t\t\tlet xVal = s.xAxis.positions[i];\n\t\t\t// let delta = i === 0 ? s.unitWidth : xVal - s.xAxis.positions[i-1];\n\t\t\tif(relX > xVal - s.unitWidth/2) {\n\t\t\t\tlet x = xVal + this.translateXLeft;\n\t\t\t\tlet y = s.yExtremes[i] + this.translateY;\n\n\t\t\t\tlet values = this.data.datasets.map((set, j) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttitle: set.title,\n\t\t\t\t\t\tvalue: formatY ? this.formatTooltipY(set.values[i]) : set.values[i],\n\t\t\t\t\t\tcolor: this.colors[j],\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\tthis.tip.set_values(x, y, titles[i], '', values);\n\t\t\t\tthis.tip.show_tip();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetDataPoint(index=this.current_index) {\n\t\t// check for length\n\t\tlet data_point = {\n\t\t\tindex: index\n\t\t};\n\t\tlet y = this.y[0];\n\t\t['svg_units', 'yUnitPositions', 'values'].map(key => {\n\t\t\tlet data_key = key.slice(0, key.length-1);\n\t\t\tdata_point[data_key] = y[key][index];\n\t\t});\n\t\tdata_point.label = this.xAxis.labels[index];\n\t\treturn data_point;\n\t}\n\n\tsetCurrentDataPoint(index) {\n\t\tindex = parseInt(index);\n\t\tif(index < 0) index = 0;\n\t\tif(index >= this.xAxis.labels.length) index = this.xAxis.labels.length - 1;\n\t\tif(index === this.current_index) return;\n\t\tthis.current_index = index;\n\t\t$.fire(this.parent, \"data-select\", this.getDataPoint());\n\t}\n\n\t// API\n\n\taddDataPoint(label, datasetValues, index=this.state.datasetLength) {\n\t\tsuper.addDataPoint(label, datasetValues, index);\n\t\t// console.log(label, datasetValues, this.data.labels);\n\t\tthis.data.labels.splice(index, 0, label);\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\td.values.splice(index, 0, datasetValues[i]);\n\t\t});\n\t\t// console.log(this.data);\n\t\tthis.update(this.data);\n\t}\n\n\tremoveDataPoint(index = this.state.datasetLength-1) {\n\t\tsuper.removeDataPoint(index);\n\t\tthis.data.labels.splice(index, 1);\n\t\tthis.data.datasets.map(d => {\n\t\t\td.values.splice(index, 1);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\t// updateData() {\n\t// \t// animate if same no. of datasets,\n\t// \t// else return new chart\n\n\t// \t//\n\t// }\n}\n\n\n// keep a binding at the end of chart\n\n","import LineChart from './LineChart';\n\nexport default class ScatterChart extends LineChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\n\t\tthis.type = 'scatter';\n\n\t\tif(!args.dotRadius) {\n\t\t\tthis.dotRadius = 8;\n\t\t} else {\n\t\t\tthis.dotRadius = args.dotRadius;\n\t\t}\n\n\t\tthis.setup();\n\t}\n\n\tsetup_values() {\n\t\tsuper.setup_values();\n\t\tthis.unit_args = {\n\t\t\ttype: 'dot',\n\t\t\targs: { radius: this.dotRadius }\n\t\t};\n\t}\n\n\tmake_paths() {}\n\tmake_path() {}\n}\n","import AxisChart from './AxisChart';\n// import { ChartComponent } from '../objects/ChartComponents';\nimport { makeSVGGroup, makePath, makeGradient } from '../utils/draw';\nimport { equilizeNoOfElements } from '../utils/draw-utils';\n\nexport default class LineChart extends AxisChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\tthis.type = 'line';\n\n\t\tif(Object.getPrototypeOf(this) !== LineChart.prototype) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.config.xAxisMode = args.xAxisMode || 'span';\n\t\tthis.config.yAxisMode = args.yAxisMode || 'span';\n\n\t\tthis.config.dotRadius = args.dotRadius || 4;\n\n\t\tthis.config.heatline = args.heatline || 0;\n\t\tthis.config.regionFill = args.regionFill || 0;\n\t\tthis.config.showDots = args.showDots || 1;\n\t}\n\n\tconfigUnits() {\n\t\tthis.unitArgs = {\n\t\t\ttype: 'dot',\n\t\t\targs: { radius: this.config.dotRadius }\n\t\t};\n\t}\n\n\t// temp commented\n\tsetUnitWidthAndXOffset() {\n\t\tthis.state.unitWidth = this.width/(this.state.datasetLength - 1);\n\t\tthis.state.xOffset = 0;\n\t}\n\n}\n","import AxisChart from './AxisChart';\nimport { Y_AXIS_MARGIN } from '../utils/constants';\n// import { ChartComponent } from '../objects/ChartComponents';\nimport { floatTwo } from '../utils/helpers';\n\nexport default class MultiAxisChart extends AxisChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\t// this.unitType = args.unitType || 'line';\n\t\t// this.setup();\n\t}\n\n\tpreSetup() {\n\t\tthis.type = 'multiaxis';\n\t}\n\n\tsetMargins() {\n\t\tsuper.setMargins();\n\t\tlet noOfLeftAxes = this.data.datasets.filter(d => d.axisPosition === 'left').length;\n\t\tthis.translateXLeft = (noOfLeftAxes) * Y_AXIS_MARGIN || Y_AXIS_MARGIN;\n\t\tthis.translateXRight = (this.data.datasets.length - noOfLeftAxes) * Y_AXIS_MARGIN || Y_AXIS_MARGIN;\n\t}\n\n\tprepareYAxis() { }\n\n\tprepareData(data) {\n\t\tsuper.prepareData(data);\n\t\tlet sets = this.state.datasets;\n\t\t// let axesLeft = sets.filter(d => d.axisPosition === 'left');\n\t\t// let axesRight = sets.filter(d => d.axisPosition === 'right');\n\t\t// let axesNone = sets.filter(d => !d.axisPosition ||\n\t\t// \t!['left', 'right'].includes(d.axisPosition));\n\n\t\tlet leftCount = 0, rightCount = 0;\n\n\t\tsets.forEach((d, i) => {\n\t\t\td.yAxis = {\n\t\t\t\tposition: d.axisPosition,\n\t\t\t\tindex: d.axisPosition === 'left' ? leftCount++ : rightCount++\n\t\t\t};\n\t\t});\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.config.xAxisMode = args.xAxisMode || 'tick';\n\t\tthis.config.yAxisMode = args.yAxisMode || 'span';\n\t}\n\n\t// setUnitWidthAndXOffset() {\n\t// \tthis.state.unitWidth = this.width/(this.state.datasetLength);\n\t// \tthis.state.xOffset = this.state.unitWidth/2;\n\t// }\n\n\tconfigUnits() {\n\t\tthis.unitArgs = {\n\t\t\ttype: 'bar',\n\t\t\targs: {\n\t\t\t\tspaceWidth: this.state.unitWidth/2,\n\t\t\t}\n\t\t};\n\t}\n\n\tsetYAxis() {\n\t\tthis.state.datasets.map(d => {\n\t\t\tthis.calcYAxisParameters(d.yAxis, d.values, this.unitType === 'line');\n\t\t});\n\t}\n\n\tcalcYUnits() {\n\t\tthis.state.datasets.map(d => {\n\t\t\td.positions = d.values.map(val => floatTwo(d.yAxis.zeroLine - val * d.yAxis.scaleMultiplier));\n\t\t});\n\t}\n\n\t// TODO: function doesn't exist, handle with components\n\trenderConstants() {\n\t\tthis.state.datasets.map(d => {\n\t\t\tlet guidePos = d.yAxis.position === 'left'\n\t\t\t\t? -1 * d.yAxis.index * Y_AXIS_MARGIN\n\t\t\t\t: this.width + d.yAxis.index * Y_AXIS_MARGIN;\n\t\t\tthis.renderer.xLine(guidePos, '', {\n\t\t\t\tpos:'top',\n\t\t\t\tmode: 'span',\n\t\t\t\tstroke: this.colors[i],\n\t\t\t\tclassName: 'y-axis-guide'\n\t\t\t})\n\t\t});\n\t}\n\n\tgetYAxesComponents() {\n\t\treturn this.data.datasets.map((e, i) => {\n\t\t\treturn new ChartComponent({\n\t\t\t\tlayerClass: 'y axis y-axis-' + i,\n\t\t\t\tmake: () => {\n\t\t\t\t\tlet yAxis = this.state.datasets[i].yAxis;\n\t\t\t\t\tthis.renderer.setZeroline(yAxis.zeroline);\n\t\t\t\t\tlet options = {\n\t\t\t\t\t\tpos: yAxis.position,\n\t\t\t\t\t\tmode: 'tick',\n\t\t\t\t\t\toffset: yAxis.index * Y_AXIS_MARGIN,\n\t\t\t\t\t\tstroke: this.colors[i]\n\t\t\t\t\t};\n\n\t\t\t\t\treturn yAxis.positions.map((position, j) =>\n\t\t\t\t\t\tthis.renderer.yLine(position, yAxis.labels[j], options)\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tanimate: () => {}\n\t\t\t});\n\t\t});\n\t}\n\n\t// TODO remove renderer zeroline from above and below\n\tgetChartComponents() {\n\t\treturn this.data.datasets.map((d, index) => {\n\t\t\treturn new ChartComponent({\n\t\t\t\tlayerClass: 'dataset-units dataset-' + index,\n\t\t\t\tmake: () => {\n\t\t\t\t\tlet d = this.state.datasets[index];\n\t\t\t\t\tlet unitType = this.unitArgs;\n\n\t\t\t\t\t// the only difference, should be tied to datasets or default\n\t\t\t\t\tthis.renderer.setZeroline(d.yAxis.zeroLine);\n\n\t\t\t\t\treturn d.positions.map((y, j) => {\n\t\t\t\t\t\treturn this.renderer[unitType.type](\n\t\t\t\t\t\t\tthis.state.xAxisPositions[j],\n\t\t\t\t\t\t\ty,\n\t\t\t\t\t\t\tunitType.args,\n\t\t\t\t\t\t\tthis.colors[index],\n\t\t\t\t\t\t\tj,\n\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\tthis.state.datasetLength\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tanimate: (svgUnits) => {\n\t\t\t\t\tlet d = this.state.datasets[index];\n\t\t\t\t\tlet unitType = this.unitArgs.type;\n\n\t\t\t\t\t// have been updated in axis render;\n\t\t\t\t\tlet newX = this.state.xAxisPositions;\n\t\t\t\t\tlet newY = this.state.datasets[index].positions;\n\n\t\t\t\t\tlet lastUnit = svgUnits[svgUnits.length - 1];\n\t\t\t\t\tlet parentNode = lastUnit.parentNode;\n\n\t\t\t\t\tif(this.oldState.xExtra > 0) {\n\t\t\t\t\t\tfor(var i = 0; i<this.oldState.xExtra; i++) {\n\t\t\t\t\t\t\tlet unit = lastUnit.cloneNode(true);\n\t\t\t\t\t\t\tparentNode.appendChild(unit);\n\t\t\t\t\t\t\tsvgUnits.push(unit);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.renderer.setZeroline(d.yAxis.zeroLine);\n\n\t\t\t\t\tsvgUnits.map((unit, i) => {\n\t\t\t\t\t\tif(newX[i] === undefined || newY[i] === undefined) return;\n\t\t\t\t\t\tthis.elementsToAnimate.push(this.renderer['animate' + unitType](\n\t\t\t\t\t\t\tunit, // unit, with info to replace where it came from in the data\n\t\t\t\t\t\t\tnewX[i],\n\t\t\t\t\t\t\tnewY[i],\n\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\tthis.state.noOfDatasets\n\t\t\t\t\t\t));\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { $, getOffset } from '../utils/dom';\n\nexport default class PercentageChart extends BaseChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\tthis.type = 'percentage';\n\n\t\tthis.max_slices = 10;\n\t\tthis.max_legend_points = 6;\n\n\t\tthis.setup();\n\t}\n\n\tmakeChartArea() {\n\t\tthis.chartWrapper.className += ' ' + 'graph-focus-margin';\n\t\tthis.chartWrapper.style.marginTop = '45px';\n\n\t\tthis.statsWrapper.className += ' ' + 'graph-focus-margin';\n\t\tthis.statsWrapper.style.marginBottom = '30px';\n\t\tthis.statsWrapper.style.paddingTop = '0px';\n\n\t\tthis.chartDiv = $.create('div', {\n\t\t\tclassName: 'div',\n\t\t\tinside: this.chartWrapper\n\t\t});\n\n\t\tthis.chart = $.create('div', {\n\t\t\tclassName: 'progress-chart',\n\t\t\tinside: this.chartDiv\n\t\t});\n\t}\n\n\tsetupLayers() {\n\t\tthis.percentageBar = $.create('div', {\n\t\t\tclassName: 'progress',\n\t\t\tinside: this.chart\n\t\t});\n\t}\n\n\tsetup_values() {\n\t\tthis.slice_totals = [];\n\t\tlet all_totals = this.data.labels.map((d, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, d];\n\t\t}).filter(d => { return d[0] > 0; }); // keep only positive results\n\n\t\tlet totals = all_totals;\n\n\t\tif(all_totals.length > this.max_slices) {\n\t\t\tall_totals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = all_totals.slice(0, this.max_slices-1);\n\t\t\tlet others = all_totals.slice(this.max_slices-1);\n\n\t\t\tlet sum_of_others = 0;\n\t\t\tothers.map(d => {sum_of_others += d[0];});\n\n\t\t\ttotals.push([sum_of_others, 'Rest']);\n\n\t\t\tthis.colors[this.max_slices-1] = 'grey';\n\t\t}\n\n\t\tthis.labels = [];\n\t\ttotals.map(d => {\n\t\t\tthis.slice_totals.push(d[0]);\n\t\t\tthis.labels.push(d[1]);\n\t\t});\n\n\t\tthis.legend_totals = this.slice_totals.slice(0, this.max_legend_points);\n\t}\n\n\trenderComponents() {\n\t\tthis.grand_total = this.slice_totals.reduce((a, b) => a + b, 0);\n\t\tthis.slices = [];\n\t\tthis.slice_totals.map((total, i) => {\n\t\t\tlet slice = $.create('div', {\n\t\t\t\tclassName: `progress-bar`,\n\t\t\t\tinside: this.percentageBar,\n\t\t\t\tstyles: {\n\t\t\t\t\tbackground: this.colors[i],\n\t\t\t\t\twidth: total*100/this.grand_total + \"%\"\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.slices.push(slice);\n\t\t});\n\t}\n\n\tcalc() {}\n\n\tbindTooltip() {\n\t\tthis.slices.map((slice, i) => {\n\t\t\tslice.addEventListener('mouseenter', () => {\n\t\t\t\tlet g_off = getOffset(this.chartWrapper), p_off = getOffset(slice);\n\n\t\t\t\tlet x = p_off.left - g_off.left + slice.offsetWidth/2;\n\t\t\t\tlet y = p_off.top - g_off.top - 6;\n\t\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length>0\n\t\t\t\t\t? this.formatted_labels[i] : this.labels[i]) + ': ';\n\t\t\t\tlet percent = (this.slice_totals[i]*100/this.grand_total).toFixed(1);\n\n\t\t\t\tthis.tip.set_values(x, y, title, percent + \"%\");\n\t\t\t\tthis.tip.show_tip();\n\t\t\t});\n\t\t});\n\t}\n\n\trenderLegend() {\n\t\tlet x_values = this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t? this.formatted_labels : this.labels;\n\t\tthis.legend_totals.map((d, i) => {\n\t\t\tif(d) {\n\t\t\t\tlet stats = $.create('div', {\n\t\t\t\t\tclassName: 'stats',\n\t\t\t\t\tinside: this.statsWrapper\n\t\t\t\t});\n\t\t\t\tstats.innerHTML = `<span class=\"indicator\">\n\t\t\t\t\t<i style=\"background: ${this.colors[i]}\"></i>\n\t\t\t\t\t<span class=\"text-muted\">${x_values[i]}:</span>\n\t\t\t\t\t${d}\n\t\t\t\t</span>`;\n\t\t\t}\n\t\t});\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { $, getOffset } from '../utils/dom';\nimport { makePath } from '../utils/draw';\nimport { lightenDarkenColor } from '../utils/colors';\nimport { runSMILAnimation, transform } from '../utils/animation';\nconst ANGLE_RATIO = Math.PI / 180;\nconst FULL_ANGLE = 360;\n\nexport default class PieChart extends BaseChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\tthis.type = 'pie';\n\t\tthis.elements_to_animate = null;\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.max_slices = 10;\n\t\tthis.max_legend_points = 6;\n\t\tthis.isAnimate = false;\n\t\tthis.startAngle = args.startAngle || 0;\n\t\tthis.clockWise = args.clockWise || false;\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\t\tthis.setup();\n\t}\n\tsetup_values() {\n\t\tthis.centerX = this.width / 2;\n\t\tthis.centerY = this.height / 2;\n\t\tthis.radius = (this.height > this.width ? this.centerX : this.centerY);\n\t\tthis.slice_totals = [];\n\t\tlet all_totals = this.data.labels.map((d, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, d];\n\t\t}).filter(d => { return d[0] > 0; }); // keep only positive results\n\n\t\tlet totals = all_totals;\n\n\t\tif(all_totals.length > this.max_slices) {\n\t\t\tall_totals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = all_totals.slice(0, this.max_slices-1);\n\t\t\tlet others = all_totals.slice(this.max_slices-1);\n\n\t\t\tlet sum_of_others = 0;\n\t\t\tothers.map(d => {sum_of_others += d[0];});\n\n\t\t\ttotals.push([sum_of_others, 'Rest']);\n\n\t\t\tthis.colors[this.max_slices-1] = 'grey';\n\t\t}\n\n\t\tthis.labels = [];\n\t\ttotals.map(d => {\n\t\t\tthis.slice_totals.push(d[0]);\n\t\t\tthis.labels.push(d[1]);\n\t\t});\n\n\t\tthis.legend_totals = this.slice_totals.slice(0, this.max_legend_points);\n\t}\n\n\tstatic getPositionByAngle(angle,radius){\n\t\treturn {\n\t\t\tx:Math.sin(angle * ANGLE_RATIO) * radius,\n\t\t\ty:Math.cos(angle * ANGLE_RATIO) * radius,\n\t\t};\n\t}\n\tmakeArcPath(startPosition,endPosition){\n\t\tconst{centerX,centerY,radius,clockWise} = this;\n\t\treturn `M${centerX} ${centerY} L${centerX+startPosition.x} ${centerY+startPosition.y} A ${radius} ${radius} 0 0 ${clockWise ? 1 : 0} ${centerX+endPosition.x} ${centerY+endPosition.y} z`;\n\t}\n\trenderComponents(init){\n\t\tconst{radius,clockWise} = this;\n\t\tthis.grand_total = this.slice_totals.reduce((a, b) => a + b, 0);\n\t\tconst prevSlicesProperties = this.slicesProperties || [];\n\t\tthis.slices = [];\n\t\tthis.elements_to_animate = [];\n\t\tthis.slicesProperties = [];\n\t\tlet curAngle = 180 - this.startAngle;\n\t\tthis.slice_totals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / this.grand_total) * FULL_ANGLE;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = PieChart.getPositionByAngle(startAngle,radius);\n\t\t\tconst endPosition = PieChart.getPositionByAngle(endAngle,radius);\n\t\t\tconst prevProperty = init && prevSlicesProperties[i];\n\t\t\tlet curStart,curEnd;\n\t\t\tif(init){\n\t\t\t\tcurStart = prevProperty?prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty? prevProperty.endPosition : startPosition;\n\t\t\t}else{\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath = this.makeArcPath(curStart,curEnd);\n\t\t\tlet slice = makePath(curPath, 'pie-path', 'none', this.colors[i]);\n\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\tthis.drawArea.appendChild(slice);\n\n\t\t\tthis.slices.push(slice);\n\t\t\tthis.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: this.grand_total,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle:diffAngle\n\t\t\t});\n\t\t\tif(init){\n\t\t\t\tthis.elements_to_animate.push([{unit: slice, array: this.slices, index: this.slices.length - 1},\n\t\t\t\t\t{d:this.makeArcPath(startPosition,endPosition)},\n\t\t\t\t\t650, \"easein\",null,{\n\t\t\t\t\t\td:curPath\n\t\t\t\t\t}]);\n\t\t\t}\n\n\t\t});\n\t\tif(init){\n\t\t\trunSMILAnimation(this.chartWrapper, this.svg, this.elements_to_animate);\n\t\t}\n\t}\n\n\tcalTranslateByAngle(property){\n\t\tconst{radius,hoverRadio} = this;\n\t\tconst position = PieChart.getPositionByAngle(property.startAngle+(property.angle / 2),radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\thoverSlice(path,i,flag,e){\n\t\tif(!path) return;\n\t\tconst color = this.colors[i];\n\t\tif(flag){\n\t\t\ttransform(path,this.calTranslateByAngle(this.slicesProperties[i]));\n\t\t\tpath.style.fill = lightenDarkenColor(color,50);\n\t\t\tlet g_off = getOffset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length>0\n\t\t\t\t? this.formatted_labels[i] : this.labels[i]) + ': ';\n\t\t\tlet percent = (this.slice_totals[i]*100/this.grand_total).toFixed(1);\n\t\t\tthis.tip.set_values(x, y, title, percent + \"%\");\n\t\t\tthis.tip.show_tip();\n\t\t}else{\n\t\t\ttransform(path,'translate3d(0,0,0)');\n\t\t\tthis.tip.hide_tip();\n\t\t\tpath.style.fill = color;\n\t\t}\n\t}\n\n\tmouseMove(e){\n\t\tconst target = e.target;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevAcitve = this.curActiveSlice;\n\t\tfor(let i = 0; i < this.slices.length; i++){\n\t\t\tif(target === this.slices[i]){\n\t\t\t\tthis.hoverSlice(prevAcitve,prevIndex,false);\n\t\t\t\tthis.curActiveSlice = target;\n\t\t\t\tthis.curActiveSliceIndex = i;\n\t\t\t\tthis.hoverSlice(target,i,true,e);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tmouseLeave(){\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\n\t}\n\tbindTooltip() {\n\t\tthis.drawArea.addEventListener('mousemove',this.mouseMove);\n\t\tthis.drawArea.addEventListener('mouseleave',this.mouseLeave);\n\t}\n\n\trenderLegend() {\n\t\tlet x_values = this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t? this.formatted_labels : this.labels;\n\t\tthis.legend_totals.map((d, i) => {\n\t\t\tconst color = this.colors[i];\n\n\t\t\tif(d) {\n\t\t\t\tlet stats = $.create('div', {\n\t\t\t\t\tclassName: 'stats',\n\t\t\t\t\tinside: this.statsWrapper\n\t\t\t\t});\n\t\t\t\tstats.innerHTML = `<span class=\"indicator\">\n\t\t\t\t\t<i style=\"background-color:${color};\"></i>\n\t\t\t\t\t<span class=\"text-muted\">${x_values[i]}:</span>\n\t\t\t\t\t${d}\n\t\t\t\t</span>`;\n\t\t\t}\n\t\t});\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { makeSVGGroup, makeHeatSquare, makeText } from '../utils/draw';\nimport { addDays, getDdMmYyyy, getWeeksBetween } from '../utils/date-utils';\nimport { calcDistribution, getMaxCheckpoint } from '../utils/intervals';\nimport { isValidColor } from '../utils/colors';\n\nexport default class Heatmap extends BaseChart {\n\tconstructor({\n\t\tstart = '',\n\t\tdomain = '',\n\t\tsubdomain = '',\n\t\tdata = {},\n\t\tdiscrete_domains = 0,\n\t\tcount_label = '',\n\t\tlegend_colors = []\n\t}) {\n\t\tsuper(arguments[0]);\n\n\t\tthis.type = 'heatmap';\n\n\t\tthis.domain = domain;\n\t\tthis.subdomain = subdomain;\n\t\tthis.data = data;\n\t\tthis.discrete_domains = discrete_domains;\n\t\tthis.count_label = count_label;\n\n\t\tlet today = new Date();\n\t\tthis.start = start || addDays(today, 365);\n\n\t\tlegend_colors = legend_colors.slice(0, 5);\n\t\tthis.legend_colors = this.validate_colors(legend_colors)\n\t\t\t? legend_colors\n\t\t\t: ['#ebedf0', '#c6e48b', '#7bc96f', '#239a3b', '#196127'];\n\n\t\t// Fixed 5-color theme,\n\t\t// More colors are difficult to parse visually\n\t\tthis.distribution_size = 5;\n\n\t\tthis.translateX = 0;\n\t\t// this.setup();\n\t}\n\n\tvalidate_colors(colors) {\n\t\tif(colors.length < 5) return 0;\n\n\t\tlet valid = 1;\n\t\tcolors.forEach(function(string) {\n\t\t\tif(!isValidColor(string)) {\n\t\t\t\tvalid = 0;\n\t\t\t\tconsole.warn('\"' + string + '\" is not a valid color.');\n\t\t\t}\n\t\t}, this);\n\n\t\treturn valid;\n\t}\n\n\tconfigure() {\n\t\tsuper.configure();\n\t\tthis.today = new Date();\n\n\t\tif(!this.start) {\n\t\t\tthis.start = new Date();\n\t\t\tthis.start.setFullYear( this.start.getFullYear() - 1 );\n\t\t}\n\t\tthis.first_week_start = new Date(this.start.toDateString());\n\t\tthis.last_week_start = new Date(this.today.toDateString());\n\t\tif(this.first_week_start.getDay() !== 7) {\n\t\t\taddDays(this.first_week_start, (-1) * this.first_week_start.getDay());\n\t\t}\n\t\tif(this.last_week_start.getDay() !== 7) {\n\t\t\taddDays(this.last_week_start, (-1) * this.last_week_start.getDay());\n\t\t}\n\t\tthis.no_of_cols = getWeeksBetween(this.first_week_start + '', this.last_week_start + '') + 1;\n\t}\n\n\tcalcWidth() {\n\t\tthis.baseWidth = (this.no_of_cols + 3) * 12 ;\n\n\t\tif(this.discrete_domains) {\n\t\t\tthis.baseWidth += (12 * 12);\n\t\t}\n\t}\n\n\tsetupLayers() {\n\t\tthis.domain_label_group = this.makeLayer(\n\t\t\t'domain-label-group chart-label');\n\n\t\tthis.data_groups = this.makeLayer(\n\t\t\t'data-groups',\n\t\t\t`translate(0, 20)`\n\t\t);\n\t}\n\n\tsetup_values() {\n\t\tthis.domain_label_group.textContent = '';\n\t\tthis.data_groups.textContent = '';\n\n\t\tlet data_values = Object.keys(this.data).map(key => this.data[key]);\n\t\tthis.distribution = calcDistribution(data_values, this.distribution_size);\n\n\t\tthis.month_names = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n\t\t\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n\t\t];\n\n\t\tthis.render_all_weeks_and_store_x_values(this.no_of_cols);\n\t}\n\n\trender_all_weeks_and_store_x_values(no_of_weeks) {\n\t\tlet current_week_sunday = new Date(this.first_week_start);\n\t\tthis.week_col = 0;\n\t\tthis.current_month = current_week_sunday.getMonth();\n\n\t\tthis.months = [this.current_month + ''];\n\t\tthis.month_weeks = {}, this.month_start_points = [];\n\t\tthis.month_weeks[this.current_month] = 0;\n\t\tthis.month_start_points.push(13);\n\n\t\tfor(var i = 0; i < no_of_weeks; i++) {\n\t\t\tlet data_group, month_change = 0;\n\t\t\tlet day = new Date(current_week_sunday);\n\n\t\t\t[data_group, month_change] = this.get_week_squares_group(day, this.week_col);\n\t\t\tthis.data_groups.appendChild(data_group);\n\t\t\tthis.week_col += 1 + parseInt(this.discrete_domains && month_change);\n\t\t\tthis.month_weeks[this.current_month]++;\n\t\t\tif(month_change) {\n\t\t\t\tthis.current_month = (this.current_month + 1) % 12;\n\t\t\t\tthis.months.push(this.current_month + '');\n\t\t\t\tthis.month_weeks[this.current_month] = 1;\n\t\t\t}\n\t\t\taddDays(current_week_sunday, 7);\n\t\t}\n\t\tthis.render_month_labels();\n\t}\n\n\tget_week_squares_group(current_date, index) {\n\t\tconst no_of_weekdays = 7;\n\t\tconst square_side = 10;\n\t\tconst cell_padding = 2;\n\t\tconst step = 1;\n\t\tconst today_time = this.today.getTime();\n\n\t\tlet month_change = 0;\n\t\tlet week_col_change = 0;\n\n\t\tlet data_group = makeSVGGroup(this.data_groups, 'data-group');\n\n\t\tfor(var y = 0, i = 0; i < no_of_weekdays; i += step, y += (square_side + cell_padding)) {\n\t\t\tlet data_value = 0;\n\t\t\tlet color_index = 0;\n\n\t\t\tlet current_timestamp = current_date.getTime()/1000;\n\t\t\tlet timestamp = Math.floor(current_timestamp - (current_timestamp % 86400)).toFixed(1);\n\n\t\t\tif(this.data[timestamp]) {\n\t\t\t\tdata_value = this.data[timestamp];\n\t\t\t}\n\n\t\t\tif(this.data[Math.round(timestamp)]) {\n\t\t\t\tdata_value = this.data[Math.round(timestamp)];\n\t\t\t}\n\n\t\t\tif(data_value) {\n\t\t\t\tcolor_index = getMaxCheckpoint(data_value, this.distribution);\n\t\t\t}\n\n\t\t\tlet x = 13 + (index + week_col_change) * 12;\n\n\t\t\tlet dataAttr = {\n\t\t\t\t'data-date': getDdMmYyyy(current_date),\n\t\t\t\t'data-value': data_value,\n\t\t\t\t'data-day': current_date.getDay()\n\t\t\t};\n\t\t\tlet heatSquare = makeHeatSquare('day', x, y, square_side,\n\t\t\t\tthis.legend_colors[color_index], dataAttr);\n\n\t\t\tdata_group.appendChild(heatSquare);\n\n\t\t\tlet next_date = new Date(current_date);\n\t\t\taddDays(next_date, 1);\n\t\t\tif(next_date.getTime() > today_time) break;\n\n\n\t\t\tif(next_date.getMonth() - current_date.getMonth()) {\n\t\t\t\tmonth_change = 1;\n\t\t\t\tif(this.discrete_domains) {\n\t\t\t\t\tweek_col_change = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.month_start_points.push(13 + (index + week_col_change) * 12);\n\t\t\t}\n\t\t\tcurrent_date = next_date;\n\t\t}\n\n\t\treturn [data_group, month_change];\n\t}\n\n\trender_month_labels() {\n\t\t// this.first_month_label = 1;\n\t\t// if (this.first_week_start.getDate() > 8) {\n\t\t// \tthis.first_month_label = 0;\n\t\t// }\n\t\t// this.last_month_label = 1;\n\n\t\t// let first_month = this.months.shift();\n\t\t// let first_month_start = this.month_start_points.shift();\n\t\t// render first month if\n\n\t\t// let last_month = this.months.pop();\n\t\t// let last_month_start = this.month_start_points.pop();\n\t\t// render last month if\n\n\t\tthis.months.shift();\n\t\tthis.month_start_points.shift();\n\t\tthis.months.pop();\n\t\tthis.month_start_points.pop();\n\n\t\tthis.month_start_points.map((start, i) => {\n\t\t\tlet month_name =  this.month_names[this.months[i]].substring(0, 3);\n\t\t\tlet text = makeText('y-value-text', start+12, 10, month_name);\n\t\t\tthis.domain_label_group.appendChild(text);\n\t\t});\n\t}\n\n\trenderComponents() {\n\t\tArray.prototype.slice.call(\n\t\t\tthis.container.querySelectorAll('.graph-stats-container, .sub-title, .title')\n\t\t).map(d => {\n\t\t\td.style.display = 'None';\n\t\t});\n\t\tthis.chartWrapper.style.marginTop = '0px';\n\t\tthis.chartWrapper.style.paddingTop = '0px';\n\t}\n\n\tbindTooltip() {\n\t\tArray.prototype.slice.call(\n\t\t\tdocument.querySelectorAll(\".data-group .day\")\n\t\t).map(el => {\n\t\t\tel.addEventListener('mouseenter', (e) => {\n\t\t\t\tlet count = e.target.getAttribute('data-value');\n\t\t\t\tlet date_parts = e.target.getAttribute('data-date').split('-');\n\n\t\t\t\tlet month = this.month_names[parseInt(date_parts[1])-1].substring(0, 3);\n\n\t\t\t\tlet g_off = this.chartWrapper.getBoundingClientRect(), p_off = e.target.getBoundingClientRect();\n\n\t\t\t\tlet width = parseInt(e.target.getAttribute('width'));\n\t\t\t\tlet x = p_off.left - g_off.left + (width+2)/2;\n\t\t\t\tlet y = p_off.top - g_off.top - (width+2)/2;\n\t\t\t\tlet value = count + ' ' + this.count_label;\n\t\t\t\tlet name = ' on ' + month + ' ' + date_parts[0] + ', ' + date_parts[2];\n\n\t\t\t\tthis.tip.set_values(x, y, name, value, [], 1);\n\t\t\t\tthis.tip.show_tip();\n\t\t\t});\n\t\t});\n\t}\n\n\tupdate(data) {\n\t\tthis.data = data;\n\t\tthis.setup_values();\n\t\tthis.bindTooltip();\n\t}\n}\n"],"names":["expr","con","document","querySelector","getOffset","element","rect","getBoundingClientRect","top","documentElement","scrollTop","body","left","scrollLeft","isElementInViewport","el","bottom","window","innerHeight","clientHeight","right","innerWidth","clientWidth","getElementContentWidth","styles","getComputedStyle","padding","parseFloat","paddingLeft","paddingRight","floatTwo","d","toFixed","fillArray","array","count","start","length","fillerArray","Array","Math","abs","fill","concat","getStringWidth","string","charWidth","getBarHeightAndYAttr","yTop","zeroLine","height","y","equilizeNoOfElements","array1","array2","extra_count","translate","unit","oldCoord","newCoord","duration","transform","join","STD_EASING","translateVertLine","xLine","newX","oldX","MARKER_LINE_ANIM_DUR","translateHoriLine","yLine","newY","oldY","animateRegion","rectGroup","newY1","newY2","oldY2","newHeight","childNodes","stroke-dasharray","getAttribute","$","createSVG","tag","o","createElementNS","i","val","appendChild","ref","parentNode","insertBefore","keys","map","style","prop","setAttribute","makeSVGContainer","parent","className","width","makeSVGDefs","svgContainer","makeSVGGroup","wrapInSVGGroup","elements","g","forEach","e","makePath","pathStr","makeHeatSquare","x","size","data","args","key","makeText","content","FONT_SIZE","makeVertLine","label","y1","y2","options","stroke","BASE_LINE_COLOR","l","text","LABEL_MARGIN","line","makeHoriLine","x1","x2","lineType","pos","offset","mode","AXIS_TICK_LENGTH","yMarker","labelSvg","yRegion","region","datasetBar","color","index","meta","barsWidth","minHeight","limitColor","r","lightenDarkenColor","amt","col","getColor","usePound","slice","num","parseInt","b","toString","isValidColor","test","getDifferentChart","type","current_type","ALL_CHART_TYPES","includes","error","COMPATIBLE_CHARTS","useColor","COLOR_COMPATIBLE_CHARTS","Chart","title","colors","undefined","animateSVGElement","props","dur","easingType","oldValues","animElement","cloneNode","newElement","attributeName","animateElement","currentValue","value","animAttr","EASING","webkitTransform","msTransform","mozTransform","oTransform","animateSVG","newElements","animElements","push","replaceChild","animSvg","runSMILAnimation","svgElement","elementsToAnimate","animSvgElement","removeChild","REPLACE_ALL_NEW_DUR","dataPrep","labels","datasetLength","datasets","zeroArray","values","vals","isNaN","chartType","AXIS_DATASET_CHART_TYPES","yRegions","end","zeroDataPrep","realData","getComponent","name","constants","getData","config","componentConfigs","assign","ChartComponent","normalize","mantissa","exponent","sig","isFinite","exp","floor","log10","pow","getChartRangeIntervals","max","min","upperBound","ceil","lowerBound","range","noOfParts","partSize","intervals","getChartIntervals","maxValue","minValue","normalMaxValue","normalMinValue","calcChartIntervals","getPositiveFirstIntervals","absMinValue","intervalSize","unshift","withMinimum","pseudoMaxValue","pseudoMinValue","reverse","getZeroIndex","yPts","interval","getIntervalSize","indexOf","orderedArray","getValueRange","scale","yAxis","scaleMultiplier","calcDistribution","distributionSize","dataMaxValue","distributionStep","distribution","checkpoint","getMaxCheckpoint","filter","treatAsUtc","dateStr","result","Date","setMinutes","getMinutes","getTimezoneOffset","getDdMmYyyy","date","dd","getDate","mm","getMonth","getFullYear","getWeeksBetween","startDateStr","endDateStr","getDaysBetween","addDays","numberOfDays","setDate","getChartByType","AxisChart","chartTypes","create","createElement","SvgTip","title_name","title_value","list_values","title_value_first","setup","make_tooltip","calc_position","container","this","hide_tip","data_point_list","addEventListener","innerHTML","set","_this2","li","offsetWidth","offsetHeight","max_left","pointer","pointer_offset","refresh","opacity","PRESET_COLOR_MAP","state","refreshState","totalHeight","totalWidth","unitWidth","xAxisMode","yAxisMode","bar","noOfDatasets","avgUnitWidth","dot","cx","cy","paths","pathComponents","animPath","regStartPt","regEndPt","animRegion","DEFAULT_COLORS","BaseChart","subtitle","isNavigable","showLegend","rawChartArgs","arguments","argHeight","currentIndex","prepareData","prepareFirstData","configure","setColors","setMargins","_this","draw","list","baseHeight","translateY","translateXLeft","translateXRight","validate","_setup","makeContainer","makeTooltip","components","Map","chartWrapper","statsWrapper","tip","bindTooltip","init","calcWidth","makeChartArea","calc","initComponents","setupComponents","c","drawArea","make","renderLegend","setupNavigation","update","baseWidth","render","animate","svg","svgDefs","makeOverlay","bindOverlay","_this3","event","keyCode","onLeftArrow","onRightArrow","onUpArrow","onDownArrow","onEnterKey","point","dataset","dataPoint","layerClass","layerTransform","makeElements","postMake","animateElements","store","layer","preMake","oldData","textContent","positions","position","newData","newPos","newLabels","oldPos","oldLabels","_this4","marker","_this5","_this6","newStarts","oldStarts","yPositions","j","xPositions","barWidth","valuesOverPoints","stacked","cumulativeYs","cumulativeYPos","isSeries","formatTooltipY","formatTooltipX","barOptions","lineOptions","calcXPositions","calcYAxisParameters","getAllYValues","s","xOffset","xAxis","dataValues","intervalHeight","calcYUnits","calcYExtremes","calcYRegions","scaleAll","yExtremes","yMarkers","cumulative","bind","barDatasets","spaceRatio","barsConfigs","markerConfigs","optionals","dataUnitsComponents","getPathComponent","renderer","unitRenderers","getDataUnitComponent","unitRenderer","cumulativePositions","consts","svgUnits","lastUnit","oldState","xExtra","_this8","getPaths","heatline","regionFill","path","newPointsList","animatepath","_this9","relX","pageX","pageY","mapTooltipXPosition","titles","_this10","formatY","xVal","set_values","show_tip","current_index","data_point","data_key","fire","getDataPoint","datasetValues","splice","ScatterChart","dotRadius","unit_args","radius","Object","getPrototypeOf","LineChart","prototype","showDots","unitArgs","MultiAxisChart","noOfLeftAxes","axisPosition","leftCount","rightCount","unitType","guidePos","setZeroline","zeroline","xAxisPositions","PercentageChart","max_slices","max_legend_points","marginTop","marginBottom","paddingTop","chartDiv","chart","percentageBar","slice_totals","all_totals","total","totals","sort","a","sum_of_others","legend_totals","grand_total","reduce","slices","g_off","p_off","formatted_labels","percent","x_values","ANGLE_RATIO","PI","PieChart","elements_to_animate","hoverRadio","isAnimate","startAngle","clockWise","mouseMove","mouseLeave","centerX","centerY","startPosition","endPosition","prevSlicesProperties","slicesProperties","curAngle","originDiffAngle","diffAngle","endAngle","getPositionByAngle","prevProperty","curStart","curEnd","curPath","makeArcPath","transition","property","angle","flag","calTranslateByAngle","target","prevIndex","curActiveSliceIndex","prevAcitve","curActiveSlice","hoverSlice","sin","cos","domain","subdomain","discrete_domains","count_label","legend_colors","today","validate_colors","distribution_size","translateX","valid","warn","setFullYear","first_week_start","toDateString","last_week_start","getDay","no_of_cols","domain_label_group","makeLayer","data_groups","data_values","month_names","render_all_weeks_and_store_x_values","no_of_weeks","current_week_sunday","week_col","current_month","months","month_weeks","month_start_points","data_group","month_change","day","get_week_squares_group","render_month_labels","current_date","today_time","getTime","week_col_change","square_side","data_value","color_index","current_timestamp","timestamp","round","dataAttr","heatSquare","next_date","shift","pop","substring","call","querySelectorAll","display","date_parts","split","month","setup_values","Heatmap"],"mappings":"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"}