{"version":3,"file":"frappe-charts.min.js","sources":["../../../src/js/utils/dom.js","../../../src/js/utils/helpers.js","../../../src/js/utils/draw-utils.js","../../../src/js/utils/draw.js","../../../src/js/utils/colors.js","../../../src/js/utils/animate.js","../../../src/js/utils/animation.js","../../../src/js/objects/ChartComponents.js","../../../src/js/utils/date-utils.js","../../../src/js/utils/intervals.js","../../../src/js/utils/axis-chart-utils.js","../../../src/js/chart.js","../../../src/js/objects/SvgTip.js","../../../src/js/utils/constants.js","../../../src/js/charts/BaseChart.js","../../../src/js/charts/AggregationChart.js","../../../src/js/charts/PercentageChart.js","../../../src/js/charts/PieChart.js","../../../src/js/charts/Heatmap.js","../../../src/js/charts/AxisChart.js"],"sourcesContent":["export function $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function findNodeIndex(node)\n{\n\tvar i = 0;\n\twhile (node.previousSibling) {\n\t\tnode = node.previousSibling;\n\t\ti++;\n\t}\n\treturn i;\n}\n\n$.create = (tag, o) => {\n\tvar element = document.createElement(tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (i in element ) {\n\t\t\telement[i] = val;\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(i, val);\n\t\t}\n\t}\n\n\treturn element;\n};\n\nexport function getOffset(element) {\n\tlet rect = element.getBoundingClientRect();\n\treturn {\n\t\t// https://stackoverflow.com/a/7436602/6495043\n\t\t// rect.top varies with scroll, so we add whatever has been\n\t\t// scrolled to it to get absolute distance from actual page top\n\t\ttop: rect.top + (document.documentElement.scrollTop || document.body.scrollTop),\n\t\tleft: rect.left + (document.documentElement.scrollLeft || document.body.scrollLeft)\n\t};\n}\n\nexport function isElementInViewport(el) {\n\t// Although straightforward: https://stackoverflow.com/a/7557433/6495043\n\tvar rect = el.getBoundingClientRect();\n\n\treturn (\n\t\trect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\n\t);\n}\n\nexport function getElementContentWidth(element) {\n\tvar styles = window.getComputedStyle(element);\n\tvar padding = parseFloat(styles.paddingLeft) +\n\t\tparseFloat(styles.paddingRight);\n\n\treturn element.clientWidth - padding;\n}\n\nexport function bind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function (event) {\n\t\t\t\telement.addEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function unbind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function(event) {\n\t\t\t\telement.removeEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function fire(target, type, properties) {\n\tvar evt = document.createEvent(\"HTMLEvents\");\n\n\tevt.initEvent(type, true, true );\n\n\tfor (var j in properties) {\n\t\tevt[j] = properties[j];\n\t}\n\n\treturn target.dispatchEvent(evt);\n}\n\n// https://css-tricks.com/snippets/javascript/loop-queryselectorall-matches/\nexport function forEachNode(nodeList, callback, scope) {\n\tif(!nodeList) return;\n\tfor (var i = 0; i < nodeList.length; i++) {\n\t\tcallback.call(scope, nodeList[i], i);\n\t}\n}\n\nexport function activate($parent, $child, commonClass, activeClass='active', index = -1) {\n\tlet $children = $parent.querySelectorAll(`.${commonClass}.${activeClass}`);\n\n\tforEachNode($children, (node, i) => {\n\t\tif(index >= 0 && i <= index) return;\n\t\tnode.classList.remove(activeClass);\n\t})\n\n\t$child.classList.add(activeClass);\n}\n","import { ANGLE_RATIO } from './constants';\n\n/**\n * Returns the value of a number upto 2 decimal places.\n * @param {Number} d Any number\n */\nexport function floatTwo(d) {\n\treturn parseFloat(d.toFixed(2));\n}\n\n/**\n * Returns whether or not two given arrays are equal.\n * @param {Array} arr1 First array\n * @param {Array} arr2 Second array\n */\nexport function arraysEqual(arr1, arr2) {\n\tif(arr1.length !== arr2.length) return false;\n\tlet areEqual = true;\n\tarr1.map((d, i) => {\n\t\tif(arr2[i] !== d) areEqual = false;\n\t});\n\treturn areEqual;\n}\n\n/**\n * Shuffles array in place. ES6 version\n * @param {Array} array An array containing the items.\n */\nexport function shuffle(array) {\n\t// Awesomeness: https://bost.ocks.org/mike/shuffle/\n\t// https://stackoverflow.com/a/2450976/6495043\n\t// https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array?noredirect=1&lq=1\n\n\tfor (let i = array.length - 1; i > 0; i--) {\n\t\tlet j = Math.floor(Math.random() * (i + 1));\n\t\t[array[i], array[j]] = [array[j], array[i]];\n\t}\n\n\treturn array;\n}\n\n/**\n * Fill an array with extra points\n * @param {Array} array Array\n * @param {Number} count number of filler elements\n * @param {Object} element element to fill with\n * @param {Boolean} start fill at start?\n */\nexport function fillArray(array, count, element, start=false) {\n\tif(!element) {\n\t\telement = start ? array[0] : array[array.length - 1];\n\t}\n\tlet fillerArray = new Array(Math.abs(count)).fill(element);\n\tarray = start ? fillerArray.concat(array) : array.concat(fillerArray);\n\treturn array;\n}\n\n/**\n * Returns pixel width of string.\n * @param {String} string\n * @param {Number} charWidth Width of single char in pixels\n */\nexport function getStringWidth(string, charWidth) {\n\treturn (string+\"\").length * charWidth;\n}\n\nexport function bindChange(obj, getFn, setFn) {\n\treturn new Proxy(obj, {\n\t\tset: function(target, prop, value) {\n\t\t\tsetFn();\n\t\t\treturn Reflect.set(target, prop, value);\n\t\t},\n\t\tget: function(target, prop) {\n\t\t\tgetFn();\n\t\t\treturn Reflect.get(target, prop);\n\t\t}\n\t});\n}\n\nexport function getPositionByAngle(angle, radius) {\n\treturn {\n\t\tx:Math.sin(angle * ANGLE_RATIO) * radius,\n\t\ty:Math.cos(angle * ANGLE_RATIO) * radius,\n\t};\n}\n","import { fillArray } from './helpers';\n\nexport function getBarHeightAndYAttr(yTop, zeroLine) {\n\tlet height, y;\n\tif (yTop <= zeroLine) {\n\t\theight = zeroLine - yTop;\n\t\ty = yTop;\n\t} else {\n\t\theight = yTop - zeroLine;\n\t\ty = zeroLine;\n\t}\n\n\treturn [height, y];\n}\n\nexport function equilizeNoOfElements(array1, array2,\n\textraCount = array2.length - array1.length) {\n\n\t// Doesn't work if either has zero elements.\n\tif(extraCount > 0) {\n\t\tarray1 = fillArray(array1, extraCount);\n\t} else {\n\t\tarray2 = fillArray(array2, extraCount);\n\t}\n\treturn [array1, array2];\n}\n","import { getBarHeightAndYAttr } from './draw-utils';\nimport { getStringWidth } from './helpers';\nimport { DOT_OVERLAY_SIZE_INCR } from './constants';\n\nexport const AXIS_TICK_LENGTH = 6;\nconst LABEL_MARGIN = 4;\nexport const FONT_SIZE = 10;\nconst BASE_LINE_COLOR = '#dadada';\nconst FONT_FILL = '#555b51';\n\nfunction $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function createSVG(tag, o) {\n\tvar element = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif(i === \"className\") { i = \"class\"; }\n\t\t\tif(i === \"innerHTML\") {\n\t\t\t\telement['textContent'] = val;\n\t\t\t} else {\n\t\t\t\telement.setAttribute(i, val);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn element;\n}\n\nfunction renderVerticalGradient(svgDefElem, gradientId) {\n\treturn createSVG('linearGradient', {\n\t\tinside: svgDefElem,\n\t\tid: gradientId,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: 0,\n\t\ty2: 1\n\t});\n}\n\nfunction setGradientStop(gradElem, offset, color, opacity) {\n\treturn createSVG('stop', {\n\t\t'inside': gradElem,\n\t\t'style': `stop-color: ${color}`,\n\t\t'offset': offset,\n\t\t'stop-opacity': opacity\n\t});\n}\n\nexport function makeSVGContainer(parent, className, width, height) {\n\treturn createSVG('svg', {\n\t\tclassName: className,\n\t\tinside: parent,\n\t\twidth: width,\n\t\theight: height\n\t});\n}\n\nexport function makeSVGDefs(svgContainer) {\n\treturn createSVG('defs', {\n\t\tinside: svgContainer,\n\t});\n}\n\nexport function makeSVGGroup(parent, className, transform='') {\n\treturn createSVG('g', {\n\t\tclassName: className,\n\t\tinside: parent,\n\t\ttransform: transform\n\t});\n}\n\nexport function wrapInSVGGroup(elements, className='') {\n\tlet g = createSVG('g', {\n\t\tclassName: className\n\t});\n\telements.forEach(e => g.appendChild(e));\n\treturn g;\n}\n\nexport function makePath(pathStr, className='', stroke='none', fill='none') {\n\treturn createSVG('path', {\n\t\tclassName: className,\n\t\td: pathStr,\n\t\tstyles: {\n\t\t\tstroke: stroke,\n\t\t\tfill: fill\n\t\t}\n\t});\n}\n\nexport function makeArcPathStr(startPosition, endPosition, center, radius, clockWise=1){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\n\n\treturn `M${center.x} ${center.y}\n\t\tL${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 0 ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY} z`;\n}\n\nexport function makeGradient(svgDefElem, color, lighter = false) {\n\tlet gradientId ='path-fill-gradient' + '-' + color + '-' +(lighter ? 'lighter' : 'default');\n\tlet gradientDef = renderVerticalGradient(svgDefElem, gradientId);\n\tlet opacities = [1, 0.6, 0.2];\n\tif(lighter) {\n\t\topacities = [0.4, 0.2, 0];\n\t}\n\n\tsetGradientStop(gradientDef, \"0%\", color, opacities[0]);\n\tsetGradientStop(gradientDef, \"50%\", color, opacities[1]);\n\tsetGradientStop(gradientDef, \"100%\", color, opacities[2]);\n\n\treturn gradientId;\n}\n\nexport function percentageBar(x, y, width, height, fill='none') {\n\tlet args = {\n\t\tclassName: 'percentage-bar',\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height,\n\t\tfill: fill\n\t};\n\n\treturn createSVG(\"rect\", args);\n}\n\nexport function heatSquare(className, x, y, size, fill='none', data={}) {\n\tlet args = {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: size,\n\t\theight: size,\n\t\tfill: fill\n\t};\n\n\tObject.keys(data).map(key => {\n\t\targs[key] = data[key];\n\t});\n\n\treturn createSVG(\"rect\", args);\n}\n\nexport function legendBar(x, y, size, fill='none', label) {\n\tlet args = {\n\t\tclassName: 'legend-bar',\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: size,\n\t\theight: '2px',\n\t\tfill: fill\n\t};\n\tlet text = createSVG('text', {\n\t\tclassName: 'legend-dataset-text',\n\t\tx: 0,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE * 2) + 'px',\n\t\t'font-size': (FONT_SIZE * 1.2) + 'px',\n\t\t'text-anchor': 'start',\n\t\tfill: FONT_FILL,\n\t\tinnerHTML: label\n\t});\n\n\tlet group = createSVG('g', {\n\t\ttransform: `translate(${x}, ${y})`\n\t});\n\tgroup.appendChild(createSVG(\"rect\", args));\n\tgroup.appendChild(text);\n\n\treturn group;\n}\n\nexport function makeText(className, x, y, content, fontSize = FONT_SIZE) {\n\treturn createSVG('text', {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\tdy: (fontSize / 2) + 'px',\n\t\t'font-size': fontSize + 'px',\n\t\tinnerHTML: content\n\t});\n}\n\nfunction makeVertLine(x, label, y1, y2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tlet l = createSVG('line', {\n\t\tclassName: 'line-vertical ' + options.className,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: y1,\n\t\ty2: y2,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: 0,\n\t\ty: y1 > y2 ? y1 + LABEL_MARGIN : y1 - LABEL_MARGIN - FONT_SIZE,\n\t\tdy: FONT_SIZE + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'middle',\n\t\tinnerHTML: label + \"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(${ x }, 0)`\n\t});\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nfunction makeHoriLine(y, label, x1, x2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.lineType) options.lineType = '';\n\tlet className = 'line-horizontal ' + options.className +\n\t\t(options.lineType === \"dashed\" ? \"dashed\": \"\");\n\n\tlet l = createSVG('line', {\n\t\tclassName: className,\n\t\tx1: x1,\n\t\tx2: x2,\n\t\ty1: 0,\n\t\ty2: 0,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: x1 < x2 ? x1 - LABEL_MARGIN : x1 + LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / 2 - 2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': x1 < x2 ? 'end' : 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(0, ${y})`,\n\t\t'stroke-opacity': 1\n\t});\n\n\tif(text === 0 || text === '0') {\n\t\tline.style.stroke = \"rgba(27, 31, 35, 0.6)\";\n\t}\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nexport function yLine(y, label, width, options={}) {\n\tif(!options.pos) options.pos = 'left';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\tlet x1 = -1 * AXIS_TICK_LENGTH;\n\tlet x2 = options.mode === 'span' ? width + AXIS_TICK_LENGTH : 0;\n\n\tif(options.mode === 'tick' && options.pos === 'right') {\n\t\tx1 = width + AXIS_TICK_LENGTH;\n\t\tx2 = width;\n\t}\n\n\t// let offset = options.pos === 'left' ? -1 * options.offset : options.offset;\n\n\tx1 += options.offset;\n\tx2 += options.offset;\n\n\treturn makeHoriLine(y, label, x1, x2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType\n\t});\n}\n\nexport function xLine(x, label, height, options={}) {\n\tif(!options.pos) options.pos = 'bottom';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\t// Draw X axis line in span/tick mode with optional label\n\t//                        \ty2(span)\n\t// \t\t\t\t\t\t|\n\t// \t\t\t\t\t\t|\n\t//\t\t\t\tx line\t|\n\t//\t\t\t\t\t\t|\n\t// \t\t\t\t\t   \t|\n\t// ---------------------+-- y2(tick)\n\t//\t\t\t\t\t\t|\n\t//\t\t\t\t\t\t\ty1\n\n\tlet y1 = height + AXIS_TICK_LENGTH;\n\tlet y2 = options.mode === 'span' ? -1 * AXIS_TICK_LENGTH : height;\n\n\tif(options.mode === 'tick' && options.pos === 'top') {\n\t\t// top axis ticks\n\t\ty1 = -1 * AXIS_TICK_LENGTH;\n\t\ty2 = 0;\n\t}\n\n\treturn makeVertLine(x, label, y1, y2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType\n\t});\n}\n\nexport function yMarker(y, label, width, options={}) {\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: width - getStringWidth(label, 5) - LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = makeHoriLine(y, '', 0, width, {\n\t\tstroke: options.stroke || BASE_LINE_COLOR,\n\t\tclassName: options.className || '',\n\t\tlineType: options.lineType\n\t});\n\n\tline.appendChild(labelSvg);\n\n\treturn line;\n}\n\nexport function yRegion(y1, y2, width, label) {\n\t// return a group\n\tlet height = y1 - y2;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`, // remove class\n\t\tstyles: {\n\t\t\tfill: `rgba(228, 234, 239, 0.49)`,\n\t\t\tstroke: BASE_LINE_COLOR,\n\t\t\t'stroke-dasharray': `${width}, ${height}`\n\t\t},\n\t\t// 'data-point-index': index,\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: width,\n\t\theight: height\n\t});\n\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: width - getStringWidth(label+\"\", 4.5) - LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet region = createSVG('g', {\n\t\ttransform: `translate(0, ${y2})`\n\t});\n\n\tregion.appendChild(rect);\n\tregion.appendChild(labelSvg);\n\n\treturn region;\n}\n\nexport function datasetBar(x, yTop, width, color, label='', index=0, offset=0, meta={}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`,\n\t\tstyle: `fill: ${color}`,\n\t\t'data-point-index': index,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height || meta.minHeight // TODO: correct y for positive min height\n\t});\n\n\tlabel += \"\";\n\n\tif(!label && !label.length) {\n\t\treturn rect;\n\t} else {\n\t\trect.setAttribute('y', 0);\n\t\trect.setAttribute('x', 0);\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: width/2,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\t'data-point-index': index,\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(rect);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nexport function datasetDot(x, y, radius, color, label='', index=0) {\n\tlet dot = createSVG('circle', {\n\t\tstyle: `fill: ${color}`,\n\t\t'data-point-index': index,\n\t\tcx: x,\n\t\tcy: y,\n\t\tr: radius\n\t});\n\n\tlabel += \"\";\n\n\tif(!label && !label.length) {\n\t\treturn dot;\n\t} else {\n\t\tdot.setAttribute('cy', 0);\n\t\tdot.setAttribute('cx', 0);\n\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1 - radius) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\t'data-point-index': index,\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(dot);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nexport function getPaths(xList, yList, color, options={}, meta={}) {\n\tlet pointsList = yList.map((y, i) => (xList[i] + ',' + y));\n\tlet pointsStr = pointsList.join(\"L\");\n\tlet path = makePath(\"M\"+pointsStr, 'line-graph-path', color);\n\n\t// HeatLine\n\tif(options.heatline) {\n\t\tlet gradient_id = makeGradient(meta.svgDefs, color);\n\t\tpath.style.stroke = `url(#${gradient_id})`;\n\t}\n\n\tlet paths = {\n\t\tpath: path\n\t};\n\n\t// Region\n\tif(options.regionFill) {\n\t\tlet gradient_id_region = makeGradient(meta.svgDefs, color, true);\n\n\t\t// TODO: use zeroLine OR minimum\n\t\tlet pathStr = \"M\" + `${xList[0]},${meta.zeroLine}L` + pointsStr + `L${xList.slice(-1)[0]},${meta.zeroLine}`;\n\t\tpaths.region = makePath(pathStr, `region-fill`, 'none', `url(#${gradient_id_region})`);\n\t}\n\n\treturn paths;\n}\n\nexport let makeOverlay = {\n\t'bar': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\toverlay.style.fill = '#000000';\n\t\toverlay.style.opacity = '0.4';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t},\n\n\t'dot': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\tlet radius = unit.getAttribute('r');\n\t\tlet fill = unit.getAttribute('fill');\n\t\toverlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\n\t\toverlay.setAttribute('fill', fill);\n\t\toverlay.style.opacity = '0.6';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t},\n\n\t'heat_square': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\tlet radius = unit.getAttribute('r');\n\t\tlet fill = unit.getAttribute('fill');\n\t\toverlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\n\t\toverlay.setAttribute('fill', fill);\n\t\toverlay.style.opacity = '0.6';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t}\n};\n\nexport let updateOverlay = {\n\t'bar': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['x', 'y', 'width', 'height'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n\n\t'dot': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['cx', 'cy'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n\n\t'heat_square': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['cx', 'cy'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n};\n","const PRESET_COLOR_MAP = {\n\t'light-blue': '#7cd6fd',\n\t'blue': '#5e64ff',\n\t'violet': '#743ee2',\n\t'red': '#ff5858',\n\t'orange': '#ffa00a',\n\t'yellow': '#feef72',\n\t'green': '#28a745',\n\t'light-green': '#98d85b',\n\t'purple': '#b554ff',\n\t'magenta': '#ffa3ef',\n\t'black': '#36114C',\n\t'grey': '#bdd3e6',\n\t'light-grey': '#f0f4f7',\n\t'dark-grey': '#b8c2cc'\n};\n\nfunction limitColor(r){\n\tif (r > 255) return 255;\n\telse if (r < 0) return 0;\n\treturn r;\n}\n\nexport function lightenDarkenColor(color, amt) {\n\tlet col = getColor(color);\n\tlet usePound = false;\n\tif (col[0] == \"#\") {\n\t\tcol = col.slice(1);\n\t\tusePound = true;\n\t}\n\tlet num = parseInt(col,16);\n\tlet r = limitColor((num >> 16) + amt);\n\tlet b = limitColor(((num >> 8) & 0x00FF) + amt);\n\tlet g = limitColor((num & 0x0000FF) + amt);\n\treturn (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\nexport function isValidColor(string) {\n\t// https://stackoverflow.com/a/8027444/6495043\n\treturn /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(string);\n}\n\nexport const getColor = (color) => {\n\treturn PRESET_COLOR_MAP[color] || color;\n};\n","import { getBarHeightAndYAttr } from './draw-utils';\n\nexport const UNIT_ANIM_DUR = 350;\nexport const PATH_ANIM_DUR = 350;\nexport const MARKER_LINE_ANIM_DUR = UNIT_ANIM_DUR;\nexport const REPLACE_ALL_NEW_DUR = 250;\n\nexport const STD_EASING = 'easein';\n\nexport function translate(unit, oldCoord, newCoord, duration) {\n\tlet old = typeof oldCoord === 'string' ? oldCoord : oldCoord.join(', ');\n\treturn [\n\t\tunit,\n\t\t{transform: newCoord.join(', ')},\n\t\tduration,\n\t\tSTD_EASING,\n\t\t\"translate\",\n\t\t{transform: old}\n\t];\n}\n\nexport function translateVertLine(xLine, newX, oldX) {\n\treturn translate(xLine, [oldX, 0], [newX, 0], MARKER_LINE_ANIM_DUR);\n}\n\nexport function translateHoriLine(yLine, newY, oldY) {\n\treturn translate(yLine, [0, oldY], [0, newY], MARKER_LINE_ANIM_DUR);\n}\n\nexport function animateRegion(rectGroup, newY1, newY2, oldY2) {\n\tlet newHeight = newY1 - newY2;\n\tlet rect = rectGroup.childNodes[0];\n\tlet width = rect.getAttribute(\"width\");\n\tlet rectAnim = [\n\t\trect,\n\t\t{ height: newHeight, 'stroke-dasharray': `${width}, ${newHeight}` },\n\t\tMARKER_LINE_ANIM_DUR,\n\t\tSTD_EASING\n\t];\n\n\tlet groupAnim = translate(rectGroup, [0, oldY2], [0, newY2], MARKER_LINE_ANIM_DUR);\n\treturn [rectAnim, groupAnim];\n}\n\nexport function animateBar(bar, x, yTop, width, offset=0, meta={}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\tif(bar.nodeName !== 'rect') {\n\t\tlet rect = bar.childNodes[0];\n\t\tlet rectAnim = [\n\t\t\trect,\n\t\t\t{width: width, height: height},\n\t\t\tUNIT_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\n\t\tlet oldCoordStr = bar.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(bar, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [rectAnim, groupAnim];\n\t} else {\n\t\treturn [[bar, {width: width, height: height, x: x, y: y}, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// bar.animate({height: args.newHeight, y: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animateDot(dot, x, y) {\n\tif(dot.nodeName !== 'circle') {\n\t\tlet oldCoordStr = dot.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(dot, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [groupAnim];\n\t} else {\n\t\treturn [[dot, {cx: x, cy: y}, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animatePath(paths, newXList, newYList, zeroLine) {\n\tlet pathComponents = [];\n\n\tlet pointsStr = newYList.map((y, i) => (newXList[i] + ',' + y));\n\tlet pathStr = pointsStr.join(\"L\");\n\n\tconst animPath = [paths.path, {d:\"M\"+pathStr}, PATH_ANIM_DUR, STD_EASING];\n\tpathComponents.push(animPath);\n\n\tif(paths.region) {\n\t\tlet regStartPt = `${newXList[0]},${zeroLine}L`;\n\t\tlet regEndPt = `L${newXList.slice(-1)[0]}, ${zeroLine}`;\n\n\t\tconst animRegion = [\n\t\t\tpaths.region,\n\t\t\t{d:\"M\" + regStartPt + pathStr + regEndPt},\n\t\t\tPATH_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\t\tpathComponents.push(animRegion);\n\t}\n\n\treturn pathComponents;\n}\n\nexport function animatePathStr(oldPath, pathStr) {\n\treturn [oldPath, {d: pathStr}, UNIT_ANIM_DUR, STD_EASING];\n}\n\n","// Leveraging SMIL Animations\n\nimport { REPLACE_ALL_NEW_DUR } from './animate';\n\nconst EASING = {\n\tease: \"0.25 0.1 0.25 1\",\n\tlinear: \"0 0 1 1\",\n\t// easein: \"0.42 0 1 1\",\n\teasein: \"0.1 0.8 0.2 1\",\n\teaseout: \"0 0 0.58 1\",\n\teaseinout: \"0.42 0 0.58 1\"\n};\n\nfunction animateSVGElement(element, props, dur, easingType=\"linear\", type=undefined, oldValues={}) {\n\n\tlet animElement = element.cloneNode(true);\n\tlet newElement = element.cloneNode(true);\n\n\tfor(var attributeName in props) {\n\t\tlet animateElement;\n\t\tif(attributeName === 'transform') {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animateTransform\");\n\t\t} else {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animate\");\n\t\t}\n\t\tlet currentValue = oldValues[attributeName] || element.getAttribute(attributeName);\n\t\tlet value = props[attributeName];\n\n\t\tlet animAttr = {\n\t\t\tattributeName: attributeName,\n\t\t\tfrom: currentValue,\n\t\t\tto: value,\n\t\t\tbegin: \"0s\",\n\t\t\tdur: dur/1000 + \"s\",\n\t\t\tvalues: currentValue + \";\" + value,\n\t\t\tkeySplines: EASING[easingType],\n\t\t\tkeyTimes: \"0;1\",\n\t\t\tcalcMode: \"spline\",\n\t\t\tfill: 'freeze'\n\t\t};\n\n\t\tif(type) {\n\t\t\tanimAttr[\"type\"] = type;\n\t\t}\n\n\t\tfor (var i in animAttr) {\n\t\t\tanimateElement.setAttribute(i, animAttr[i]);\n\t\t}\n\n\t\tanimElement.appendChild(animateElement);\n\n\t\tif(type) {\n\t\t\tnewElement.setAttribute(attributeName, `translate(${value})`);\n\t\t} else {\n\t\t\tnewElement.setAttribute(attributeName, value);\n\t\t}\n\t}\n\n\treturn [animElement, newElement];\n}\n\nexport function transform(element, style) { // eslint-disable-line no-unused-vars\n\telement.style.transform = style;\n\telement.style.webkitTransform = style;\n\telement.style.msTransform = style;\n\telement.style.mozTransform = style;\n\telement.style.oTransform = style;\n}\n\nfunction animateSVG(svgContainer, elements) {\n\tlet newElements = [];\n\tlet animElements = [];\n\n\telements.map(element => {\n\t\tlet unit = element[0];\n\t\tlet parent = unit.parentNode;\n\n\t\tlet animElement, newElement;\n\n\t\telement[0] = unit;\n\t\t[animElement, newElement] = animateSVGElement(...element);\n\n\t\tnewElements.push(newElement);\n\t\tanimElements.push([animElement, parent]);\n\n\t\tparent.replaceChild(animElement, unit);\n\t});\n\n\tlet animSvg = svgContainer.cloneNode(true);\n\n\tanimElements.map((animElement, i) => {\n\t\tanimElement[1].replaceChild(newElements[i], animElement[0]);\n\t\telements[i][0] = newElements[i];\n\t});\n\n\treturn animSvg;\n}\n\nexport function runSMILAnimation(parent, svgElement, elementsToAnimate) {\n\tif(elementsToAnimate.length === 0) return;\n\n\tlet animSvgElement = animateSVG(svgElement, elementsToAnimate);\n\tif(svgElement.parentNode == parent) {\n\t\tparent.removeChild(svgElement);\n\t\tparent.appendChild(animSvgElement);\n\n\t}\n\n\t// Replace the new svgElement (data has already been replaced)\n\tsetTimeout(() => {\n\t\tif(animSvgElement.parentNode == parent) {\n\t\t\tparent.removeChild(animSvgElement);\n\t\t\tparent.appendChild(svgElement);\n\t\t}\n\t}, REPLACE_ALL_NEW_DUR);\n}\n","import { makeSVGGroup } from '../utils/draw';\nimport { makePath, xLine, yLine, yMarker, yRegion, datasetBar, datasetDot, percentageBar, getPaths, heatSquare } from '../utils/draw';\nimport { equilizeNoOfElements } from '../utils/draw-utils';\nimport { translateHoriLine, translateVertLine, animateRegion, animateBar,\n\tanimateDot, animatePath, animatePathStr } from '../utils/animate';\n\nclass ChartComponent {\n\tconstructor({\n\t\tlayerClass = '',\n\t\tlayerTransform = '',\n\t\tconstants,\n\n\t\tgetData,\n\t\tmakeElements,\n\t\tanimateElements\n\t}) {\n\t\tthis.layerTransform = layerTransform;\n\t\tthis.constants = constants;\n\n\t\tthis.makeElements = makeElements;\n\t\tthis.getData = getData;\n\n\t\tthis.animateElements = animateElements;\n\n\t\tthis.store = [];\n\n\t\tthis.layerClass = layerClass;\n\t\tthis.layerClass = typeof(this.layerClass) === 'function'\n\t\t\t? this.layerClass() : this.layerClass;\n\n\t\tthis.refresh();\n\t}\n\n\trefresh(data) {\n\t\tthis.data = data || this.getData();\n\t}\n\n\tsetup(parent) {\n\t\tthis.layer = makeSVGGroup(parent, this.layerClass, this.layerTransform);\n\t}\n\n\tmake() {\n\t\tthis.render(this.data);\n\t\tthis.oldData = this.data;\n\t}\n\n\trender(data) {\n\t\tthis.store = this.makeElements(data);\n\n\t\tthis.layer.textContent = '';\n\t\tthis.store.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t}\n\n\tupdate(animate = true) {\n\t\tthis.refresh();\n\t\tlet animateElements = [];\n\t\tif(animate) {\n\t\t\tanimateElements = this.animateElements(this.data) || [];\n\t\t}\n\t\treturn animateElements;\n\t}\n}\n\nlet componentConfigs = {\n\tpieSlices: {\n\t\tlayerClass: 'pie-slices',\n\t\tmakeElements(data) {\n\t\t\treturn data.sliceStrings.map((s, i) =>{\n\t\t\t\tlet slice = makePath(s, 'pie-path', 'none', data.colors[i]);\n\t\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\t\treturn slice;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\treturn this.store.map((slice, i) =>\n\t\t\t\tanimatePathStr(slice, newData.sliceStrings[i])\n\t\t\t);\n\t\t}\n\t},\n\tpercentageBars: {\n\t\tlayerClass: 'percentage-bars',\n\t\tmakeElements(data) {\n\t\t\treturn data.xPositions.map((x, i) =>{\n\t\t\t\tlet y = 0;\n\t\t\t\tlet bar = percentageBar(x, y, data.widths[i],\n\t\t\t\t\tthis.constants.barHeight, data.colors[i]);\n\t\t\t\treturn bar;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) { }\n\t},\n\tyAxis: {\n\t\tlayerClass: 'y axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\tyLine(position, data.labels[i], this.constants.width,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.labels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tlabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\txAxis: {\n\t\tlayerClass: 'x axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\txLine(position, data.calcLabels[i], this.constants.height,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.calcLabels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.calcLabels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tcalcLabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateVertLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyMarkers: {\n\t\tlayerClass: 'y-markers',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(marker =>\n\t\t\t\tyMarker(marker.position, marker.label, this.constants.width,\n\t\t\t\t\t{pos:'right', mode: 'span', lineType: 'dashed'})\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.position);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.position);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tposition: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyRegions: {\n\t\tlayerClass: 'y-regions',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(region =>\n\t\t\t\tyRegion(region.startPos, region.endPos, this.constants.width,\n\t\t\t\t\tregion.label)\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.endPos);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newStarts = newData.map(d => d.startPos);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.endPos);\n\t\t\tlet oldStarts = this.oldData.map(d => d.startPos);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tstartPos: oldStarts[i],\n\t\t\t\t\tendPos: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((rectGroup, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateRegion(\n\t\t\t\t\trectGroup, newStarts[i], newPos[i], oldPos[i]\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\theatDomain: {\n\t\tlayerClass: function() { return 'heat-domain domain-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet {colWidth, rowHeight, squareSize, xTranslate} = this.constants;\n\t\t\tlet x = xTranslate, y = 0;\n\n\t\t\tthis.serializedSubDomains = [];\n\n\t\t\tdata.cols.map(week => {\n\t\t\t\tweek.map((day, i) => {\n\t\t\t\t\tif(day.fill) {\n\t\t\t\t\t\tlet data = {\n\t\t\t\t\t\t\t'data-date': day.yyyyMmDd,\n\t\t\t\t\t\t\t'data-value': day.dataValue,\n\t\t\t\t\t\t\t'data-day': i\n\t\t\t\t\t\t};\n\t\t\t\t\t\tlet square = heatSquare('day', x, y, squareSize, day.fill, data);\n\t\t\t\t\t\tthis.serializedSubDomains.push(square);\n\t\t\t\t\t}\n\t\t\t\t\ty += rowHeight;\n\t\t\t\t})\n\t\t\t\ty = 0;\n\t\t\t\tx += colWidth;\n\t\t\t});\n\n\t\t\treturn this.serializedSubDomains;\n\t\t},\n\n\t\tanimateElements(newData) { }\n\t},\n\n\tbarGraph: {\n\t\tlayerClass: function() { return 'dataset-units dataset-bars dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'bar';\n\t\t\tthis.units = data.yPositions.map((y, j) => {\n\t\t\t\treturn datasetBar(\n\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\ty,\n\t\t\t\t\tdata.barWidth,\n\t\t\t\t\tc.color,\n\t\t\t\t\tdata.labels[j],\n\t\t\t\t\tj,\n\t\t\t\t\tdata.offsets[j],\n\t\t\t\t\t{\n\t\t\t\t\t\tzeroLine: data.zeroLine,\n\t\t\t\t\t\tbarsWidth: data.barsWidth,\n\t\t\t\t\t\tminHeight: c.minHeight\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t\treturn this.units;\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newOffsets = newData.offsets;\n\t\t\tlet newLabels = newData.labels;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldOffsets = this.oldData.offsets;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldOffsets, newOffsets] = equilizeNoOfElements(oldOffsets, newOffsets);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\toffsets: oldOffsets,\n\t\t\t\tlabels: newLabels,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tbarsWidth: this.oldData.barsWidth,\n\t\t\t\tbarWidth: this.oldData.barWidth,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((bar, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateBar(\n\t\t\t\t\tbar, newXPos[i], newYPos[i], newData.barWidth, newOffsets[i],\n\t\t\t\t\t{zeroLine: newData.zeroLine}\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\tlineGraph: {\n\t\tlayerClass: function() { return 'dataset-units dataset-line dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'dot';\n\t\t\tthis.paths = {};\n\t\t\tif(!c.hideLine) {\n\t\t\t\tthis.paths = getPaths(\n\t\t\t\t\tdata.xPositions,\n\t\t\t\t\tdata.yPositions,\n\t\t\t\t\tc.color,\n\t\t\t\t\t{\n\t\t\t\t\t\theatline: c.heatline,\n\t\t\t\t\t\tregionFill: c.regionFill\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tsvgDefs: c.svgDefs,\n\t\t\t\t\t\tzeroLine: data.zeroLine\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.units = [];\n\t\t\tif(!c.hideDots) {\n\t\t\t\tthis.units = data.yPositions.map((y, j) => {\n\t\t\t\t\treturn datasetDot(\n\t\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\t\ty,\n\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\tc.color,\n\t\t\t\t\t\t(c.valuesOverPoints ? data.values[j] : ''),\n\t\t\t\t\t\tj\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn Object.values(this.paths).concat(this.units);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newValues = newData.values;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldValues = this.oldData.values;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldValues, newValues] = equilizeNoOfElements(oldValues, newValues);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\tvalues: newValues,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tradius: this.oldData.radius,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tif(Object.keys(this.paths).length) {\n\t\t\t\tanimateElements = animateElements.concat(animatePath(\n\t\t\t\t\tthis.paths, newXPos, newYPos, newData.zeroLine));\n\t\t\t}\n\n\t\t\tif(this.units.length) {\n\t\t\t\tthis.units.map((dot, i) => {\n\t\t\t\t\tanimateElements = animateElements.concat(animateDot(\n\t\t\t\t\t\tdot, newXPos[i], newYPos[i]));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn animateElements;\n\t\t}\n\t}\n};\n\nexport function getComponent(name, constants, getData) {\n\tlet keys = Object.keys(componentConfigs).filter(k => name.includes(k));\n\tlet config = componentConfigs[keys[0]];\n\tObject.assign(config, {\n\t\tconstants: constants,\n\t\tgetData: getData\n\t});\n\treturn new ChartComponent(config);\n}\n","// Playing around with dates\n\nexport const NO_OF_YEAR_MONTHS = 12;\nexport const NO_OF_DAYS_IN_WEEK = 7;\nexport const DAYS_IN_YEAR = 375;\nexport const NO_OF_MILLIS = 1000;\nexport const SEC_IN_DAY = 86400;\n\nexport const MONTH_NAMES = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\nexport const MONTH_NAMES_SHORT = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n// https://stackoverflow.com/a/11252167/6495043\nfunction treatAsUtc(date) {\n\tlet result = new Date(date);\n\tresult.setMinutes(result.getMinutes() - result.getTimezoneOffset());\n\treturn result;\n}\n\nexport function getYyyyMmDd(date) {\n\tlet dd = date.getDate();\n\tlet mm = date.getMonth() + 1; // getMonth() is zero-based\n\treturn [\n\t\tdate.getFullYear(),\n\t\t(mm>9 ? '' : '0') + mm,\n\t\t(dd>9 ? '' : '0') + dd\n\t].join('-');\n}\n\nexport function clone(date) {\n\treturn new Date(date.getTime());\n}\n\nexport function timestampSec(date) {\n\treturn date.getTime()/NO_OF_MILLIS;\n}\n\nexport function timestampToMidnight(timestamp, roundAhead = false) {\n\tlet midnightTs = Math.floor(timestamp - (timestamp % SEC_IN_DAY));\n\tif(roundAhead) {\n\t\treturn midnightTs + SEC_IN_DAY;\n\t}\n\treturn midnightTs;\n}\n\nexport function getMonthsBetween(startDate, endDate) {}\n\nexport function getWeeksBetween(startDate, endDate) {\n\tlet weekStartDate = setDayToSunday(startDate);\n\treturn Math.ceil(getDaysBetween(weekStartDate, endDate) / NO_OF_DAYS_IN_WEEK);\n}\n\nexport function getDaysBetween(startDate, endDate) {\n\tlet millisecondsPerDay = SEC_IN_DAY * NO_OF_MILLIS;\n\treturn (treatAsUtc(endDate) - treatAsUtc(startDate)) / millisecondsPerDay;\n}\n\nexport function areInSameMonth(startDate, endDate) {\n\treturn startDate.getMonth() === endDate.getMonth()\n\t\t&& startDate.getFullYear() === endDate.getFullYear();\n}\n\nexport function getMonthName(i, short=false) {\n\tlet monthName = MONTH_NAMES[i];\n\treturn short ? monthName.slice(0, 3) : monthName;\n}\n\nexport function getLastDateInMonth (month, year) {\n\treturn new Date(year, month + 1, 0); // 0: last day in previous month\n}\n\n// mutates\nexport function setDayToSunday(date) {\n\tlet newDate = clone(date);\n\tconst day = newDate.getDay();\n\tif(day !== 0) {\n\t\taddDays(newDate, (-1) * day);\n\t}\n\treturn newDate;\n}\n\n// mutates\nexport function addDays(date, numberOfDays) {\n\tdate.setDate(date.getDate() + numberOfDays);\n}\n","import { floatTwo } from './helpers';\n\nfunction normalize(x) {\n\t// Calculates mantissa and exponent of a number\n\t// Returns normalized number and exponent\n\t// https://stackoverflow.com/q/9383593/6495043\n\n\tif(x===0) {\n\t\treturn [0, 0];\n\t}\n\tif(isNaN(x)) {\n\t\treturn {mantissa: -6755399441055744, exponent: 972};\n\t}\n\tvar sig = x > 0 ? 1 : -1;\n\tif(!isFinite(x)) {\n\t\treturn {mantissa: sig * 4503599627370496, exponent: 972};\n\t}\n\n\tx = Math.abs(x);\n\tvar exp = Math.floor(Math.log10(x));\n\tvar man = x/Math.pow(10, exp);\n\n\treturn [sig * man, exp];\n}\n\nfunction getChartRangeIntervals(max, min=0) {\n\tlet upperBound = Math.ceil(max);\n\tlet lowerBound = Math.floor(min);\n\tlet range = upperBound - lowerBound;\n\n\tlet noOfParts = range;\n\tlet partSize = 1;\n\n\t// To avoid too many partitions\n\tif(range > 5) {\n\t\tif(range % 2 !== 0) {\n\t\t\tupperBound++;\n\t\t\t// Recalc range\n\t\t\trange = upperBound - lowerBound;\n\t\t}\n\t\tnoOfParts = range/2;\n\t\tpartSize = 2;\n\t}\n\n\t// Special case: 1 and 2\n\tif(range <= 2) {\n\t\tnoOfParts = 4;\n\t\tpartSize = range/noOfParts;\n\t}\n\n\t// Special case: 0\n\tif(range === 0) {\n\t\tnoOfParts = 5;\n\t\tpartSize = 1;\n\t}\n\n\tlet intervals = [];\n\tfor(var i = 0; i <= noOfParts; i++){\n\t\tintervals.push(lowerBound + partSize * i);\n\t}\n\treturn intervals;\n}\n\nfunction getChartIntervals(maxValue, minValue=0) {\n\tlet [normalMaxValue, exponent] = normalize(maxValue);\n\tlet normalMinValue = minValue ? minValue/Math.pow(10, exponent): 0;\n\n\t// Allow only 7 significant digits\n\tnormalMaxValue = normalMaxValue.toFixed(6);\n\n\tlet intervals = getChartRangeIntervals(normalMaxValue, normalMinValue);\n\tintervals = intervals.map(value => value * Math.pow(10, exponent));\n\treturn intervals;\n}\n\nexport function calcChartIntervals(values, withMinimum=false) {\n\t//*** Where the magic happens ***\n\n\t// Calculates best-fit y intervals from given values\n\t// and returns the interval array\n\n\tlet maxValue = Math.max(...values);\n\tlet minValue = Math.min(...values);\n\n\t// Exponent to be used for pretty print\n\tlet exponent = 0, intervals = []; // eslint-disable-line no-unused-vars\n\n\tfunction getPositiveFirstIntervals(maxValue, absMinValue) {\n\t\tlet intervals = getChartIntervals(maxValue);\n\n\t\tlet intervalSize = intervals[1] - intervals[0];\n\n\t\t// Then unshift the negative values\n\t\tlet value = 0;\n\t\tfor(var i = 1; value < absMinValue; i++) {\n\t\t\tvalue += intervalSize;\n\t\t\tintervals.unshift((-1) * value);\n\t\t}\n\t\treturn intervals;\n\t}\n\n\t// CASE I: Both non-negative\n\n\tif(maxValue >= 0 && minValue >= 0) {\n\t\texponent = normalize(maxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(maxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(maxValue, minValue);\n\t\t}\n\t}\n\n\t// CASE II: Only minValue negative\n\n\telse if(maxValue > 0 && minValue < 0) {\n\t\t// `withMinimum` irrelevant in this case,\n\t\t// We'll be handling both sides of zero separately\n\t\t// (both starting from zero)\n\t\t// Because ceil() and floor() behave differently\n\t\t// in those two regions\n\n\t\tlet absMinValue = Math.abs(minValue);\n\n\t\tif(maxValue >= absMinValue) {\n\t\t\texponent = normalize(maxValue)[1];\n\t\t\tintervals = getPositiveFirstIntervals(maxValue, absMinValue);\n\t\t} else {\n\t\t\t// Mirror: maxValue => absMinValue, then change sign\n\t\t\texponent = normalize(absMinValue)[1];\n\t\t\tlet posIntervals = getPositiveFirstIntervals(absMinValue, maxValue);\n\t\t\tintervals = posIntervals.map(d => d * (-1));\n\t\t}\n\n\t}\n\n\t// CASE III: Both non-positive\n\n\telse if(maxValue <= 0 && minValue <= 0) {\n\t\t// Mirrored Case I:\n\t\t// Work with positives, then reverse the sign and array\n\n\t\tlet pseudoMaxValue = Math.abs(minValue);\n\t\tlet pseudoMinValue = Math.abs(maxValue);\n\n\t\texponent = normalize(pseudoMaxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue, pseudoMinValue);\n\t\t}\n\n\t\tintervals = intervals.reverse().map(d => d * (-1));\n\t}\n\n\treturn intervals;\n}\n\nexport function getZeroIndex(yPts) {\n\tlet zeroIndex;\n\tlet interval = getIntervalSize(yPts);\n\tif(yPts.indexOf(0) >= 0) {\n\t\t// the range has a given zero\n\t\t// zero-line on the chart\n\t\tzeroIndex = yPts.indexOf(0);\n\t} else if(yPts[0] > 0) {\n\t\t// Minimum value is positive\n\t\t// zero-line is off the chart: below\n\t\tlet min = yPts[0];\n\t\tzeroIndex = (-1) * min / interval;\n\t} else {\n\t\t// Maximum value is negative\n\t\t// zero-line is off the chart: above\n\t\tlet max = yPts[yPts.length - 1];\n\t\tzeroIndex = (-1) * max / interval + (yPts.length - 1);\n\t}\n\treturn zeroIndex;\n}\n\nexport function getRealIntervals(max, noOfIntervals, min = 0, asc = 1) {\n\tlet range = max - min;\n\tlet part = range * 1.0 / noOfIntervals;\n\tlet intervals = [];\n\n\tfor(var i = 0; i <= noOfIntervals; i++) {\n\t\tintervals.push(min + part * i);\n\t}\n\n\treturn asc ? intervals : intervals.reverse();\n}\n\nexport function getIntervalSize(orderedArray) {\n\treturn orderedArray[1] - orderedArray[0];\n}\n\nexport function getValueRange(orderedArray) {\n\treturn orderedArray[orderedArray.length-1] - orderedArray[0];\n}\n\nexport function scale(val, yAxis) {\n\treturn floatTwo(yAxis.zeroLine - val * yAxis.scaleMultiplier);\n}\n\nexport function calcDistribution(values, distributionSize) {\n\t// Assume non-negative values,\n\t// implying distribution minimum at zero\n\n\tlet dataMaxValue = Math.max(...values);\n\n\tlet distributionStep = 1 / (distributionSize - 1);\n\tlet distribution = [];\n\n\tfor(var i = 0; i < distributionSize; i++) {\n\t\tlet checkpoint = dataMaxValue * (distributionStep * i);\n\t\tdistribution.push(checkpoint);\n\t}\n\n\treturn distribution;\n}\n\nexport function getMaxCheckpoint(value, distribution) {\n\treturn distribution.filter(d => d < value).length;\n}\n","import { fillArray } from '../utils/helpers';\nimport { DEFAULT_AXIS_CHART_TYPE, AXIS_DATASET_CHART_TYPES, DEFAULT_CHAR_WIDTH } from '../utils/constants';\n\nexport function dataPrep(data, type) {\n\tdata.labels = data.labels || [];\n\n\tlet datasetLength = data.labels.length;\n\n\t// Datasets\n\tlet datasets = data.datasets;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\tif(!datasets) {\n\t\t// default\n\t\tdatasets = [{\n\t\t\tvalues: zeroArray\n\t\t}];\n\t}\n\n\tdatasets.map(d=> {\n\t\t// Set values\n\t\tif(!d.values) {\n\t\t\td.values = zeroArray;\n\t\t} else {\n\t\t\t// Check for non values\n\t\t\tlet vals = d.values;\n\t\t\tvals = vals.map(val => (!isNaN(val) ? val : 0));\n\n\t\t\t// Trim or extend\n\t\t\tif(vals.length > datasetLength) {\n\t\t\t\tvals = vals.slice(0, datasetLength);\n\t\t\t} else {\n\t\t\t\tvals = fillArray(vals, datasetLength - vals.length, 0);\n\t\t\t}\n\t\t}\n\n\t\t// Set labels\n\t\t//\n\n\t\t// Set type\n\t\tif(!d.chartType ) {\n\t\t\tif(!AXIS_DATASET_CHART_TYPES.includes(type)) type === DEFAULT_AXIS_CHART_TYPE;\n\t\t\td.chartType = type;\n\t\t}\n\n\t});\n\n\t// Markers\n\n\t// Regions\n\t// data.yRegions = data.yRegions || [];\n\tif(data.yRegions) {\n\t\tdata.yRegions.map(d => {\n\t\t\tif(d.end < d.start) {\n\t\t\t\t[d.start, d.end] = [d.end, d.start];\n\t\t\t}\n\t\t});\n\t}\n\n\treturn data;\n}\n\nexport function zeroDataPrep(realData) {\n\tlet datasetLength = realData.labels.length;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\n\tlet zeroData = {\n\t\tlabels: realData.labels.slice(0, -1),\n\t\tdatasets: realData.datasets.map(d => {\n\t\t\treturn {\n\t\t\t\tname: '',\n\t\t\t\tvalues: zeroArray.slice(0, -1),\n\t\t\t\tchartType: d.chartType\n\t\t\t};\n\t\t}),\n\t};\n\n\tif(realData.yMarkers) {\n\t\tzeroData.yMarkers = [\n\t\t\t{\n\t\t\t\tvalue: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\tif(realData.yRegions) {\n\t\tzeroData.yRegions = [\n\t\t\t{\n\t\t\t\tstart: 0,\n\t\t\t\tend: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\treturn zeroData;\n}\n\nexport function getShortenedLabels(chartWidth, labels=[], isSeries=true) {\n\tlet allowedSpace = chartWidth / labels.length;\n\tlet allowedLetters = allowedSpace / DEFAULT_CHAR_WIDTH;\n\n\tlet calcLabels = labels.map((label, i) => {\n\t\tlabel += \"\";\n\t\tif(label.length > allowedLetters) {\n\n\t\t\tif(!isSeries) {\n\t\t\t\tif(allowedLetters-3 > 0) {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters-3) + \" ...\";\n\t\t\t\t} else {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters) + '..';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet multiple = Math.ceil(label.length/allowedLetters);\n\t\t\t\tif(i % multiple !== 0) {\n\t\t\t\t\tlabel = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn label;\n\t});\n\n\treturn calcLabels;\n}","import '../scss/charts.scss';\n\n// import MultiAxisChart from './charts/MultiAxisChart';\nimport PercentageChart from './charts/PercentageChart';\nimport PieChart from './charts/PieChart';\nimport Heatmap from './charts/Heatmap';\nimport AxisChart from './charts/AxisChart';\n\nconst chartTypes = {\n\t// multiaxis: MultiAxisChart,\n\tpercentage: PercentageChart,\n\theatmap: Heatmap,\n\tpie: PieChart\n};\n\nfunction getChartByType(chartType = 'line', parent, options) {\n\tif(chartType === 'line') {\n\t\toptions.type = 'line';\n\t\treturn new AxisChart(parent, options);\n\t} else if (chartType === 'bar') {\n\t\toptions.type = 'bar';\n\t\treturn new AxisChart(parent, options);\n\t} else if (chartType === 'axis-mixed') {\n\t\toptions.type = 'line';\n\t\treturn new AxisChart(parent, options);\n\t}\n\n\tif (!chartTypes[chartType]) {\n\t\tconsole.error(\"Undefined chart type: \" + chartType);\n\t\treturn;\n\t}\n\n\treturn new chartTypes[chartType](parent, options);\n}\n\nclass Chart {\n\tconstructor(parent, options) {\n\t\treturn getChartByType(options.type, parent, options);\n\t}\n}\n\nexport { Chart, PercentageChart, PieChart, Heatmap, AxisChart };","import { $ } from '../utils/dom';\n\nexport default class SvgTip {\n\tconstructor({\n\t\tparent = null,\n\t\tcolors = []\n\t}) {\n\t\tthis.parent = parent;\n\t\tthis.colors = colors;\n\t\tthis.titleName = '';\n\t\tthis.titleValue = '';\n\t\tthis.listValues = [];\n\t\tthis.titleValueFirst = 0;\n\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\n\t\tthis.top = 0;\n\t\tthis.left = 0;\n\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tthis.makeTooltip();\n\t}\n\n\trefresh() {\n\t\tthis.fill();\n\t\tthis.calcPosition();\n\t\t// this.showTip();\n\t}\n\n\tmakeTooltip() {\n\t\tthis.container = $.create('div', {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'graph-svg-tip comparison',\n\t\t\tinnerHTML: `<span class=\"title\"></span>\n\t\t\t\t<ul class=\"data-point-list\"></ul>\n\t\t\t\t<div class=\"svg-pointer\"></div>`\n\t\t});\n\t\tthis.hideTip();\n\n\t\tthis.title = this.container.querySelector('.title');\n\t\tthis.dataPointList = this.container.querySelector('.data-point-list');\n\n\t\tthis.parent.addEventListener('mouseleave', () => {\n\t\t\tthis.hideTip();\n\t\t});\n\t}\n\n\tfill() {\n\t\tlet title;\n\t\tif(this.index) {\n\t\t\tthis.container.setAttribute('data-point-index', this.index);\n\t\t}\n\t\tif(this.titleValueFirst) {\n\t\t\ttitle = `<strong>${this.titleValue}</strong>${this.titleName}`;\n\t\t} else {\n\t\t\ttitle = `${this.titleName}<strong>${this.titleValue}</strong>`;\n\t\t}\n\t\tthis.title.innerHTML = title;\n\t\tthis.dataPointList.innerHTML = '';\n\n\t\tthis.listValues.map((set, i) => {\n\t\t\tconst color = this.colors[i] || 'black';\n\n\t\t\tlet li = $.create('li', {\n\t\t\t\tstyles: {\n\t\t\t\t\t'border-top': `3px solid ${color}`\n\t\t\t\t},\n\t\t\t\tinnerHTML: `<strong style=\"display: block;\">${ set.value === 0 || set.value ? set.value : '' }</strong>\n\t\t\t\t\t${set.title ? set.title : '' }`\n\t\t\t});\n\n\t\t\tthis.dataPointList.appendChild(li);\n\t\t});\n\t}\n\n\tcalcPosition() {\n\t\tlet width = this.container.offsetWidth;\n\n\t\tthis.top = this.y - this.container.offsetHeight;\n\t\tthis.left = this.x - width/2;\n\t\tlet maxLeft = this.parent.offsetWidth - width;\n\n\t\tlet pointer = this.container.querySelector('.svg-pointer');\n\n\t\tif(this.left < 0) {\n\t\t\tpointer.style.left = `calc(50% - ${-1 * this.left}px)`;\n\t\t\tthis.left = 0;\n\t\t} else if(this.left > maxLeft) {\n\t\t\tlet delta = this.left - maxLeft;\n\t\t\tlet pointerOffset = `calc(50% + ${delta}px)`;\n\t\t\tpointer.style.left = pointerOffset;\n\n\t\t\tthis.left = maxLeft;\n\t\t} else {\n\t\t\tpointer.style.left = `50%`;\n\t\t}\n\t}\n\n\tsetValues(x, y, title = {}, listValues = [], index = -1) {\n\t\tthis.titleName = title.name;\n\t\tthis.titleValue = title.value;\n\t\tthis.listValues = listValues;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.titleValueFirst = title.valueFirst || 0;\n\t\tthis.index = index;\n\t\tthis.refresh();\n\t}\n\n\thideTip() {\n\t\tthis.container.style.top = '0px';\n\t\tthis.container.style.left = '0px';\n\t\tthis.container.style.opacity = '0';\n\t}\n\n\tshowTip() {\n\t\tthis.container.style.top = this.top + 'px';\n\t\tthis.container.style.left = this.left + 'px';\n\t\tthis.container.style.opacity = '1';\n\t}\n}\n","export const ALL_CHART_TYPES = ['line', 'scatter', 'bar', 'percentage', 'heatmap', 'pie'];\n\nexport const COMPATIBLE_CHARTS = {\n\tbar: ['line', 'scatter', 'percentage', 'pie'],\n\tline: ['scatter', 'bar', 'percentage', 'pie'],\n\tpie: ['line', 'scatter', 'percentage', 'bar'],\n\tpercentage: ['bar', 'line', 'scatter', 'pie'],\n\theatmap: []\n};\n\nexport const DATA_COLOR_DIVISIONS = {\n\tbar: 'datasets',\n\tline: 'datasets',\n\tpie: 'labels',\n\tpercentage: 'labels',\n\theatmap: HEATMAP_DISTRIBUTION_SIZE\n};\n\nexport const BASE_CHART_TOP_MARGIN = 10;\nexport const BASE_CHART_LEFT_MARGIN = 20;\nexport const BASE_CHART_RIGHT_MARGIN = 20;\n\nexport const Y_AXIS_LEFT_MARGIN = 60;\nexport const Y_AXIS_RIGHT_MARGIN = 40;\n\nexport const INIT_CHART_UPDATE_TIMEOUT = 700;\nexport const CHART_POST_ANIMATE_TIMEOUT = 400;\n\nexport const DEFAULT_AXIS_CHART_TYPE = 'line';\nexport const AXIS_DATASET_CHART_TYPES = ['line', 'bar'];\n\nexport const AXIS_LEGEND_BAR_SIZE = 100;\n\nexport const BAR_CHART_SPACE_RATIO = 0.5;\nexport const MIN_BAR_PERCENT_HEIGHT = 0.01;\n\nexport const LINE_CHART_DOT_SIZE = 4;\nexport const DOT_OVERLAY_SIZE_INCR = 4;\n\nexport const PERCENTAGE_BAR_DEFAULT_HEIGHT = 20;\n\n// Fixed 5-color theme,\n// More colors are difficult to parse visually\nexport const HEATMAP_DISTRIBUTION_SIZE = 5;\n\nexport const HEATMAP_SQUARE_SIZE = 10;\nexport const HEATMAP_GUTTER_SIZE = 2;\n\nexport const DEFAULT_CHAR_WIDTH = 7;\n\nconst HEATMAP_COLORS = ['#ebedf0', '#c6e48b', '#7bc96f', '#239a3b', '#196127'];\nconst DEFAULT_CHART_COLORS = ['light-blue', 'blue', 'violet', 'red', 'orange',\n\t'yellow', 'green', 'light-green', 'purple', 'magenta', 'light-grey', 'dark-grey'];\n\nexport const DEFAULT_COLORS = {\n\tbar: DEFAULT_CHART_COLORS,\n\tline: DEFAULT_CHART_COLORS,\n\tpie: DEFAULT_CHART_COLORS,\n\tpercentage: DEFAULT_CHART_COLORS,\n\theatmap: HEATMAP_COLORS\n};\n\n// Universal constants\nexport const ANGLE_RATIO = Math.PI / 180;\nexport const FULL_ANGLE = 360;","import SvgTip from '../objects/SvgTip';\nimport { $, isElementInViewport, getElementContentWidth } from '../utils/dom';\nimport { makeSVGContainer, makeSVGDefs, makeSVGGroup, makeText, AXIS_TICK_LENGTH } from '../utils/draw';\nimport { BASE_CHART_TOP_MARGIN, BASE_CHART_LEFT_MARGIN,\n\tBASE_CHART_RIGHT_MARGIN, INIT_CHART_UPDATE_TIMEOUT, CHART_POST_ANIMATE_TIMEOUT, DEFAULT_COLORS,\n\tALL_CHART_TYPES, COMPATIBLE_CHARTS, DATA_COLOR_DIVISIONS} from '../utils/constants';\nimport { getColor, isValidColor } from '../utils/colors';\nimport { runSMILAnimation } from '../utils/animation';\nimport { Chart } from '../chart';\n\nexport default class BaseChart {\n\tconstructor(parent, options) {\n\n\t\tthis.parent = typeof parent === 'string'\n\t\t\t? document.querySelector(parent)\n\t\t\t: parent;\n\n\t\tif (!(this.parent instanceof HTMLElement)) {\n\t\t\tthrow new Error('No `parent` element to render on was provided.');\n\t\t}\n\n\t\tthis.rawChartArgs = options;\n\n\t\tthis.title = options.title || '';\n\t\tthis.argHeight = options.height || 240;\n\t\tthis.type = options.type || '';\n\n\t\tthis.realData = this.prepareData(options.data);\n\t\tthis.data = this.prepareFirstData(this.realData);\n\n\t\tthis.colors = this.validateColors(options.colors, this.type);\n\n\t\tthis.config = {\n\t\t\tshowTooltip: 1, // calculate\n\t\t\tshowLegend: options.showLegend || 1,\n\t\t\tisNavigable: options.isNavigable || 0,\n\t\t\tanimate: 1\n\t\t};\n\t\tthis.state = {};\n\t\tthis.options = {};\n\n\t\tthis.initTimeout = INIT_CHART_UPDATE_TIMEOUT;\n\n\t\tif(this.config.isNavigable) {\n\t\t\tthis.overlays = [];\n\t\t}\n\n\t\tthis.configure(options);\n\t}\n\n\tconfigure() {\n\t\tthis.setMargins();\n\n\t\t// Bind window events\n\t\twindow.addEventListener('resize', () => this.draw(true));\n\t\twindow.addEventListener('orientationchange', () => this.draw(true));\n\t}\n\n\tvalidateColors(colors, type) {\n\t\tconst validColors = [];\n\t\tcolors = (colors || []).concat(DEFAULT_COLORS[type]);\n\t\tcolors.forEach((string) => {\n\t\t\tconst color = getColor(string);\n\t\t\tif(!isValidColor(color)) {\n\t\t\t\tconsole.warn('\"' + string + '\" is not a valid color.');\n\t\t\t} else {\n\t\t\t\tvalidColors.push(color);\n\t\t\t}\n\t\t});\n\t\treturn validColors;\n\t}\n\n\tsetMargins() {\n\t\tlet height = this.argHeight;\n\t\tthis.baseHeight = height;\n\t\tthis.height = height - 70;\n\t\tthis.topMargin = BASE_CHART_TOP_MARGIN;\n\n\t\t// Horizontal margins\n\t\tthis.leftMargin = BASE_CHART_LEFT_MARGIN;\n\t\tthis.rightMargin = BASE_CHART_RIGHT_MARGIN;\n\t}\n\n\tsetup() {\n\t\tthis.makeContainer();\n\t\tthis.updateWidth();\n\t\tthis.makeTooltip();\n\n\t\tthis.draw(false, true);\n\t}\n\n\tsetupComponents() {\n\t\tthis.components = new Map();\n\t}\n\n\tmakeContainer() {\n\t\t// Chart needs a dedicated parent element\n\t\tthis.parent.innerHTML = '';\n\t\tthis.container = $.create('div', {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'chart-container'\n\t\t});\n\t}\n\n\tmakeTooltip() {\n\t\tthis.tip = new SvgTip({\n\t\t\tparent: this.container,\n\t\t\tcolors: this.colors\n\t\t});\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {}\n\n\tdraw(onlyWidthChange=false, init=false) {\n\t\tthis.calc(onlyWidthChange);\n\t\tthis.updateWidth();\n\t\tthis.makeChartArea();\n\t\tthis.setupComponents();\n\n\t\tthis.components.forEach(c => c.setup(this.drawArea));\n\t\t// this.components.forEach(c => c.make());\n\t\tthis.render(this.components, false);\n\n\t\tif(init) {\n\t\t\tthis.data = this.realData;\n\t\t\tsetTimeout(() => {this.update(this.data);}, this.initTimeout);\n\t\t}\n\n\t\tthis.renderLegend();\n\n\t\tthis.setupNavigation(init);\n\t}\n\n\tupdateWidth() {\n\t\tthis.baseWidth = getElementContentWidth(this.parent);\n\t\tthis.width = this.baseWidth - (this.leftMargin + this.rightMargin);\n\t}\n\n\tupdate(data) {\n\t\tif(!data) {\n\t\t\tconsole.error('No data to update.');\n\t\t}\n\t\tthis.data = this.prepareData(data);\n\t\tthis.calc(); // builds state\n\t\tthis.render();\n\t}\n\n\tprepareData(data=this.data) {\n\t\treturn data;\n\t}\n\n\tprepareFirstData(data=this.data) {\n\t\treturn data;\n\t}\n\n\tcalc() {} // builds state\n\n\trender(components=this.components, animate=true) {\n\t\tif(this.config.isNavigable) {\n\t\t\t// Remove all existing overlays\n\t\t\tthis.overlays.map(o => o.parentNode.removeChild(o));\n\t\t\t// ref.parentNode.insertBefore(element, ref);\n\t\t}\n\t\tlet elementsToAnimate = [];\n\t\t// Can decouple to this.refreshComponents() first to save animation timeout\n\t\tcomponents.forEach(c => {\n\t\t\telementsToAnimate = elementsToAnimate.concat(c.update(animate));\n\t\t});\n\t\tif(elementsToAnimate.length > 0) {\n\t\t\trunSMILAnimation(this.container, this.svg, elementsToAnimate);\n\t\t\tsetTimeout(() => {\n\t\t\t\tcomponents.forEach(c => c.make());\n\t\t\t\tthis.updateNav();\n\t\t\t}, CHART_POST_ANIMATE_TIMEOUT);\n\t\t} else {\n\t\t\tcomponents.forEach(c => c.make());\n\t\t\tthis.updateNav();\n\t\t}\n\t}\n\n\tupdateNav() {\n\t\tif(this.config.isNavigable) {\n\t\t\tthis.makeOverlay();\n\t\t\tthis.bindUnits();\n\t\t}\n\t}\n\n\tmakeChartArea() {\n\t\tif(this.svg) {\n\t\t\tthis.container.removeChild(this.svg);\n\t\t}\n\n\t\tlet titleAreaHeight = 0;\n\t\tlet legendAreaHeight = 0;\n\t\tif(this.title.length) {\n\t\t\ttitleAreaHeight = 30;\n\t\t}\n\t\tif(this.config.showLegend) {\n\t\t\tlegendAreaHeight = 30;\n\t\t}\n\t\tthis.svg = makeSVGContainer(\n\t\t\tthis.container,\n\t\t\t'frappe-chart chart',\n\t\t\tthis.baseWidth,\n\t\t\tthis.baseHeight + titleAreaHeight + legendAreaHeight\n\t\t);\n\t\tthis.svgDefs = makeSVGDefs(this.svg);\n\n\t\t// console.log(this.baseHeight, titleAreaHeight, legendAreaHeight);\n\n\t\tif(this.title.length) {\n\t\t\tthis.titleEL = makeText(\n\t\t\t\t'title',\n\t\t\t\tthis.leftMargin - AXIS_TICK_LENGTH,\n\t\t\t\tthis.topMargin,\n\t\t\t\tthis.title,\n\t\t\t\t11\n\t\t\t);\n\t\t\tthis.svg.appendChild(this.titleEL);\n\t\t}\n\n\t\tlet top = this.topMargin + titleAreaHeight;\n\t\tthis.drawArea = makeSVGGroup(\n\t\t\tthis.svg,\n\t\t\tthis.type + '-chart',\n\t\t\t`translate(${this.leftMargin}, ${top})`\n\t\t);\n\n\t\ttop = this.baseHeight - titleAreaHeight;\n\t\tthis.legendArea = makeSVGGroup(\n\t\t\tthis.svg,\n\t\t\t'chart-legend',\n\t\t\t`translate(${this.leftMargin}, ${top})`\n\t\t);\n\t}\n\n\trenderLegend() {}\n\n\tsetupNavigation(init=false) {\n\t\tif(!this.config.isNavigable) return;\n\n\t\tif(init) {\n\t\t\tthis.bindOverlay();\n\n\t\t\tthis.keyActions = {\n\t\t\t\t'13': this.onEnterKey.bind(this),\n\t\t\t\t'37': this.onLeftArrow.bind(this),\n\t\t\t\t'38': this.onUpArrow.bind(this),\n\t\t\t\t'39': this.onRightArrow.bind(this),\n\t\t\t\t'40': this.onDownArrow.bind(this),\n\t\t\t};\n\n\t\t\tdocument.addEventListener('keydown', (e) => {\n\t\t\t\tif(isElementInViewport(this.container)) {\n\t\t\t\t\te = e || window.event;\n\t\t\t\t\tif(this.keyActions[e.keyCode]) {\n\t\t\t\t\t\tthis.keyActions[e.keyCode]();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tmakeOverlay() {}\n\tupdateOverlay() {}\n\tbindOverlay() {}\n\tbindUnits() {}\n\n\tonLeftArrow() {}\n\tonRightArrow() {}\n\tonUpArrow() {}\n\tonDownArrow() {}\n\tonEnterKey() {}\n\n\taddDataPoint() {}\n\tremoveDataPoint() {}\n\n\tgetDataPoint() {}\n\tsetCurrentDataPoint() {}\n\n\tupdateDataset() {}\n\n\tgetDifferentChart(type) {\n\t\tconst currentType = this.type;\n\t\tlet args = this.rawChartArgs;\n\t\tif(type === currentType) return;\n\n\t\tif(!ALL_CHART_TYPES.includes(type)) {\n\t\t\tconsole.error(`'${type}' is not a valid chart type.`);\n\t\t}\n\n\t\tif(!COMPATIBLE_CHARTS[currentType].includes(type)) {\n\t\t\tconsole.error(`'${currentType}' chart cannot be converted to a '${type}' chart.`);\n\t\t}\n\n\t\t// whether the new chart can use the existing colors\n\t\tconst useColor = DATA_COLOR_DIVISIONS[currentType] === DATA_COLOR_DIVISIONS[type];\n\n\t\t// Okay, this is anticlimactic\n\t\t// this function will need to actually be 'changeChartType(type)'\n\t\t// that will update only the required elements, but for now ...\n\n\t\targs.type = type;\n\t\targs.colors = useColor ? args.colors : undefined;\n\n\t\treturn new Chart(this.parent, args);\n\t}\n\n\tunbindWindowEvents(){\n\t\twindow.removeEventListener('resize', () => this.draw(true));\n\t\twindow.removeEventListener('orientationchange', () => this.draw(true));\n\t}\n}\n","import BaseChart from './BaseChart';\n\nexport default class AggregationChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\n\t\tthis.config.maxSlices = args.maxSlices || 20;\n\t\tthis.config.maxLegendPoints = args.maxLegendPoints || 20;\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\t\tlet maxSlices = this.config.maxSlices;\n\t\ts.sliceTotals = [];\n\n\t\tlet allTotals = this.data.labels.map((label, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, label];\n\t\t}).filter(d => { return d[0] > 0; }); // keep only positive results\n\n\t\tlet totals = allTotals;\n\t\tif(allTotals.length > maxSlices) {\n\t\t\t// Prune and keep a grey area for rest as per maxSlices\n\t\t\tallTotals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = allTotals.slice(0, maxSlices-1);\n\t\t\tlet remaining = allTotals.slice(maxSlices-1);\n\n\t\t\tlet sumOfRemaining = 0;\n\t\t\tremaining.map(d => {sumOfRemaining += d[0];});\n\t\t\ttotals.push([sumOfRemaining, 'Rest']);\n\t\t\tthis.colors[maxSlices-1] = 'grey';\n\t\t}\n\n\t\ts.labels = [];\n\t\ttotals.map(d => {\n\t\t\ts.sliceTotals.push(d[0]);\n\t\t\ts.labels.push(d[1]);\n\t\t});\n\n\t\ts.grandTotal = s.sliceTotals.reduce((a, b) => a + b, 0);\n\t}\n\n\trenderLegend() {\n\t\t// let s = this.state;\n\n\t\t// this.statsWrapper.textContent = '';\n\n\t\t// this.legendTotals = s.sliceTotals.slice(0, this.config.maxLegendPoints);\n\n\t\t// let xValues = s.labels;\n\t\t// this.legendTotals.map((d, i) => {\n\t\t// \tif(d) {\n\t\t// \t\tlet stats = $.create('div', {\n\t\t// \t\t\tclassName: 'stats',\n\t\t// \t\t\tinside: this.statsWrapper\n\t\t// \t\t});\n\t\t// \t\tstats.innerHTML = `<span class=\"indicator\">\n\t\t// \t\t\t<i style=\"background: ${this.colors[i]}\"></i>\n\t\t// \t\t\t<span class=\"text-muted\">${xValues[i]}:</span>\n\t\t// \t\t\t${d}\n\t\t// \t\t</span>`;\n\t\t// \t}\n\t\t// });\n\n\t\t//\n\t}\n}\n","import AggregationChart from './AggregationChart';\nimport { $, getOffset } from '../utils/dom';\nimport { getComponent } from '../objects/ChartComponents';\nimport { PERCENTAGE_BAR_DEFAULT_HEIGHT } from '../utils/constants';\n\nexport default class PercentageChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'percentage';\n\n\t\tthis.barOptions = args.barOptions || {};\n\t\tthis.barOptions.height = this.barOptions.height\n\t\t\t|| PERCENTAGE_BAR_DEFAULT_HEIGHT;\n\n\t\tthis.setup();\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'percentageBars',\n\t\t\t\t{\n\t\t\t\t\tbarHeight: this.barOptions.height\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: s.xPositions,\n\t\t\t\t\t\twidths: s.widths,\n\t\t\t\t\t\tcolors: this.colors\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\n\t\ts.xPositions = [];\n\t\ts.widths = [];\n\n\t\tlet xPos = 0;\n\t\ts.sliceTotals.map((value, i) => {\n\t\t\tlet width = this.width * value / s.grandTotal;\n\t\t\ts.widths.push(width);\n\t\t\ts.xPositions.push(xPos);\n\t\t\txPos += width;\n\t\t});\n\t}\n\n\tbindTooltip() {\n\t\tlet s = this.state;\n\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tlet slice = e.target;\n\t\t\tif(slice.classList.contains('progress-bar')) {\n\n\t\t\t\tlet i = slice.getAttribute('data-index');\n\t\t\t\tlet gOff = getOffset(this.container), pOff = getOffset(slice);\n\n\t\t\t\tlet x = pOff.left - gOff.left + slice.offsetWidth/2;\n\t\t\t\tlet y = pOff.top - gOff.top - 6;\n\t\t\t\tlet title = (this.formattedLabels && this.formattedLabels.length>0\n\t\t\t\t\t? this.formattedLabels[i] : this.state.labels[i]) + ': ';\n\t\t\t\tlet percent = (s.sliceTotals[i]*100/this.grandTotal).toFixed(1);\n\n\t\t\t\tthis.tip.setValues(x, y, {name: title, value: percent + \"%\"});\n\t\t\t\tthis.tip.showTip();\n\t\t\t}\n\t\t});\n\t}\n}\n","import AggregationChart from './AggregationChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset } from '../utils/dom';\nimport { getPositionByAngle } from '../utils/helpers';\nimport { makeArcPathStr } from '../utils/draw';\nimport { lightenDarkenColor } from '../utils/colors';\nimport { transform } from '../utils/animation';\nimport { FULL_ANGLE } from '../utils/constants';\n\nexport default class PieChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'pie';\n\t\tthis.initTimeout = 0;\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.config.startAngle = args.startAngle || 0;\n\n\t\tthis.clockWise = args.clockWise || false;\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\n\t\tthis.center = {\n\t\t\tx: this.width / 2,\n\t\t\ty: this.height / 2\n\t\t};\n\t\tthis.radius = (this.height > this.width ? this.center.x : this.center.y);\n\n\t\tthis.calcSlices();\n\t}\n\n\tcalcSlices() {\n\t\tlet s = this.state;\n\t\tconst { radius, clockWise } = this;\n\n\t\tconst prevSlicesProperties = s.slicesProperties || [];\n\t\ts.sliceStrings = [];\n\t\ts.slicesProperties = [];\n\t\tlet curAngle = 180 - this.config.startAngle;\n\n\t\ts.sliceTotals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / s.grandTotal) * FULL_ANGLE;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = getPositionByAngle(startAngle, radius);\n\t\t\tconst endPosition = getPositionByAngle(endAngle, radius);\n\n\t\t\tconst prevProperty = this.init && prevSlicesProperties[i];\n\n\t\t\tlet curStart,curEnd;\n\t\t\tif(this.init) {\n\t\t\t\tcurStart = prevProperty ? prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty ? prevProperty.endPosition : startPosition;\n\t\t\t} else {\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath = makeArcPathStr(curStart, curEnd, this.center, this.radius, this.clockWise);\n\n\t\t\ts.sliceStrings.push(curPath);\n\t\t\ts.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: s.grandTotal,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle: diffAngle\n\t\t\t});\n\n\t\t});\n\t\tthis.init = 0;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'pieSlices',\n\t\t\t\t{ },\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsliceStrings: s.sliceStrings,\n\t\t\t\t\t\tcolors: this.colors\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalTranslateByAngle(property){\n\t\tconst{radius,hoverRadio} = this;\n\t\tconst position = getPositionByAngle(property.startAngle+(property.angle / 2),radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\n\thoverSlice(path,i,flag,e){\n\t\tif(!path) return;\n\t\tconst color = this.colors[i];\n\t\tif(flag) {\n\t\t\ttransform(path, this.calTranslateByAngle(this.state.slicesProperties[i]));\n\t\t\tpath.style.fill = lightenDarkenColor(color, 50);\n\t\t\tlet g_off = getOffset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t\t? this.formatted_labels[i] : this.state.labels[i]) + ': ';\n\t\t\tlet percent = (this.state.sliceTotals[i] * 100 / this.state.grandTotal).toFixed(1);\n\t\t\tthis.tip.setValues(x, y, {name: title, value: percent + \"%\"});\n\t\t\tthis.tip.showTip();\n\t\t} else {\n\t\t\ttransform(path,'translate3d(0,0,0)');\n\t\t\tthis.tip.hideTip();\n\t\t\tpath.style.fill = color;\n\t\t}\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', this.mouseMove);\n\t\tthis.container.addEventListener('mouseleave', this.mouseLeave);\n\t}\n\n\tmouseMove(e){\n\t\tconst target = e.target;\n\t\tlet slices = this.components.get('pieSlices').store;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevAcitve = this.curActiveSlice;\n\t\tif(slices.includes(target)) {\n\t\t\tlet i = slices.indexOf(target);\n\t\t\tthis.hoverSlice(prevAcitve, prevIndex,false);\n\t\t\tthis.curActiveSlice = target;\n\t\t\tthis.curActiveSliceIndex = i;\n\t\t\tthis.hoverSlice(target, i, true, e);\n\t\t} else {\n\t\t\tthis.mouseLeave();\n\t\t}\n\t}\n\n\tmouseLeave(){\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { makeSVGGroup, makeText } from '../utils/draw';\nimport { getComponent } from '../objects/ChartComponents';\nimport { addDays, areInSameMonth, getLastDateInMonth, setDayToSunday, getYyyyMmDd, getWeeksBetween, getMonthName, clone,\n\tNO_OF_MILLIS, NO_OF_YEAR_MONTHS, NO_OF_DAYS_IN_WEEK } from '../utils/date-utils';\nimport { calcDistribution, getMaxCheckpoint } from '../utils/intervals';\nimport { HEATMAP_DISTRIBUTION_SIZE, HEATMAP_SQUARE_SIZE,\n\tHEATMAP_GUTTER_SIZE } from '../utils/constants';\n\nconst COL_WIDTH = HEATMAP_SQUARE_SIZE + HEATMAP_GUTTER_SIZE;\nconst ROW_HEIGHT = COL_WIDTH;\nconst DAY_INCR = 1;\n\nexport default class Heatmap extends BaseChart {\n\tconstructor(parent, options) {\n\t\tsuper(parent, options);\n\t\tthis.type = 'heatmap';\n\n\t\tthis.discreteDomains = options.discreteDomains === 0 ? 0 : 1;\n\t\tthis.countLabel = options.countLabel || '';\n\n\t\tlet validStarts = ['Sunday', 'Monday'];\n\t\tlet startSubDomain = validStarts.includes(options.startSubDomain)\n\t\t\t? options.startSubDomain : 'Sunday';\n\t\tthis.startSubDomainIndex = validStarts.indexOf(startSubDomain);\n\n\t\tthis.setup();\n\t}\n\n\tupdateWidth() {\n\t\tthis.baseWidth = (this.state.noOfWeeks + 99) * COL_WIDTH;\n\n\t\tif(this.discreteDomains) {\n\t\t\tthis.baseWidth += (COL_WIDTH * NO_OF_YEAR_MONTHS);\n\t\t}\n\t}\n\n\tprepareData(data=this.data) {\n\t\tif(data.start && data.end && data.start > data.end) {\n\t\t\tthrow new Error('Start date cannot be greater than end date.');\n\t\t}\n\n\t\tif(!data.start) {\n\t\t\tdata.start = new Date();\n\t\t\tdata.start.setFullYear( data.start.getFullYear() - 1 );\n\t\t}\n\t\tif(!data.end) { data.end = new Date(); }\n\t\tdata.dataPoints = data.dataPoints || {};\n\n\t\tif(parseInt(Object.keys(data.dataPoints)[0]) > 100000) {\n\t\t\tlet points = {};\n\t\t\tObject.keys(data.dataPoints).forEach(timestampSec => {\n\t\t\t\tlet date = new Date(timestampSec * NO_OF_MILLIS);\n\t\t\t\tpoints[getYyyyMmDd(date)] = data.dataPoints[timestampSec];\n\t\t\t});\n\t\t\tdata.dataPoints = points;\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\n\t\ts.start = this.data.start;\n\t\ts.end = this.data.end;\n\n\t\ts.firstWeekStart = setDayToSunday(s.start);\n\t\ts.noOfWeeks = getWeeksBetween(s.start, s.end);\n\t\ts.distribution = calcDistribution(\n\t\t\tObject.values(this.data.dataPoints), HEATMAP_DISTRIBUTION_SIZE);\n\n\t\ts.domainConfigs = this.getDomains();\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = s.domainConfigs.map((config, i) => [\n\t\t\t'heatDomain',\n\t\t\t{\n\t\t\t\tindex: i,\n\t\t\t\tcolWidth: COL_WIDTH,\n\t\t\t\trowHeight: ROW_HEIGHT,\n\t\t\t\tsquareSize: HEATMAP_SQUARE_SIZE,\n\t\t\t\txTranslate: s.domainConfigs\n\t\t\t\t\t.filter((config, j) => j < i)\n\t\t\t\t\t.map(config => config.cols.length - 1)\n\t\t\t\t\t.reduce((a, b) => a + b, 0)\n\t\t\t\t\t* COL_WIDTH\n\t\t\t},\n\t\t\tfunction() {\n\t\t\t\treturn s.domainConfigs[i];\n\t\t\t}.bind(this)\n\n\t\t])\n\n\t\t// console.log(s.domainConfigs)\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map((args, i) => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0] + '-' + i, component];\n\t\t\t}));\n\t}\n\n\tupdate(data) {\n\t\tif(!data) {\n\t\t\tconsole.error('No data to update.');\n\t\t}\n\t\tthis.data = this.prepareData(data);\n\t\tthis.draw();\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {\n\t\tArray.prototype.slice.call(\n\t\t\tdocument.querySelectorAll(\".data-group .day\")\n\t\t).map(el => {\n\t\t\tel.addEventListener('mouseenter', (e) => {\n\t\t\t\tlet count = e.target.getAttribute('data-value');\n\t\t\t\tlet dateParts = e.target.getAttribute('data-date').split('-');\n\n\t\t\t\tlet month = getMonthName(parseInt(dateParts[1])-1, true);\n\n\t\t\t\tlet gOff = this.container.getBoundingClientRect(), pOff = e.target.getBoundingClientRect();\n\n\t\t\t\tlet width = parseInt(e.target.getAttribute('width'));\n\t\t\t\tlet x = pOff.left - gOff.left + (width+2)/2;\n\t\t\t\tlet y = pOff.top - gOff.top - (width+2)/2;\n\t\t\t\tlet value = count + ' ' + this.countLabel;\n\t\t\t\tlet name = ' on ' + month + ' ' + dateParts[0] + ', ' + dateParts[2];\n\n\t\t\t\tthis.tip.setValues(x, y, {name: name, value: value, valueFirst: 1}, []);\n\t\t\t\tthis.tip.showTip();\n\t\t\t});\n\t\t});\n\t}\n\n\tgetDomains() {\n\t\tlet s = this.state;\n\t\tconst [startMonth, startYear] = [s.start.getMonth(), s.start.getFullYear()];\n\t\tconst [endMonth, endYear] = [s.end.getMonth(), s.end.getFullYear()];\n\n\t\tconst noOfMonths = (endMonth - startMonth + 1) + (endYear - startYear) * 12;\n\n\t\tlet domainConfigs = [];\n\n\t\tlet startOfMonth = clone(s.start);\n\t\tfor(var i = 0; i < noOfMonths; i++) {\n\t\t\tlet endDate = s.end;\n\t\t\tif(!areInSameMonth(startOfMonth, s.end)) {\n\t\t\t\tlet [month, year] = [startOfMonth.getMonth(), startOfMonth.getFullYear()];\n\t\t\t\tendDate = getLastDateInMonth(month, year);\n\t\t\t}\n\t\t\tdomainConfigs.push(this.getDomainConfig(startOfMonth, endDate));\n\n\t\t\taddDays(endDate, 1);\n\t\t\tstartOfMonth = endDate;\n\t\t}\n\n\t\treturn domainConfigs;\n\t}\n\n\tgetDomainConfig(startDate, endDate='') {\n\t\tlet [month, year] = [startDate.getMonth(), startDate.getFullYear()];\n\t\tlet startOfWeek = setDayToSunday(startDate);\n\t\tendDate = clone(endDate) || getLastDateInMonth(month, year);\n\n\t\tlet s = this.state;\n\t\tlet domainConfig = {\n\t\t\tindex: month,\n\t\t\tcols: []\n\t\t};\n\n\t\tlet noOfMonthWeeks = getWeeksBetween(startOfWeek, endDate);\n\n\t\tlet cols = [];\n\t\tfor(var i = 0; i < noOfMonthWeeks; i++) {\n\t\t\tconst col = this.getCol(startOfWeek, month);\n\t\t\tcols.push(col);\n\n\t\t\tstartOfWeek = new Date(col[NO_OF_DAYS_IN_WEEK - 1].yyyyMmDd);\n\t\t\taddDays(startOfWeek, 1);\n\t\t}\n\n\t\tif(startOfWeek.getDay() === this.startSubDomainIndex) {\n\t\t\taddDays(startOfWeek, 1);\n\t\t\tcols.push(this.getCol(startOfWeek, month, true));\n\t\t}\n\n\t\tdomainConfig.cols = cols;\n\n\t\treturn domainConfig;\n\t}\n\n\tgetCol(startDate, month, empty = false) {\n\t\t// startDate is the start of week\n\t\tlet currentDate = clone(startDate);\n\t\tlet col = [];\n\n\t\tfor(var i = 0; i < NO_OF_DAYS_IN_WEEK; i++, addDays(currentDate, 1)) {\n\t\t\tlet config = {};\n\t\t\tif(empty || currentDate.getMonth() !== month) {\n\t\t\t\tconfig.yyyyMmDd = getYyyyMmDd(currentDate);\n\t\t\t} else {\n\t\t\t\tconfig = this.getSubDomainConfig(currentDate);\n\t\t\t}\n\t\t\tcol.push(config);\n\t\t}\n\n\t\treturn col;\n\t}\n\n\tgetSubDomainConfig(date) {\n\t\tlet yyyyMmDd = getYyyyMmDd(date);\n\t\tlet dataValue = this.data.dataPoints[yyyyMmDd];\n\t\tlet config = {\n\t\t\tyyyyMmDd: yyyyMmDd,\n\t\t\tdataValue: dataValue || 0,\n\t\t\tfill: this.colors[getMaxCheckpoint(dataValue, this.state.distribution)]\n\t\t}\n\t\treturn config;\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { dataPrep, zeroDataPrep, getShortenedLabels } from '../utils/axis-chart-utils';\nimport { Y_AXIS_LEFT_MARGIN, Y_AXIS_RIGHT_MARGIN, AXIS_LEGEND_BAR_SIZE } from '../utils/constants';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset, fire } from '../utils/dom';\nimport { calcChartIntervals, getIntervalSize, getValueRange, getZeroIndex, scale } from '../utils/intervals';\nimport { floatTwo } from '../utils/helpers';\nimport { makeOverlay, updateOverlay, legendBar } from '../utils/draw';\nimport { MIN_BAR_PERCENT_HEIGHT, BAR_CHART_SPACE_RATIO, LINE_CHART_DOT_SIZE } from '../utils/constants';\n\nexport default class AxisChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\n\t\tthis.barOptions = args.barOptions || {};\n\t\tthis.lineOptions = args.lineOptions || {};\n\n\t\tthis.type = args.type || 'line';\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\n\t\targs.axisOptions = args.axisOptions || {};\n\t\targs.tooltipOptions = args.tooltipOptions || {};\n\n\t\tthis.config.xAxisMode = args.axisOptions.xAxisMode || 'span';\n\t\tthis.config.yAxisMode = args.axisOptions.yAxisMode || 'span';\n\t\tthis.config.xIsSeries = args.axisOptions.xIsSeries || 0;\n\n\t\tthis.config.formatTooltipX = args.tooltipOptions.formatTooltipX;\n\t\tthis.config.formatTooltipY = args.tooltipOptions.formatTooltipY;\n\n\t\tthis.config.valuesOverPoints = args.valuesOverPoints;\n\t}\n\n\tsetMargins() {\n\t\tsuper.setMargins();\n\t\tthis.leftMargin = Y_AXIS_LEFT_MARGIN;\n\t\tthis.rightMargin = Y_AXIS_RIGHT_MARGIN;\n\t}\n\n\tprepareData(data=this.data) {\n\t\treturn dataPrep(data, this.type);\n\t}\n\n\tprepareFirstData(data=this.data) {\n\t\treturn zeroDataPrep(data);\n\t}\n\n\tcalc(onlyWidthChange = false) {\n\t\tthis.calcXPositions();\n\t\tif(onlyWidthChange) return;\n\t\tthis.calcYAxisParameters(this.getAllYValues(), this.type === 'line');\n\t}\n\n\tcalcXPositions() {\n\t\tlet s = this.state;\n\t\tlet labels = this.data.labels;\n\t\ts.datasetLength = labels.length;\n\n\t\ts.unitWidth = this.width/(s.datasetLength);\n\t\t// Default, as per bar, and mixed. Only line will be a special case\n\t\ts.xOffset = s.unitWidth/2;\n\n\t\t// // For a pure Line Chart\n\t\t// s.unitWidth = this.width/(s.datasetLength - 1);\n\t\t// s.xOffset = 0;\n\n\t\ts.xAxis = {\n\t\t\tlabels: labels,\n\t\t\tpositions: labels.map((d, i) =>\n\t\t\t\tfloatTwo(s.xOffset + i * s.unitWidth)\n\t\t\t)\n\t\t};\n\t}\n\n\tcalcYAxisParameters(dataValues, withMinimum = 'false') {\n\t\tconst yPts = calcChartIntervals(dataValues, withMinimum);\n\t\tconst scaleMultiplier = this.height / getValueRange(yPts);\n\t\tconst intervalHeight = getIntervalSize(yPts) * scaleMultiplier;\n\t\tconst zeroLine = this.height - (getZeroIndex(yPts) * intervalHeight);\n\n\t\tthis.state.yAxis = {\n\t\t\tlabels: yPts,\n\t\t\tpositions: yPts.map(d => zeroLine - d * scaleMultiplier),\n\t\t\tscaleMultiplier: scaleMultiplier,\n\t\t\tzeroLine: zeroLine,\n\t\t};\n\n\t\t// Dependent if above changes\n\t\tthis.calcDatasetPoints();\n\t\tthis.calcYExtremes();\n\t\tthis.calcYRegions();\n\t}\n\n\tcalcDatasetPoints() {\n\t\tlet s = this.state;\n\t\tlet scaleAll = values => values.map(val => scale(val, s.yAxis));\n\n\t\ts.datasets = this.data.datasets.map((d, i) => {\n\t\t\tlet values = d.values;\n\t\t\tlet cumulativeYs = d.cumulativeYs || [];\n\t\t\treturn {\n\t\t\t\tname: d.name,\n\t\t\t\tindex: i,\n\t\t\t\tchartType: d.chartType,\n\n\t\t\t\tvalues: values,\n\t\t\t\tyPositions: scaleAll(values),\n\n\t\t\t\tcumulativeYs: cumulativeYs,\n\t\t\t\tcumulativeYPos: scaleAll(cumulativeYs),\n\t\t\t};\n\t\t});\n\t}\n\n\tcalcYExtremes() {\n\t\tlet s = this.state;\n\t\tif(this.barOptions.stacked) {\n\t\t\ts.yExtremes = s.datasets[s.datasets.length - 1].cumulativeYPos;\n\t\t\treturn;\n\t\t}\n\t\ts.yExtremes = new Array(s.datasetLength).fill(9999);\n\t\ts.datasets.map(d => {\n\t\t\td.yPositions.map((pos, j) => {\n\t\t\t\tif(pos < s.yExtremes[j]) {\n\t\t\t\t\ts.yExtremes[j] = pos;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tcalcYRegions() {\n\t\tlet s = this.state;\n\t\tif(this.data.yMarkers) {\n\t\t\tthis.state.yMarkers = this.data.yMarkers.map(d => {\n\t\t\t\td.position = scale(d.value, s.yAxis);\n\t\t\t\t// if(!d.label.includes(':')) {\n\t\t\t\t// \td.label += ': ' + d.value;\n\t\t\t\t// }\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t\tif(this.data.yRegions) {\n\t\t\tthis.state.yRegions = this.data.yRegions.map(d => {\n\t\t\t\td.startPos = scale(d.start, s.yAxis);\n\t\t\t\td.endPos = scale(d.end, s.yAxis);\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t}\n\n\tgetAllYValues() {\n\t\t// TODO: yMarkers, regions, sums, every Y value ever\n\t\tlet key = 'values';\n\n\t\tif(this.barOptions.stacked) {\n\t\t\tkey = 'cumulativeYs';\n\t\t\tlet cumulative = new Array(this.state.datasetLength).fill(0);\n\t\t\tthis.data.datasets.map((d, i) => {\n\t\t\t\tlet values = this.data.datasets[i].values;\n\t\t\t\td[key] = cumulative = cumulative.map((c, i) => c + values[i]);\n\t\t\t});\n\t\t}\n\n\t\tlet allValueLists = this.data.datasets.map(d => d[key]);\n\t\tif(this.data.yMarkers) {\n\t\t\tallValueLists.push(this.data.yMarkers.map(d => d.value));\n\t\t}\n\t\tif(this.data.yRegions) {\n\t\t\tthis.data.yRegions.map(d => {\n\t\t\t\tallValueLists.push([d.end, d.start]);\n\t\t\t});\n\t\t}\n\n\t\treturn [].concat(...allValueLists);\n\t}\n\n\tsetupComponents() {\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'yAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.config.yAxisMode,\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yAxis;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'xAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.config.xAxisMode,\n\t\t\t\t\theight: this.height,\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\ts.xAxis.calcLabels = getShortenedLabels(this.width,\n\t\t\t\t\t\ts.xAxis.labels, this.config.xIsSeries);\n\n\t\t\t\t\treturn s.xAxis;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'yRegions',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yRegions;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\t\t];\n\n\t\tlet barDatasets = this.state.datasets.filter(d => d.chartType === 'bar');\n\t\tlet lineDatasets = this.state.datasets.filter(d => d.chartType === 'line');\n\n\t\tlet barsConfigs = barDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'barGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tstacked: this.barOptions.stacked,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\n\t\t\t\t\tminHeight: this.height * MIN_BAR_PERCENT_HEIGHT,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\t\t\t\t\tlet stacked = this.barOptions.stacked;\n\n\t\t\t\t\tlet spaceRatio = this.barOptions.spaceRatio || BAR_CHART_SPACE_RATIO;\n\t\t\t\t\tlet barsWidth = s.unitWidth * (1 - spaceRatio);\n\t\t\t\t\tlet barWidth = barsWidth/(stacked ? 1 : barDatasets.length);\n\n\t\t\t\t\tlet xPositions = s.xAxis.positions.map(x => x - barsWidth/2);\n\t\t\t\t\tif(!stacked) {\n\t\t\t\t\t\txPositions = xPositions.map(p => p + barWidth * index);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet labels = new Array(s.datasetLength).fill('');\n\t\t\t\t\tif(this.config.valuesOverPoints) {\n\t\t\t\t\t\tif(stacked && d.index === s.datasets.length - 1) {\n\t\t\t\t\t\t\tlabels = d.cumulativeYs;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlabels = d.values;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet offsets = new Array(s.datasetLength).fill(0);\n\t\t\t\t\tif(stacked) {\n\t\t\t\t\t\toffsets = d.yPositions.map((y, j) => y - d.cumulativeYPos[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: xPositions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\t\t\t\t\t\toffsets: offsets,\n\t\t\t\t\t\t// values: d.values,\n\t\t\t\t\t\tlabels: labels,\n\n\t\t\t\t\t\tzeroLine: s.yAxis.zeroLine,\n\t\t\t\t\t\tbarsWidth: barsWidth,\n\t\t\t\t\t\tbarWidth: barWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet lineConfigs = lineDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'lineGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tsvgDefs: this.svgDefs,\n\t\t\t\t\theatline: this.lineOptions.heatline,\n\t\t\t\t\tregionFill: this.lineOptions.regionFill,\n\t\t\t\t\thideDots: this.lineOptions.hideDots,\n\t\t\t\t\thideLine: this.lineOptions.hideLine,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: s.xAxis.positions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\n\t\t\t\t\t\tvalues: d.values,\n\n\t\t\t\t\t\tzeroLine: s.yAxis.zeroLine,\n\t\t\t\t\t\tradius: this.lineOptions.dotSize || LINE_CHART_DOT_SIZE,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet markerConfigs = [\n\t\t\t[\n\t\t\t\t'yMarkers',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yMarkers;\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tcomponentConfigs = componentConfigs.concat(barsConfigs, lineConfigs, markerConfigs);\n\n\t\tlet optionals = ['yMarkers', 'yRegions'];\n\t\tthis.dataUnitComponents = [];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.filter(args => !optionals.includes(args[0]) || this.state[args[0]])\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\tif(args[0].includes('lineGraph') || args[0].includes('barGraph')) {\n\t\t\t\t\tthis.dataUnitComponents.push(component);\n\t\t\t\t}\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tbindTooltip() {\n\t\t// NOTE: could be in tooltip itself, as it is a given functionality for its parent\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tlet o = getOffset(this.container);\n\t\t\tlet relX = e.pageX - o.left - this.leftMargin;\n\t\t\tlet relY = e.pageY - o.top - this.topMargin;\n\n\t\t\tif(relY < this.height + this.topMargin * 2) {\n\t\t\t\tthis.mapTooltipXPosition(relX);\n\t\t\t} else {\n\t\t\t\tthis.tip.hideTip();\n\t\t\t}\n\t\t});\n\t}\n\n\tmapTooltipXPosition(relX) {\n\t\tlet s = this.state;\n\t\tif(!s.yExtremes) return;\n\n\t\tlet formatY = this.config.formatTooltipY;\n\t\tlet formatX = this.config.formatTooltipX;\n\n\t\tlet titles = s.xAxis.labels;\n\t\tif(formatX && formatX(titles[0])) {\n\t\t\ttitles = titles.map(d=>formatX(d));\n\t\t}\n\n\t\tformatY = formatY && formatY(s.yAxis.labels[0]) ? formatY : 0;\n\n\t\tfor(var i=s.datasetLength - 1; i >= 0 ; i--) {\n\t\t\tlet xVal = s.xAxis.positions[i];\n\t\t\t// let delta = i === 0 ? s.unitWidth : xVal - s.xAxis.positions[i-1];\n\t\t\tif(relX > xVal - s.unitWidth/2) {\n\t\t\t\tlet x = xVal + this.leftMargin;\n\t\t\t\tlet y = s.yExtremes[i] + this.topMargin;\n\n\t\t\t\tlet values = this.data.datasets.map((set, j) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttitle: set.name,\n\t\t\t\t\t\tvalue: formatY ? formatY(set.values[i]) : set.values[i],\n\t\t\t\t\t\tcolor: this.colors[j],\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\tthis.tip.setValues(x, y, {name: titles[i], value: ''}, values, i);\n\t\t\t\tthis.tip.showTip();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\trenderLegend() {\n\t\tlet s = this.data;\n\t\tthis.legendArea.textContent = '';\n\n\t\tif(s.datasets.length > 1) {\n\t\t\ts.datasets.map((d, i) => {\n\t\t\t\tlet barWidth = AXIS_LEGEND_BAR_SIZE;\n\t\t\t\t// let rightEndPoint = this.baseWidth - this.leftMargin - this.rightMargin;\n\t\t\t\t// let multiplier = s.datasets.length - i;\n\t\t\t\tlet rect = legendBar(\n\t\t\t\t\t// rightEndPoint - multiplier * barWidth,\t// To right align\n\t\t\t\t\tbarWidth * i,\n\t\t\t\t\t'0',\n\t\t\t\t\tbarWidth,\n\t\t\t\t\tthis.colors[i],\n\t\t\t\t\td.name);\n\t\t\t\tthis.legendArea.appendChild(rect);\n\t\t\t});\n\t\t}\n\t}\n\n\tmakeOverlay() {\n\t\tif(this.init) {\n\t\t\tthis.init = 0;\n\t\t\treturn;\n\t\t}\n\t\tif(this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\n\t\tthis.overlayGuides = this.dataUnitComponents.map(c => {\n\t\t\treturn {\n\t\t\t\ttype: c.unitType,\n\t\t\t\toverlay: undefined,\n\t\t\t\tunits: c.units,\n\t\t\t};\n\t\t});\n\n\t\tif(this.state.currentIndex === undefined) {\n\t\t\tthis.state.currentIndex = this.state.datasetLength - 1;\n\t\t}\n\n\t\t// Render overlays\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\n\t\t\td.overlay = makeOverlay[d.type](currentUnit);\n\t\t\tthis.drawArea.appendChild(d.overlay);\n\t\t});\n\t}\n\n\tupdateOverlayGuides() {\n\t\tif(this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\t}\n\n\tbindOverlay() {\n\t\tthis.parent.addEventListener('data-select', () => {\n\t\t\tthis.updateOverlay();\n\t\t});\n\t}\n\n\tbindUnits() {\n\t\tthis.dataUnitComponents.map(c => {\n\t\t\tc.units.map(unit => {\n\t\t\t\tunit.addEventListener('click', () => {\n\t\t\t\t\tlet index = unit.getAttribute('data-point-index');\n\t\t\t\t\tthis.setCurrentDataPoint(index);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\t// Note: Doesn't work as tooltip is absolutely positioned\n\t\tthis.tip.container.addEventListener('click', () => {\n\t\t\tlet index = this.tip.container.getAttribute('data-point-index');\n\t\t\tthis.setCurrentDataPoint(index);\n\t\t});\n\t}\n\n\tupdateOverlay() {\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\t\t\tupdateOverlay[d.type](currentUnit, d.overlay);\n\t\t});\n\t}\n\n\tonLeftArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex - 1);\n\t}\n\n\tonRightArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex + 1);\n\t}\n\n\tgetDataPoint(index=this.state.currentIndex) {\n\t\tlet s = this.state;\n\t\tlet data_point = {\n\t\t\tindex: index,\n\t\t\tlabel: s.xAxis.labels[index],\n\t\t\tvalues: s.datasets.map(d => d.values[index])\n\t\t};\n\t\treturn data_point;\n\t}\n\n\tsetCurrentDataPoint(index) {\n\t\tlet s = this.state;\n\t\tindex = parseInt(index);\n\t\tif(index < 0) index = 0;\n\t\tif(index >= s.xAxis.labels.length) index = s.xAxis.labels.length - 1;\n\t\tif(index === s.currentIndex) return;\n\t\ts.currentIndex = index;\n\t\tfire(this.parent, \"data-select\", this.getDataPoint());\n\t}\n\n\t// API\n\taddDataPoint(label, datasetValues, index=this.state.datasetLength) {\n\t\tsuper.addDataPoint(label, datasetValues, index);\n\t\tthis.data.labels.splice(index, 0, label);\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\td.values.splice(index, 0, datasetValues[i]);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tremoveDataPoint(index = this.state.datasetLength-1) {\n\t\tif (this.data.labels.length <= 1) {\n\t\t\treturn;\n\t\t}\n\t\tsuper.removeDataPoint(index);\n\t\tthis.data.labels.splice(index, 1);\n\t\tthis.data.datasets.map(d => {\n\t\t\td.values.splice(index, 1);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tupdateDataset(datasetValues, index=0) {\n\t\tthis.data.datasets[index].values = datasetValues;\n\t\tthis.update(this.data);\n\t}\n\t// addDataset(dataset, index) {}\n\t// removeDataset(index = 0) {}\n\n\tupdateDatasets(datasets) {\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\tif(datasets[i]) {\n\t\t\t\td.values = datasets[i];\n\t\t\t}\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\t// updateDataPoint(dataPoint, index = 0) {}\n\t// addDataPoint(dataPoint, index = 0) {}\n\t// removeDataPoint(index = 0) {}\n}\n"],"names":["$","expr","con","document","querySelector","getOffset","element","rect","getBoundingClientRect","top","documentElement","scrollTop","body","left","scrollLeft","isElementInViewport","el","bottom","window","innerHeight","clientHeight","right","innerWidth","clientWidth","getElementContentWidth","styles","getComputedStyle","padding","parseFloat","paddingLeft","paddingRight","fire","target","type","properties","evt","createEvent","initEvent","j","dispatchEvent","floatTwo","d","toFixed","fillArray","array","count","start","length","fillerArray","Array","Math","abs","fill","concat","getStringWidth","string","charWidth","getPositionByAngle","angle","radius","sin","ANGLE_RATIO","cos","getBarHeightAndYAttr","yTop","zeroLine","height","y","equilizeNoOfElements","array1","array2","extraCount","createSVG","tag","o","createElementNS","i","val","appendChild","ref","parentNode","insertBefore","keys","map","style","prop","setAttribute","renderVerticalGradient","svgDefElem","gradientId","setGradientStop","gradElem","offset","color","opacity","makeSVGContainer","parent","className","width","makeSVGDefs","svgContainer","makeSVGGroup","makePath","pathStr","makeArcPathStr","startPosition","endPosition","center","clockWise","arcStartX","x","arcStartY","arcEndX","arcEndY","makeGradient","lighter","gradientDef","opacities","percentageBar","heatSquare","size","data","args","key","legendBar","label","text","FONT_SIZE","FONT_FILL","group","makeText","content","fontSize","makeVertLine","y1","y2","options","stroke","BASE_LINE_COLOR","l","LABEL_MARGIN","line","makeHoriLine","x1","x2","lineType","yLine","pos","mode","AXIS_TICK_LENGTH","xLine","yMarker","labelSvg","yRegion","region","datasetBar","index","meta","minHeight","datasetDot","dot","getPaths","xList","yList","pointsStr","join","path","heatline","gradient_id","svgDefs","paths","regionFill","gradient_id_region","slice","limitColor","r","lightenDarkenColor","amt","col","getColor","usePound","num","parseInt","b","g","toString","isValidColor","test","translate","unit","oldCoord","newCoord","duration","old","transform","STD_EASING","translateVertLine","newX","oldX","MARKER_LINE_ANIM_DUR","translateHoriLine","newY","oldY","animateRegion","rectGroup","newY1","newY2","oldY2","newHeight","childNodes","stroke-dasharray","getAttribute","animateBar","bar","nodeName","UNIT_ANIM_DUR","split","animateDot","cx","cy","animatePath","newXList","newYList","pathComponents","animPath","PATH_ANIM_DUR","push","regStartPt","regEndPt","animRegion","animatePathStr","oldPath","animateSVGElement","props","dur","easingType","undefined","oldValues","animElement","cloneNode","newElement","attributeName","animateElement","currentValue","value","animAttr","EASING","webkitTransform","msTransform","mozTransform","oTransform","animateSVG","elements","newElements","animElements","replaceChild","animSvg","runSMILAnimation","svgElement","elementsToAnimate","animSvgElement","removeChild","REPLACE_ALL_NEW_DUR","getComponent","name","constants","getData","Object","componentConfigs","filter","includes","k","config","assign","ChartComponent","treatAsUtc","date","result","Date","setMinutes","getMinutes","getTimezoneOffset","getYyyyMmDd","dd","getDate","mm","getMonth","getFullYear","clone","getTime","getWeeksBetween","startDate","endDate","weekStartDate","setDayToSunday","ceil","getDaysBetween","NO_OF_DAYS_IN_WEEK","millisecondsPerDay","SEC_IN_DAY","NO_OF_MILLIS","areInSameMonth","getMonthName","short","monthName","MONTH_NAMES","getLastDateInMonth","month","year","newDate","day","getDay","addDays","numberOfDays","setDate","normalize","isNaN","mantissa","exponent","sig","isFinite","exp","floor","log10","pow","getChartRangeIntervals","max","min","upperBound","lowerBound","range","noOfParts","partSize","intervals","getChartIntervals","maxValue","minValue","normalMaxValue","normalMinValue","calcChartIntervals","values","getPositiveFirstIntervals","absMinValue","intervalSize","unshift","withMinimum","pseudoMaxValue","pseudoMinValue","reverse","getZeroIndex","yPts","interval","getIntervalSize","indexOf","orderedArray","getValueRange","scale","yAxis","scaleMultiplier","calcDistribution","distributionSize","dataMaxValue","distributionStep","distribution","checkpoint","getMaxCheckpoint","dataPrep","labels","datasetLength","datasets","zeroArray","vals","chartType","AXIS_DATASET_CHART_TYPES","yRegions","end","zeroDataPrep","realData","zeroData","yMarkers","getShortenedLabels","chartWidth","isSeries","allowedLetters","DEFAULT_CHAR_WIDTH","getChartByType","AxisChart","chartTypes","error","create","createElement","SvgTip","colors","titleName","titleValue","listValues","titleValueFirst","setup","makeTooltip","calcPosition","container","this","hideTip","title","dataPointList","addEventListener","innerHTML","set","_this2","li","offsetWidth","offsetHeight","maxLeft","pointer","pointerOffset","valueFirst","refresh","ALL_CHART_TYPES","COMPATIBLE_CHARTS","DATA_COLOR_DIVISIONS","HEATMAP_DISTRIBUTION_SIZE","INIT_CHART_UPDATE_TIMEOUT","PERCENTAGE_BAR_DEFAULT_HEIGHT","DEFAULT_CHART_COLORS","DEFAULT_COLORS","PI","makeOverlay","transformValue","overlay","updateOverlay","attributes","attr","specified","nodeValue","PRESET_COLOR_MAP","BaseChart","HTMLElement","Error","rawChartArgs","argHeight","prepareData","prepareFirstData","validateColors","showLegend","isNavigable","state","initTimeout","overlays","configure","setMargins","_this","draw","validColors","forEach","warn","baseHeight","topMargin","leftMargin","rightMargin","makeContainer","updateWidth","components","Map","tip","bindTooltip","onlyWidthChange","init","calc","makeChartArea","setupComponents","c","drawArea","render","update","renderLegend","setupNavigation","baseWidth","animate","svg","make","updateNav","bindUnits","titleAreaHeight","legendAreaHeight","titleEL","legendArea","bindOverlay","keyActions","onEnterKey","bind","onLeftArrow","onUpArrow","onRightArrow","onDownArrow","e","_this4","event","keyCode","currentType","useColor","Chart","removeEventListener","_this5","AggregationChart","maxSlices","maxLegendPoints","s","sliceTotals","allTotals","total","totals","sort","a","sumOfRemaining","grandTotal","reduce","layerClass","layerTransform","makeElements","animateElements","store","layer","oldData","textContent","sliceStrings","transition","newData","xPositions","widths","barHeight","positions","position","_this3","newPos","newLabels","oldPos","oldLabels","calcLabels","marker","startPos","endPos","_this6","newStarts","oldStarts","colWidth","rowHeight","squareSize","xTranslate","serializedSubDomains","cols","yyyyMmDd","dataValue","square","unitType","units","yPositions","barWidth","offsets","barsWidth","newXPos","newYPos","newOffsets","oldXPos","oldYPos","oldOffsets","hideLine","hideDots","valuesOverPoints","newValues","PercentageChart","barOptions","component","xPos","classList","contains","gOff","pOff","formattedLabels","percent","setValues","showTip","PieChart","mouseMove","mouseLeave","hoverRadio","startAngle","calcSlices","prevSlicesProperties","slicesProperties","curAngle","originDiffAngle","diffAngle","endAngle","prevProperty","curStart","curEnd","curPath","property","flag","calTranslateByAngle","g_off","pageX","pageY","formatted_labels","slices","get","prevIndex","curActiveSliceIndex","prevAcitve","curActiveSlice","hoverSlice","Heatmap","discreteDomains","countLabel","validStarts","startSubDomain","startSubDomainIndex","HEATMAP_SQUARE_SIZE","noOfWeeks","COL_WIDTH","setFullYear","dataPoints","points","timestampSec","firstWeekStart","domainConfigs","getDomains","prototype","call","querySelectorAll","dateParts","startMonth","startYear","noOfMonths","startOfMonth","getDomainConfig","startOfWeek","domainConfig","noOfMonthWeeks","getCol","empty","currentDate","getSubDomainConfig","lineOptions","axisOptions","tooltipOptions","xAxisMode","yAxisMode","xIsSeries","formatTooltipX","formatTooltipY","calcXPositions","calcYAxisParameters","getAllYValues","unitWidth","xOffset","xAxis","dataValues","intervalHeight","calcDatasetPoints","calcYExtremes","calcYRegions","scaleAll","cumulativeYs","stacked","yExtremes","cumulativeYPos","cumulative","allValueLists","barDatasets","lineDatasets","barsConfigs","spaceRatio","p","lineConfigs","dotSize","markerConfigs","optionals","dataUnitComponents","relX","mapTooltipXPosition","formatY","formatX","titles","xVal","overlayGuides","currentIndex","currentUnit","_this7","setCurrentDataPoint","_this9","_this10","getDataPoint","datasetValues","splice"],"mappings":"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"}