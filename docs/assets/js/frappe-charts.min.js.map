{"version":3,"file":"frappe-charts.min.js","sources":["../../../src/js/utils/dom.js","../../../src/js/utils/constants.js","../../../src/js/utils/helpers.js","../../../src/js/utils/draw-utils.js","../../../src/js/utils/colors.js","../../../src/js/utils/draw.js","../../../src/js/utils/animate.js","../../../src/js/utils/animation.js","../../../src/js/utils/export.js","../../../src/js/utils/date-utils.js","../../../src/js/objects/ChartComponents.js","../../../src/js/utils/intervals.js","../../../src/js/utils/axis-chart-utils.js","../../../src/js/chart.js","../../../node_modules/style-inject/dist/style-inject.es.js","../../../src/js/objects/SvgTip.js","../../../src/css/chartsCss.js","../../../src/js/charts/BaseChart.js","../../../src/js/charts/AggregationChart.js","../../../src/js/charts/PercentageChart.js","../../../src/js/charts/PieChart.js","../../../src/js/charts/Heatmap.js","../../../src/js/charts/AxisChart.js","../../../src/js/charts/DonutChart.js","../../../src/js/index.js"],"sourcesContent":["export function $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function findNodeIndex(node)\n{\n\tvar i = 0;\n\twhile (node.previousSibling) {\n\t\tnode = node.previousSibling;\n\t\ti++;\n\t}\n\treturn i;\n}\n\n$.create = (tag, o) => {\n\tvar element = document.createElement(tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (i in element ) {\n\t\t\telement[i] = val;\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(i, val);\n\t\t}\n\t}\n\n\treturn element;\n};\n\nexport function getOffset(element) {\n\tlet rect = element.getBoundingClientRect();\n\treturn {\n\t\t// https://stackoverflow.com/a/7436602/6495043\n\t\t// rect.top varies with scroll, so we add whatever has been\n\t\t// scrolled to it to get absolute distance from actual page top\n\t\ttop: rect.top + (document.documentElement.scrollTop || document.body.scrollTop),\n\t\tleft: rect.left + (document.documentElement.scrollLeft || document.body.scrollLeft)\n\t};\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n// an element's offsetParent property will return null whenever it, or any of its parents,\n// is hidden via the display style property.\nexport function isHidden(el) {\n\treturn (el.offsetParent === null);\n}\n\nexport function isElementInViewport(el) {\n\t// Although straightforward: https://stackoverflow.com/a/7557433/6495043\n\tvar rect = el.getBoundingClientRect();\n\n\treturn (\n\t\trect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\n\t);\n}\n\nexport function getElementContentWidth(element) {\n\tvar styles = window.getComputedStyle(element);\n\tvar padding = parseFloat(styles.paddingLeft) +\n\t\tparseFloat(styles.paddingRight);\n\n\treturn element.clientWidth - padding;\n}\n\nexport function bind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function (event) {\n\t\t\t\telement.addEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function unbind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function(event) {\n\t\t\t\telement.removeEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function fire(target, type, properties) {\n\tvar evt = document.createEvent(\"HTMLEvents\");\n\n\tevt.initEvent(type, true, true );\n\n\tfor (var j in properties) {\n\t\tevt[j] = properties[j];\n\t}\n\n\treturn target.dispatchEvent(evt);\n}\n\n// https://css-tricks.com/snippets/javascript/loop-queryselectorall-matches/\nexport function forEachNode(nodeList, callback, scope) {\n\tif(!nodeList) return;\n\tfor (var i = 0; i < nodeList.length; i++) {\n\t\tcallback.call(scope, nodeList[i], i);\n\t}\n}\n\nexport function activate($parent, $child, commonClass, activeClass='active', index = -1) {\n\tlet $children = $parent.querySelectorAll(`.${commonClass}.${activeClass}`);\n\n\tforEachNode($children, (node, i) => {\n\t\tif(index >= 0 && i <= index) return;\n\t\tnode.classList.remove(activeClass);\n\t});\n\n\t$child.classList.add(activeClass);\n}\n","export const ALL_CHART_TYPES = ['line', 'scatter', 'bar', 'percentage', 'heatmap', 'pie'];\n\nexport const COMPATIBLE_CHARTS = {\n\tbar: ['line', 'scatter', 'percentage', 'pie'],\n\tline: ['scatter', 'bar', 'percentage', 'pie'],\n\tpie: ['line', 'scatter', 'percentage', 'bar'],\n\tpercentage: ['bar', 'line', 'scatter', 'pie'],\n\theatmap: []\n};\n\nexport const DATA_COLOR_DIVISIONS = {\n\tbar: 'datasets',\n\tline: 'datasets',\n\tpie: 'labels',\n\tpercentage: 'labels',\n\theatmap: HEATMAP_DISTRIBUTION_SIZE\n};\n\nexport const BASE_MEASURES = {\n\tmargins: {\n\t\ttop: 10,\n\t\tbottom: 10,\n\t\tleft: 20,\n\t\tright: 20\n\t},\n\tpaddings: {\n\t\ttop: 20,\n\t\tbottom: 40,\n\t\tleft: 30,\n\t\tright: 10\n\t},\n\n\tbaseHeight: 240,\n\ttitleHeight: 20,\n\tlegendHeight: 30,\n\n\ttitleFontSize: 12,\n};\n\nexport function getTopOffset(m) {\n\treturn m.titleHeight + m.margins.top + m.paddings.top;\n}\n\nexport function getLeftOffset(m) {\n\treturn m.margins.left + m.paddings.left;\n}\n\nexport function getExtraHeight(m) {\n\tlet totalExtraHeight = m.margins.top + m.margins.bottom\n\t\t+ m.paddings.top + m.paddings.bottom\n\t\t+ m.titleHeight + m.legendHeight;\n\treturn totalExtraHeight;\n}\n\nexport function getExtraWidth(m) {\n\tlet totalExtraWidth = m.margins.left + m.margins.right\n\t\t+ m.paddings.left + m.paddings.right;\n\n\treturn totalExtraWidth;\n}\n\nexport const INIT_CHART_UPDATE_TIMEOUT = 700;\nexport const CHART_POST_ANIMATE_TIMEOUT = 400;\n\nexport const DEFAULT_AXIS_CHART_TYPE = 'line';\nexport const AXIS_DATASET_CHART_TYPES = ['line', 'bar'];\n\nexport const AXIS_LEGEND_BAR_SIZE = 100;\n\nexport const BAR_CHART_SPACE_RATIO = 0.5;\nexport const MIN_BAR_PERCENT_HEIGHT = 0.00;\n\nexport const LINE_CHART_DOT_SIZE = 4;\nexport const DOT_OVERLAY_SIZE_INCR = 4;\n\nexport const PERCENTAGE_BAR_DEFAULT_HEIGHT = 20;\nexport const PERCENTAGE_BAR_DEFAULT_DEPTH = 2;\n\n// Fixed 5-color theme,\n// More colors are difficult to parse visually\nexport const HEATMAP_DISTRIBUTION_SIZE = 5;\n\nexport const HEATMAP_SQUARE_SIZE = 10;\nexport const HEATMAP_GUTTER_SIZE = 2;\n\nexport const DEFAULT_CHAR_WIDTH = 7;\n\nexport const TOOLTIP_POINTER_TRIANGLE_HEIGHT = 5;\n\nconst DEFAULT_CHART_COLORS = ['light-blue', 'blue', 'violet', 'red', 'orange',\n\t'yellow', 'green', 'light-green', 'purple', 'magenta', 'light-grey', 'dark-grey'];\nconst HEATMAP_COLORS_GREEN = ['#ebedf0', '#c6e48b', '#7bc96f', '#239a3b', '#196127'];\nexport const HEATMAP_COLORS_BLUE = ['#ebedf0', '#c0ddf9', '#73b3f3', '#3886e1', '#17459e'];\nexport const HEATMAP_COLORS_YELLOW = ['#ebedf0', '#fdf436', '#ffc700', '#ff9100', '#06001c'];\n\nexport const DEFAULT_COLORS = {\n\tbar: DEFAULT_CHART_COLORS,\n\tline: DEFAULT_CHART_COLORS,\n\tpie: DEFAULT_CHART_COLORS,\n\tpercentage: DEFAULT_CHART_COLORS,\n\theatmap: HEATMAP_COLORS_GREEN,\n\tdonut: DEFAULT_CHART_COLORS\n};\n\n// Universal constants\nexport const ANGLE_RATIO = Math.PI / 180;\nexport const FULL_ANGLE = 360;\n","import { ANGLE_RATIO } from './constants';\n\n/**\n * Returns the value of a number upto 2 decimal places.\n * @param {Number} d Any number\n */\nexport function floatTwo(d) {\n\treturn parseFloat(d.toFixed(2));\n}\n\n/**\n * Returns whether or not two given arrays are equal.\n * @param {Array} arr1 First array\n * @param {Array} arr2 Second array\n */\nexport function arraysEqual(arr1, arr2) {\n\tif(arr1.length !== arr2.length) return false;\n\tlet areEqual = true;\n\tarr1.map((d, i) => {\n\t\tif(arr2[i] !== d) areEqual = false;\n\t});\n\treturn areEqual;\n}\n\n/**\n * Shuffles array in place. ES6 version\n * @param {Array} array An array containing the items.\n */\nexport function shuffle(array) {\n\t// Awesomeness: https://bost.ocks.org/mike/shuffle/\n\t// https://stackoverflow.com/a/2450976/6495043\n\t// https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array?noredirect=1&lq=1\n\n\tfor (let i = array.length - 1; i > 0; i--) {\n\t\tlet j = Math.floor(Math.random() * (i + 1));\n\t\t[array[i], array[j]] = [array[j], array[i]];\n\t}\n\n\treturn array;\n}\n\n/**\n * Fill an array with extra points\n * @param {Array} array Array\n * @param {Number} count number of filler elements\n * @param {Object} element element to fill with\n * @param {Boolean} start fill at start?\n */\nexport function fillArray(array, count, element, start=false) {\n\tif(!element) {\n\t\telement = start ? array[0] : array[array.length - 1];\n\t}\n\tlet fillerArray = new Array(Math.abs(count)).fill(element);\n\tarray = start ? fillerArray.concat(array) : array.concat(fillerArray);\n\treturn array;\n}\n\n/**\n * Returns pixel width of string.\n * @param {String} string\n * @param {Number} charWidth Width of single char in pixels\n */\nexport function getStringWidth(string, charWidth) {\n\treturn (string+\"\").length * charWidth;\n}\n\nexport function bindChange(obj, getFn, setFn) {\n\treturn new Proxy(obj, {\n\t\tset: function(target, prop, value) {\n\t\t\tsetFn();\n\t\t\treturn Reflect.set(target, prop, value);\n\t\t},\n\t\tget: function(target, prop) {\n\t\t\tgetFn();\n\t\t\treturn Reflect.get(target, prop);\n\t\t}\n\t});\n}\n\n// https://stackoverflow.com/a/29325222\nexport function getRandomBias(min, max, bias, influence) {\n\tconst range = max - min;\n\tconst biasValue = range * bias + min;\n\tvar rnd = Math.random() * range + min,\t\t// random in range\n\t\tmix = Math.random() * influence;\t\t// random mixer\n\treturn rnd * (1 - mix) + biasValue * mix;\t// mix full range and bias\n}\n\nexport function getPositionByAngle(angle, radius) {\n\treturn {\n\t\tx: Math.sin(angle * ANGLE_RATIO) * radius,\n\t\ty: Math.cos(angle * ANGLE_RATIO) * radius,\n\t};\n}\n\n/**\n * Check if a number is valid for svg attributes\n * @param {object} candidate Candidate to test\n * @param {Boolean} nonNegative flag to treat negative number as invalid\n */\nexport function isValidNumber(candidate, nonNegative=false) {\n\tif (Number.isNaN(candidate)) return false;\n\telse if (candidate === undefined) return false;\n\telse if (!Number.isFinite(candidate)) return false;\n\telse if (nonNegative && candidate < 0) return false;\n\telse return true;\n}\n\n/**\n * Round a number to the closes precision, max max precision 4\n * @param {Number} d Any Number\n */\nexport function round(d) {\n\t// https://floating-point-gui.de/\n\t// https://www.jacklmoore.com/notes/rounding-in-javascript/\n\treturn Number(Math.round(d + 'e4') + 'e-4');\n}\n\n/**\n * Creates a deep clone of an object\n * @param {Object} candidate Any Object\n */\n export function deepClone(candidate) {\n\tlet cloned, value, key;\n  \n\tif (candidate instanceof Date) {\n\t  return new Date(candidate.getTime());\n\t}\n  \n\tif (typeof candidate !== \"object\" || candidate === null) {\n\t  return candidate;\n\t}\n  \n\tcloned = Array.isArray(candidate) ? [] : {};\n  \n\tfor (key in candidate) {\n\t  value = candidate[key];\n  \n\t  cloned[key] = deepClone(value);\n\t}\n  \n\treturn cloned;\n  }","import { fillArray } from './helpers';\n\nexport function getBarHeightAndYAttr(yTop, zeroLine) {\n\tlet height, y;\n\tif (yTop <= zeroLine) {\n\t\theight = zeroLine - yTop;\n\t\ty = yTop;\n\t} else {\n\t\theight = yTop - zeroLine;\n\t\ty = zeroLine;\n\t}\n\n\treturn [height, y];\n}\n\nexport function equilizeNoOfElements(array1, array2,\n\textraCount = array2.length - array1.length) {\n\n\t// Doesn't work if either has zero elements.\n\tif(extraCount > 0) {\n\t\tarray1 = fillArray(array1, extraCount);\n\t} else {\n\t\tarray2 = fillArray(array2, extraCount);\n\t}\n\treturn [array1, array2];\n}\n\nexport function truncateString(txt, len) {\n\tif (!txt) {\n\t\treturn;\n\t}\n\tif (txt.length > len) {\n\t\treturn txt.slice(0, len-3) + '...';\n\t} else {\n\t\treturn txt;\n\t}\n}\n\nexport function shortenLargeNumber(label) {\n\tlet number;\n\tif (typeof label === 'number') number = label;\n\telse if (typeof label === 'string') {\n\t\tnumber = Number(label);\n\t\tif (Number.isNaN(number)) return label;\n\t}\n\n\t// Using absolute since log wont work for negative numbers\n\tlet p = Math.floor(Math.log10(Math.abs(number)));\n\tif (p <= 2) return number; // Return as is for a 3 digit number of less\n\tlet\tl = Math.floor(p / 3);\n\tlet shortened = (Math.pow(10, p - l * 3) * +(number / Math.pow(10, p)).toFixed(1));\n\n\t// Correct for floating point error upto 2 decimal places\n\treturn Math.round(shortened*100)/100 + ' ' + ['', 'K', 'M', 'B', 'T'][l];\n}\n\n// cubic bezier curve calculation (from example by François Romain)\nexport function getSplineCurvePointsStr(xList, yList) {\n\n\tlet points=[];\n\tfor(let i=0;i<xList.length;i++){\n\t\tpoints.push([xList[i], yList[i]]);\n\t}\n\n\tlet smoothing = 0.2;\n\tlet line = (pointA, pointB) => {\n\t\tlet lengthX = pointB[0] - pointA[0];\n\t\tlet lengthY = pointB[1] - pointA[1];\n\t\treturn {\n\t\t\tlength: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n\t\t\tangle: Math.atan2(lengthY, lengthX)\n\t\t};\n\t};\n    \n\tlet controlPoint = (current, previous, next, reverse) => {\n\t\tlet p = previous || current;\n\t\tlet n = next || current;\n\t\tlet o = line(p, n);\n\t\tlet angle = o.angle + (reverse ? Math.PI : 0);\n\t\tlet length = o.length * smoothing;\n\t\tlet x = current[0] + Math.cos(angle) * length;\n\t\tlet y = current[1] + Math.sin(angle) * length;\n\t\treturn [x, y];\n\t};\n    \n\tlet bezierCommand = (point, i, a) => {\n\t\tlet cps = controlPoint(a[i - 1], a[i - 2], point);\n\t\tlet cpe = controlPoint(point, a[i - 1], a[i + 1], true);\n\t\treturn `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[1]}`;\n\t};\n    \n\tlet pointStr = (points, command) => {\n\t\treturn points.reduce((acc, point, i, a) => i === 0\n\t\t\t? `${point[0]},${point[1]}`\n\t\t\t: `${acc} ${command(point, i, a)}`, '');\n\t};\n    \n\treturn pointStr(points, bezierCommand);\n}\n","const PRESET_COLOR_MAP = {\n\t'light-blue': '#7cd6fd',\n\t'blue': '#5e64ff',\n\t'violet': '#743ee2',\n\t'red': '#ff5858',\n\t'orange': '#ffa00a',\n\t'yellow': '#feef72',\n\t'green': '#28a745',\n\t'light-green': '#98d85b',\n\t'purple': '#b554ff',\n\t'magenta': '#ffa3ef',\n\t'black': '#36114C',\n\t'grey': '#bdd3e6',\n\t'light-grey': '#f0f4f7',\n\t'dark-grey': '#b8c2cc'\n};\n\nfunction limitColor(r){\n\tif (r > 255) return 255;\n\telse if (r < 0) return 0;\n\treturn r;\n}\n\nexport function lightenDarkenColor(color, amt) {\n\tlet col = getColor(color);\n\tlet usePound = false;\n\tif (col[0] == \"#\") {\n\t\tcol = col.slice(1);\n\t\tusePound = true;\n\t}\n\tlet num = parseInt(col,16);\n\tlet r = limitColor((num >> 16) + amt);\n\tlet b = limitColor(((num >> 8) & 0x00FF) + amt);\n\tlet g = limitColor((num & 0x0000FF) + amt);\n\treturn (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\nexport function isValidColor(string) {\n\t// https://stackoverflow.com/a/32685393\n\tlet HEX_RE = /(^\\s*)(#)((?:[A-Fa-f0-9]{3}){1,2})$/i;\n\tlet RGB_RE = /(^\\s*)(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/i;\n\treturn HEX_RE.test(string) || RGB_RE.test(string);\n}\n\nexport const getColor = (color) => {\n\t// When RGB color, convert to hexadecimal (alpha value is omitted)\n\tif((/rgb[a]{0,1}\\([\\d, ]+\\)/gim).test(color)) {\n\t\treturn (/\\D+(\\d*)\\D+(\\d*)\\D+(\\d*)/gim).exec(color)\n\t\t\t.map((x, i) => (i !== 0 ? Number(x).toString(16) : '#'))\n\t\t\t.reduce((c, ch) => `${c}${ch}`);\n\t}\n\treturn PRESET_COLOR_MAP[color] || color;\n};\n","import { getBarHeightAndYAttr, truncateString, shortenLargeNumber, getSplineCurvePointsStr } from './draw-utils';\nimport { getStringWidth, isValidNumber } from './helpers';\nimport { DOT_OVERLAY_SIZE_INCR, PERCENTAGE_BAR_DEFAULT_DEPTH } from './constants';\nimport { lightenDarkenColor } from './colors';\n\nexport const AXIS_TICK_LENGTH = 6;\nconst LABEL_MARGIN = 4;\nconst LABEL_WIDTH = 25;\nconst LABEL_MAX_CHARS = 15;\nconst TOTAL_PADDING = 120;\nexport const FONT_SIZE = 10;\nconst BASE_LINE_COLOR = '#dadada';\nconst FONT_FILL = '#555b51';\n\nfunction $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function createSVG(tag, o) {\n\tvar element = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif(i === \"className\") { i = \"class\"; }\n\t\t\tif(i === \"innerHTML\") {\n\t\t\t\telement['textContent'] = val;\n\t\t\t} else {\n\t\t\t\telement.setAttribute(i, val);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn element;\n}\n\nfunction renderVerticalGradient(svgDefElem, gradientId) {\n\treturn createSVG('linearGradient', {\n\t\tinside: svgDefElem,\n\t\tid: gradientId,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: 0,\n\t\ty2: 1\n\t});\n}\n\nfunction setGradientStop(gradElem, offset, color, opacity) {\n\treturn createSVG('stop', {\n\t\t'inside': gradElem,\n\t\t'style': `stop-color: ${color}`,\n\t\t'offset': offset,\n\t\t'stop-opacity': opacity\n\t});\n}\n\nexport function makeSVGContainer(parent, className, width, height) {\n\treturn createSVG('svg', {\n\t\tclassName: className,\n\t\tinside: parent,\n\t\twidth: width,\n\t\theight: height\n\t});\n}\n\nexport function makeSVGDefs(svgContainer) {\n\treturn createSVG('defs', {\n\t\tinside: svgContainer,\n\t});\n}\n\nexport function makeSVGGroup(className, transform='', parent=undefined) {\n\tlet args = {\n\t\tclassName: className,\n\t\ttransform: transform\n\t};\n\tif(parent) args.inside = parent;\n\treturn createSVG('g', args);\n}\n\nexport function wrapInSVGGroup(elements, className='') {\n\tlet g = createSVG('g', {\n\t\tclassName: className\n\t});\n\telements.forEach(e => g.appendChild(e));\n\treturn g;\n}\n\nexport function makePath(pathStr, className='', stroke='none', fill='none', strokeWidth=2) {\n\treturn createSVG('path', {\n\t\tclassName: className,\n\t\td: pathStr,\n\t\tstyles: {\n\t\t\tstroke: stroke,\n\t\t\tfill: fill,\n\t\t\t'stroke-width': strokeWidth\n\t\t}\n\t});\n}\n\nexport function makeArcPathStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\n\treturn `M${center.x} ${center.y}\n\t\tL${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY} z`;\n}\n\nexport function makeCircleStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, midArc, arcEndY] = [center.x + endPosition.x, center.y * 2, center.y + endPosition.y];\n\treturn `M${center.x} ${center.y}\n\t\tL${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${midArc} z\n\t\tL${arcStartX} ${midArc}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY} z`;\n}\n\nexport function makeArcStrokePathStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\n\n\treturn `M${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY}`;\n}\n\nexport function makeStrokeCircleStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, midArc, arcEndY] = [center.x + endPosition.x, radius * 2 + arcStartY, center.y + startPosition.y];\n\n\treturn `M${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${midArc}\n\t\tM${arcStartX} ${midArc}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY}`;\n}\n\nexport function makeGradient(svgDefElem, color, lighter = false) {\n\tlet gradientId ='path-fill-gradient' + '-' + color + '-' +(lighter ? 'lighter' : 'default');\n\tlet gradientDef = renderVerticalGradient(svgDefElem, gradientId);\n\tlet opacities = [1, 0.6, 0.2];\n\tif(lighter) {\n\t\topacities = [0.4, 0.2, 0];\n\t}\n\n\tsetGradientStop(gradientDef, \"0%\", color, opacities[0]);\n\tsetGradientStop(gradientDef, \"50%\", color, opacities[1]);\n\tsetGradientStop(gradientDef, \"100%\", color, opacities[2]);\n\n\treturn gradientId;\n}\n\nexport function percentageBar(x, y, width, height,\n\tdepth=PERCENTAGE_BAR_DEFAULT_DEPTH, fill='none') {\n\n\tlet args = {\n\t\tclassName: 'percentage-bar',\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height,\n\t\tfill: fill,\n\t\tstyles: {\n\t\t\t'stroke': lightenDarkenColor(fill, -25),\n\t\t\t// Diabolically good: https://stackoverflow.com/a/9000859\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray\n\t\t\t'stroke-dasharray': `0, ${height + width}, ${width}, ${height}`,\n\t\t\t'stroke-width': depth\n\t\t},\n\t};\n\n\treturn createSVG(\"rect\", args);\n}\n\nexport function heatSquare(className, x, y, size, radius, fill='none', data={}) {\n\tlet args = {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: size,\n\t\theight: size,\n\t\trx: radius,\n\t\tfill: fill\n\t};\n\n\tObject.keys(data).map(key => {\n\t\targs[key] = data[key];\n\t});\n\n\treturn createSVG(\"rect\", args);\n}\n\nexport function legendBar(x, y, size, fill='none', label, truncate=false) {\n\tlabel = truncate ? truncateString(label, LABEL_MAX_CHARS) : label;\n\n\tlet args = {\n\t\tclassName: 'legend-bar',\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: size,\n\t\theight: '2px',\n\t\tfill: fill\n\t};\n\tlet text = createSVG('text', {\n\t\tclassName: 'legend-dataset-text',\n\t\tx: 0,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE * 2) + 'px',\n\t\t'font-size': (FONT_SIZE * 1.2) + 'px',\n\t\t'text-anchor': 'start',\n\t\tfill: FONT_FILL,\n\t\tinnerHTML: label\n\t});\n\n\tlet group = createSVG('g', {\n\t\ttransform: `translate(${x}, ${y})`\n\t});\n\tgroup.appendChild(createSVG(\"rect\", args));\n\tgroup.appendChild(text);\n\n\treturn group;\n}\n\nexport function legendDot(x, y, size, fill='none', label, truncate=false) {\n\tlabel = truncate ? truncateString(label, LABEL_MAX_CHARS) : label;\n\n\tlet args = {\n\t\tclassName: 'legend-dot',\n\t\tcx: 0,\n\t\tcy: 0,\n\t\tr: size,\n\t\tfill: fill\n\t};\n\tlet text = createSVG('text', {\n\t\tclassName: 'legend-dataset-text',\n\t\tx: 0,\n\t\ty: 0,\n\t\tdx: (FONT_SIZE) + 'px',\n\t\tdy: (FONT_SIZE/3) + 'px',\n\t\t'font-size': (FONT_SIZE * 1.2) + 'px',\n\t\t'text-anchor': 'start',\n\t\tfill: FONT_FILL,\n\t\tinnerHTML: label\n\t});\n\n\tlet group = createSVG('g', {\n\t\ttransform: `translate(${x}, ${y})`\n\t});\n\tgroup.appendChild(createSVG(\"circle\", args));\n\tgroup.appendChild(text);\n\n\treturn group;\n}\n\nexport function makeText(className, x, y, content, options = {}) {\n\tlet fontSize = options.fontSize || FONT_SIZE;\n\tlet dy = options.dy !== undefined ? options.dy : (fontSize / 2);\n\tlet fill = options.fill || FONT_FILL;\n\tlet textAnchor = options.textAnchor || 'start';\n\treturn createSVG('text', {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\tdy: dy + 'px',\n\t\t'font-size': fontSize + 'px',\n\t\tfill: fill,\n\t\t'text-anchor': textAnchor,\n\t\tinnerHTML: content\n\t});\n}\n\nfunction makeVertLine(x, label, y1, y2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tlet l = createSVG('line', {\n\t\tclassName: 'line-vertical ' + options.className,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: y1,\n\t\ty2: y2,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: 0,\n\t\ty: y1 > y2 ? y1 + LABEL_MARGIN : y1 - LABEL_MARGIN - FONT_SIZE,\n\t\tdy: FONT_SIZE + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'middle',\n\t\tinnerHTML: label + \"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(${ x }, 0)`\n\t});\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nfunction makeHoriLine(y, label, x1, x2, options = {}) {\n    if (!options.stroke) options.stroke = BASE_LINE_COLOR;\n    if (!options.lineType) options.lineType = '';\n    if (!options.alignment) options.alignment = 'left';\n    if (options.shortenNumbers) label = shortenLargeNumber(label);\n\n    let className =\n        'line-horizontal ' +\n        options.className +\n        (options.lineType === 'dashed' ? 'dashed' : '');\n\n\tconst textXPos = options.alignment === 'left' ? \n\t\toptions.title ? (x1 - LABEL_MARGIN) + LABEL_WIDTH : x1 - LABEL_MARGIN : \n\t\toptions.title ? (x2 + LABEL_MARGIN * 4) - LABEL_WIDTH : x2 + LABEL_MARGIN * 4;\n\tconst lineX1Post = options.title ? x1 + LABEL_WIDTH : x1;\n\tconst lineX2Post = options.title ? x2 - LABEL_WIDTH : x2;\n\n    let l = createSVG('line', {\n        className: className,\n        x1: lineX1Post,\n        x2: lineX2Post,\n        y1: 0,\n        y2: 0,\n        styles: {\n            stroke: options.stroke\n        }\n    });\n\t\n    let text = createSVG('text', {\n        x: textXPos,\n        y: 0,\n        dy: FONT_SIZE / 2 - 2 + 'px',\n        'font-size': FONT_SIZE + 'px',\n        'text-anchor': x1 < x2 ? 'end' : 'start',\n        innerHTML: label + ''\n    });\n\n    let line = createSVG('g', {\n        transform: `translate(0, ${y})`,\n        'stroke-opacity': 1\n    });\n\n    if (text === 0 || text === '0') {\n        line.style.stroke = 'rgba(27, 31, 35, 0.6)';\n    }\n\n    line.appendChild(l);\n    line.appendChild(text);\n\n    return line;\n}\n\nexport function generateAxisLabel(options) {\n    if (!options.title) return;\n\n    const y = options.position === 'left' ? \n\t\t(options.height - TOTAL_PADDING) / 2 + (getStringWidth(options.title, 5) / 2) : \n\t\t(options.height - TOTAL_PADDING) / 2 - (getStringWidth(options.title, 5) / 2) ;\n\tconst x = options.position === 'left' ? 0 : options.width;\n\tconst y2 = options.position === 'left' ? FONT_SIZE - LABEL_WIDTH : FONT_SIZE + LABEL_WIDTH * -1;\n\n    const rotation =\n        options.position === 'right'\n            ? `rotate(90)`\n            : `rotate(270)`;\n\n    const labelSvg = createSVG('text', {\n        className: 'chart-label',\n        x: 0, // getStringWidth(options.title, 5) / 2,\n        y: 0, // y,\n        dy: `${y2}px`,\n        'font-size': `${FONT_SIZE}px`,\n        'text-anchor': 'start',\n        innerHTML: `${options.title} `\n    });\n\n\tlet wrapper = createSVG('g', {\n\t\tx: 0,\n\t\ty: 0,\n\t\ttransformBox: 'fill-box',\n\t\ttransform: `translate(${x}, ${y}) ${rotation}`,\n\t\tclassName: `test-${options.position}`\n\t});\n\n\twrapper.appendChild(labelSvg);\n\n    return wrapper;\n}\n\nexport function yLine(y, label, width, options = {}) {\n    if (!isValidNumber(y)) y = 0;\n\n    if (!options.pos) options.pos = 'left';\n    if (!options.offset) options.offset = 0;\n    if (!options.mode) options.mode = 'span';\n    if (!options.stroke) options.stroke = BASE_LINE_COLOR;\n    if (!options.className) options.className = '';\n\n    let x1 = -1 * AXIS_TICK_LENGTH;\n    let x2 = options.mode === 'span' ? width + AXIS_TICK_LENGTH : 0;\n\n    if (options.mode === 'tick' && options.pos === 'right') {\n        x1 = width + AXIS_TICK_LENGTH;\n        x2 = width;\n    }\n\n    let offset = options.pos === 'left' ? -1 * options.offset : options.offset;\n\n    x1 += offset;\n    x2 += offset;\n\n    return makeHoriLine(y, label, x1, x2, {\n        stroke: options.stroke,\n        className: options.className,\n        lineType: options.lineType,\n        alignment: options.pos,\n\t\ttitle: options.title,\n        shortenNumbers: options.shortenNumbers\n    });\n}\n\nexport function xLine(x, label, height, options={}) {\n\tif (!isValidNumber(x)) x = 0;\n\n\tif(!options.pos) options.pos = 'bottom';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\t// Draw X axis line in span/tick mode with optional label\n\t//                        \ty2(span)\n\t// \t\t\t\t\t\t|\n\t// \t\t\t\t\t\t|\n\t//\t\t\t\tx line\t|\n\t//\t\t\t\t\t\t|\n\t// \t\t\t\t\t   \t|\n\t// ---------------------+-- y2(tick)\n\t//\t\t\t\t\t\t|\n\t//\t\t\t\t\t\t\ty1\n\n\tlet y1 = height + AXIS_TICK_LENGTH;\n\tlet y2 = options.mode === 'span' ? -1 * AXIS_TICK_LENGTH : height;\n\n\tif(options.mode === 'tick' && options.pos === 'top') {\n\t\t// top axis ticks\n\t\ty1 = -1 * AXIS_TICK_LENGTH;\n\t\ty2 = 0;\n\t}\n\n\treturn makeVertLine(x, label, y1, y2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType\n\t});\n}\n\nexport function yMarker(y, label, width, options={}) {\n\tif(!options.labelPos) options.labelPos = 'right';\n\tlet x = options.labelPos === 'left' ? LABEL_MARGIN\n\t\t: width - getStringWidth(label, 5) - LABEL_MARGIN;\n\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: x,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = makeHoriLine(y, '', 0, width, {\n\t\tstroke: options.stroke || BASE_LINE_COLOR,\n\t\tclassName: options.className || '',\n\t\tlineType: options.lineType\n\t});\n\n\tline.appendChild(labelSvg);\n\n\treturn line;\n}\n\nexport function yRegion(y1, y2, width, label, options={}) {\n\t// return a group\n\tlet height = y1 - y2;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`, // remove class\n\t\tstyles: {\n\t\t\tfill: `rgba(228, 234, 239, 0.49)`,\n\t\t\tstroke: BASE_LINE_COLOR,\n\t\t\t'stroke-dasharray': `${width}, ${height}`\n\t\t},\n\t\t// 'data-point-index': index,\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: width,\n\t\theight: height\n\t});\n\n\tif(!options.labelPos) options.labelPos = 'right';\n\tlet x = options.labelPos === 'left' ? LABEL_MARGIN\n\t\t: width - getStringWidth(label+\"\", 4.5) - LABEL_MARGIN;\n\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: x,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet region = createSVG('g', {\n\t\ttransform: `translate(0, ${y2})`\n\t});\n\n\tregion.appendChild(rect);\n\tregion.appendChild(labelSvg);\n\n\treturn region;\n}\n\nexport function datasetBar(x, yTop, width, color, label='', index=0, offset=0, meta={}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\n\tif(height === 0) {\n\t\theight = meta.minHeight;\n\t\ty -= meta.minHeight;\n\t}\n\n\t// Preprocess numbers to avoid svg building errors\n\tif (!isValidNumber(x)) x = 0;\n\tif (!isValidNumber(y)) y = 0;\n\tif (!isValidNumber(height, true)) height = 0;\n\tif (!isValidNumber(width, true)) width = 0;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`,\n\t\tstyle: `fill: ${color}`,\n\t\t'data-point-index': index,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height\n\t});\n\n\tlabel += \"\";\n\n\tif(!label && !label.length) {\n\t\treturn rect;\n\t} else {\n\t\trect.setAttribute('y', 0);\n\t\trect.setAttribute('x', 0);\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: width/2,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\t'data-point-index': index,\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(rect);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nexport function datasetDot(x, y, radius, color, label='', index=0) {\n\tlet dot = createSVG('circle', {\n\t\tstyle: `fill: ${color}`,\n\t\t'data-point-index': index,\n\t\tcx: x,\n\t\tcy: y,\n\t\tr: radius\n\t});\n\n\tlabel += \"\";\n\n\tif(!label && !label.length) {\n\t\treturn dot;\n\t} else {\n\t\tdot.setAttribute('cy', 0);\n\t\tdot.setAttribute('cx', 0);\n\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1 - radius) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\t'data-point-index': index,\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(dot);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nexport function getPaths(xList, yList, color, options={}, meta={}) {\n\tlet pointsList = yList.map((y, i) => (xList[i] + ',' + y));\n\tlet pointsStr = pointsList.join(\"L\");\n\n\t// Spline\n\tif (options.spline)\n\t\tpointsStr = getSplineCurvePointsStr(xList, yList);\n\n\tlet path = makePath(\"M\"+pointsStr, 'line-graph-path', color);\n\n\t// HeatLine\n\tif(options.heatline) {\n\t\tlet gradient_id = makeGradient(meta.svgDefs, color);\n\t\tpath.style.stroke = `url(#${gradient_id})`;\n\t}\n\n\tlet paths = {\n\t\tpath: path\n\t};\n\n\t// Region\n\tif(options.regionFill) {\n\t\tlet gradient_id_region = makeGradient(meta.svgDefs, color, true);\n\n\t\tlet pathStr = \"M\" + `${xList[0]},${meta.zeroLine}L` + pointsStr + `L${xList.slice(-1)[0]},${meta.zeroLine}`;\n\t\tpaths.region = makePath(pathStr, `region-fill`, 'none', `url(#${gradient_id_region})`);\n\t}\n\n\treturn paths;\n}\n\nexport let makeOverlay = {\n\t'bar': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\toverlay.style.fill = '#000000';\n\t\toverlay.style.opacity = '0.4';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t},\n\n\t'dot': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\tlet radius = unit.getAttribute('r');\n\t\tlet fill = unit.getAttribute('fill');\n\t\toverlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\n\t\toverlay.setAttribute('fill', fill);\n\t\toverlay.style.opacity = '0.6';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t},\n\n\t'heat_square': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\tlet radius = unit.getAttribute('r');\n\t\tlet fill = unit.getAttribute('fill');\n\t\toverlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\n\t\toverlay.setAttribute('fill', fill);\n\t\toverlay.style.opacity = '0.6';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t}\n};\n\nexport let updateOverlay = {\n\t'bar': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['x', 'y', 'width', 'height'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n\n\t'dot': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['cx', 'cy'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n\n\t'heat_square': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['cx', 'cy'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n};\n","import { getBarHeightAndYAttr, getSplineCurvePointsStr } from './draw-utils';\n\nexport const UNIT_ANIM_DUR = 350;\nexport const PATH_ANIM_DUR = 350;\nexport const MARKER_LINE_ANIM_DUR = UNIT_ANIM_DUR;\nexport const REPLACE_ALL_NEW_DUR = 250;\n\nexport const STD_EASING = 'easein';\n\nexport function translate(unit, oldCoord, newCoord, duration) {\n\tlet old = typeof oldCoord === 'string' ? oldCoord : oldCoord.join(', ');\n\treturn [\n\t\tunit,\n\t\t{transform: newCoord.join(', ')},\n\t\tduration,\n\t\tSTD_EASING,\n\t\t\"translate\",\n\t\t{transform: old}\n\t];\n}\n\nexport function translateVertLine(xLine, newX, oldX) {\n\treturn translate(xLine, [oldX, 0], [newX, 0], MARKER_LINE_ANIM_DUR);\n}\n\nexport function translateHoriLine(yLine, newY, oldY) {\n\treturn translate(yLine, [0, oldY], [0, newY], MARKER_LINE_ANIM_DUR);\n}\n\nexport function animateRegion(rectGroup, newY1, newY2, oldY2) {\n\tlet newHeight = newY1 - newY2;\n\tlet rect = rectGroup.childNodes[0];\n\tlet width = rect.getAttribute(\"width\");\n\tlet rectAnim = [\n\t\trect,\n\t\t{ height: newHeight, 'stroke-dasharray': `${width}, ${newHeight}` },\n\t\tMARKER_LINE_ANIM_DUR,\n\t\tSTD_EASING\n\t];\n\n\tlet groupAnim = translate(rectGroup, [0, oldY2], [0, newY2], MARKER_LINE_ANIM_DUR);\n\treturn [rectAnim, groupAnim];\n}\n\nexport function animateBar(bar, x, yTop, width, offset=0, meta={}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\tif(bar.nodeName !== 'rect') {\n\t\tlet rect = bar.childNodes[0];\n\t\tlet rectAnim = [\n\t\t\trect,\n\t\t\t{width: width, height: height},\n\t\t\tUNIT_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\n\t\tlet oldCoordStr = bar.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(bar, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [rectAnim, groupAnim];\n\t} else {\n\t\treturn [[bar, {width: width, height: height, x: x, y: y}, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// bar.animate({height: args.newHeight, y: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animateDot(dot, x, y) {\n\tif(dot.nodeName !== 'circle') {\n\t\tlet oldCoordStr = dot.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(dot, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [groupAnim];\n\t} else {\n\t\treturn [[dot, {cx: x, cy: y}, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animatePath(paths, newXList, newYList, zeroLine, spline) {\n\tlet pathComponents = [];\n\tlet pointsStr = newYList.map((y, i) => (newXList[i] + ',' + y)).join(\"L\");\n\n\tif (spline)\n\t\tpointsStr = getSplineCurvePointsStr(newXList, newYList);\n\n\tconst animPath = [paths.path, {d:\"M\" + pointsStr}, PATH_ANIM_DUR, STD_EASING];\n\tpathComponents.push(animPath);\n\n\tif(paths.region) {\n\t\tlet regStartPt = `${newXList[0]},${zeroLine}L`;\n\t\tlet regEndPt = `L${newXList.slice(-1)[0]}, ${zeroLine}`;\n\n\t\tconst animRegion = [\n\t\t\tpaths.region,\n\t\t\t{d:\"M\" + regStartPt + pointsStr + regEndPt},\n\t\t\tPATH_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\t\tpathComponents.push(animRegion);\n\t}\n\n\treturn pathComponents;\n}\n\nexport function animatePathStr(oldPath, pathStr) {\n\treturn [oldPath, {d: pathStr}, UNIT_ANIM_DUR, STD_EASING];\n}\n","// Leveraging SMIL Animations\n\nimport { REPLACE_ALL_NEW_DUR } from './animate';\n\nconst EASING = {\n\tease: \"0.25 0.1 0.25 1\",\n\tlinear: \"0 0 1 1\",\n\t// easein: \"0.42 0 1 1\",\n\teasein: \"0.1 0.8 0.2 1\",\n\teaseout: \"0 0 0.58 1\",\n\teaseinout: \"0.42 0 0.58 1\"\n};\n\nfunction animateSVGElement(element, props, dur, easingType=\"linear\", type=undefined, oldValues={}) {\n\n\tlet animElement = element.cloneNode(true);\n\tlet newElement = element.cloneNode(true);\n\n\tfor(var attributeName in props) {\n\t\tlet animateElement;\n\t\tif(attributeName === 'transform') {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animateTransform\");\n\t\t} else {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animate\");\n\t\t}\n\t\tlet currentValue = oldValues[attributeName] || element.getAttribute(attributeName);\n\t\tlet value = props[attributeName];\n\n\t\tlet animAttr = {\n\t\t\tattributeName: attributeName,\n\t\t\tfrom: currentValue,\n\t\t\tto: value,\n\t\t\tbegin: \"0s\",\n\t\t\tdur: dur/1000 + \"s\",\n\t\t\tvalues: currentValue + \";\" + value,\n\t\t\tkeySplines: EASING[easingType],\n\t\t\tkeyTimes: \"0;1\",\n\t\t\tcalcMode: \"spline\",\n\t\t\tfill: 'freeze'\n\t\t};\n\n\t\tif(type) {\n\t\t\tanimAttr[\"type\"] = type;\n\t\t}\n\n\t\tfor (var i in animAttr) {\n\t\t\tanimateElement.setAttribute(i, animAttr[i]);\n\t\t}\n\n\t\tanimElement.appendChild(animateElement);\n\n\t\tif(type) {\n\t\t\tnewElement.setAttribute(attributeName, `translate(${value})`);\n\t\t} else {\n\t\t\tnewElement.setAttribute(attributeName, value);\n\t\t}\n\t}\n\n\treturn [animElement, newElement];\n}\n\nexport function transform(element, style) { // eslint-disable-line no-unused-vars\n\telement.style.transform = style;\n\telement.style.webkitTransform = style;\n\telement.style.msTransform = style;\n\telement.style.mozTransform = style;\n\telement.style.oTransform = style;\n}\n\nfunction animateSVG(svgContainer, elements) {\n\tlet newElements = [];\n\tlet animElements = [];\n\n\telements.map(element => {\n\t\tlet unit = element[0];\n\t\tlet parent = unit.parentNode;\n\n\t\tlet animElement, newElement;\n\n\t\telement[0] = unit;\n\t\t[animElement, newElement] = animateSVGElement(...element);\n\n\t\tnewElements.push(newElement);\n\t\tanimElements.push([animElement, parent]);\n\t\t\n\t\tif (parent) {\n\t\t\tparent.replaceChild(animElement, unit);\n\t\t}\n\t});\n\n\tlet animSvg = svgContainer.cloneNode(true);\n\n\tanimElements.map((animElement, i) => {\n\t\tif (animElement[1]) {\n\t\t\tanimElement[1].replaceChild(newElements[i], animElement[0]);\n\t\t\telements[i][0] = newElements[i];\n\t\t}\n\t});\n\n\treturn animSvg;\n}\n\nexport function runSMILAnimation(parent, svgElement, elementsToAnimate) {\n\tif(elementsToAnimate.length === 0) return;\n\n\tlet animSvgElement = animateSVG(svgElement, elementsToAnimate);\n\tif(svgElement.parentNode == parent) {\n\t\tparent.removeChild(svgElement);\n\t\tparent.appendChild(animSvgElement);\n\n\t}\n\n\t// Replace the new svgElement (data has already been replaced)\n\tsetTimeout(() => {\n\t\tif(animSvgElement.parentNode == parent) {\n\t\t\tparent.removeChild(animSvgElement);\n\t\t\tparent.appendChild(svgElement);\n\t\t}\n\t}, REPLACE_ALL_NEW_DUR);\n}\n","import { $ } from '../utils/dom';\nimport { CSSTEXT } from '../../css/chartsCss';\n\nexport function downloadFile(filename, data) {\n\tvar a = document.createElement('a');\n\ta.style = \"display: none\";\n\tvar blob = new Blob(data, {type: \"image/svg+xml; charset=utf-8\"});\n\tvar url = window.URL.createObjectURL(blob);\n\ta.href = url;\n\ta.download = filename;\n\tdocument.body.appendChild(a);\n\ta.click();\n\tsetTimeout(function(){\n\t\tdocument.body.removeChild(a);\n\t\twindow.URL.revokeObjectURL(url);\n\t}, 300);\n}\n\nexport function prepareForExport(svg) {\n\tlet clone = svg.cloneNode(true);\n\tclone.classList.add('chart-container');\n\tclone.setAttribute('xmlns', \"http://www.w3.org/2000/svg\");\n\tclone.setAttribute('xmlns:xlink', \"http://www.w3.org/1999/xlink\");\n\tlet styleEl = $.create('style', {\n\t\t'innerHTML': CSSTEXT\n\t});\n\tclone.insertBefore(styleEl, clone.firstChild);\n\n\tlet container = $.create('div');\n\tcontainer.appendChild(clone);\n\n\treturn container.innerHTML;\n}\n","// Playing around with dates\n\nexport const NO_OF_YEAR_MONTHS = 12;\nexport const NO_OF_DAYS_IN_WEEK = 7;\nexport const DAYS_IN_YEAR = 375;\nexport const NO_OF_MILLIS = 1000;\nexport const SEC_IN_DAY = 86400;\n\nexport const MONTH_NAMES = [\"January\", \"February\", \"March\", \"April\", \"May\",\n\t\"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nexport const MONTH_NAMES_SHORT = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n\t\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nexport const DAY_NAMES_SHORT = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nexport const DAY_NAMES = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",\n\t\"Thursday\", \"Friday\", \"Saturday\"];\n\n// https://stackoverflow.com/a/11252167/6495043\nfunction treatAsUtc(date) {\n\tlet result = new Date(date);\n\tresult.setMinutes(result.getMinutes() - result.getTimezoneOffset());\n\treturn result;\n}\n\nexport function getYyyyMmDd(date) {\n\tlet dd = date.getDate();\n\tlet mm = date.getMonth() + 1; // getMonth() is zero-based\n\treturn [\n\t\tdate.getFullYear(),\n\t\t(mm>9 ? '' : '0') + mm,\n\t\t(dd>9 ? '' : '0') + dd\n\t].join('-');\n}\n\nexport function clone(date) {\n\treturn new Date(date.getTime());\n}\n\nexport function timestampSec(date) {\n\treturn date.getTime()/NO_OF_MILLIS;\n}\n\nexport function timestampToMidnight(timestamp, roundAhead = false) {\n\tlet midnightTs = Math.floor(timestamp - (timestamp % SEC_IN_DAY));\n\tif(roundAhead) {\n\t\treturn midnightTs + SEC_IN_DAY;\n\t}\n\treturn midnightTs;\n}\n\n// export function getMonthsBetween(startDate, endDate) {}\n\nexport function getWeeksBetween(startDate, endDate) {\n\tlet weekStartDate = setDayToSunday(startDate);\n\treturn Math.ceil(getDaysBetween(weekStartDate, endDate) / NO_OF_DAYS_IN_WEEK);\n}\n\nexport function getDaysBetween(startDate, endDate) {\n\tlet millisecondsPerDay = SEC_IN_DAY * NO_OF_MILLIS;\n\treturn (treatAsUtc(endDate) - treatAsUtc(startDate)) / millisecondsPerDay;\n}\n\nexport function areInSameMonth(startDate, endDate) {\n\treturn startDate.getMonth() === endDate.getMonth()\n\t\t&& startDate.getFullYear() === endDate.getFullYear();\n}\n\nexport function getMonthName(i, short=false) {\n\tlet monthName = MONTH_NAMES[i];\n\treturn short ? monthName.slice(0, 3) : monthName;\n}\n\nexport function getLastDateInMonth (month, year) {\n\treturn new Date(year, month + 1, 0); // 0: last day in previous month\n}\n\n// mutates\nexport function setDayToSunday(date) {\n\tlet newDate = clone(date);\n\tconst day = newDate.getDay();\n\tif(day !== 0) {\n\t\taddDays(newDate, (-1) * day);\n\t}\n\treturn newDate;\n}\n\n// mutates\nexport function addDays(date, numberOfDays) {\n\tdate.setDate(date.getDate() + numberOfDays);\n}\n","import { makeSVGGroup } from '../utils/draw';\nimport {\n    makeText,\n    makePath,\n    xLine,\n    yLine,\n    generateAxisLabel,\n    yMarker,\n    yRegion,\n    datasetBar,\n    datasetDot,\n    percentageBar,\n    getPaths,\n    heatSquare\n} from '../utils/draw';\nimport { equilizeNoOfElements } from '../utils/draw-utils';\nimport {\n    translateHoriLine,\n    translateVertLine,\n    animateRegion,\n    animateBar,\n    animateDot,\n    animatePath,\n    animatePathStr\n} from '../utils/animate';\nimport { getMonthName } from '../utils/date-utils';\n\nclass ChartComponent {\n    constructor({\n        layerClass = '',\n        layerTransform = '',\n        constants,\n\n        getData,\n        makeElements,\n        animateElements\n    }) {\n        this.layerTransform = layerTransform;\n        this.constants = constants;\n\n        this.makeElements = makeElements;\n        this.getData = getData;\n\n        this.animateElements = animateElements;\n\n        this.store = [];\n        this.labels = [];\n\n        this.layerClass = layerClass;\n        this.layerClass =\n            typeof this.layerClass === 'function' ? this.layerClass() : this.layerClass;\n\n        this.refresh();\n    }\n\n    refresh(data) {\n        this.data = data || this.getData();\n    }\n\n    setup(parent) {\n        this.layer = makeSVGGroup(this.layerClass, this.layerTransform, parent);\n    }\n\n    make() {\n        this.render(this.data);\n        this.oldData = this.data;\n    }\n\n    render(data) {\n        this.store = this.makeElements(data);\n\n        this.layer.textContent = '';\n        this.store.forEach((element) => {\n            element.length\n                ? element.forEach((el) => {\n                      this.layer.appendChild(el);\n                  })\n                : this.layer.appendChild(element);\n        });\n        this.labels.forEach((element) => {\n            this.layer.appendChild(element);\n        });\n    }\n\n    update(animate = true) {\n\t\tthis.refresh();\n\t\tlet animateElements = [];\n\t\tif(animate) {\n\t\t\tanimateElements = this.animateElements(this.data) || [];\n\t\t}\n\t\treturn animateElements;\n\t}\n}\n\nlet componentConfigs = {\n\tdonutSlices: {\n\t\tlayerClass: 'donut-slices',\n\t\tmakeElements(data) {\n\t\t\treturn data.sliceStrings.map((s, i) => {\n\t\t\t\tlet slice = makePath(s, 'donut-path', data.colors[i], 'none', data.strokeWidth);\n\t\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\t\treturn slice;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\treturn this.store.map((slice, i) => animatePathStr(slice, newData.sliceStrings[i]));\n\t\t},\n\t},\n\tpieSlices: {\n\t\tlayerClass: 'pie-slices',\n\t\tmakeElements(data) {\n\t\t\treturn data.sliceStrings.map((s, i) =>{\n\t\t\t\tlet slice = makePath(s, 'pie-path', 'none', data.colors[i]);\n\t\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\t\treturn slice;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\treturn this.store.map((slice, i) =>\n\t\t\t\tanimatePathStr(slice, newData.sliceStrings[i])\n\t\t\t);\n\t\t}\n\t},\n\tpercentageBars: {\n\t\tlayerClass: 'percentage-bars',\n\t\tmakeElements(data) {\n\t\t\treturn data.xPositions.map((x, i) =>{\n\t\t\t\tlet y = 0;\n\t\t\t\tlet bar = percentageBar(x, y, data.widths[i],\n\t\t\t\t\tthis.constants.barHeight, this.constants.barDepth, data.colors[i]);\n\t\t\t\treturn bar;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tif(newData) return [];\n\t\t}\n\t},\n    yAxis: {\n        layerClass: 'y axis',\n        makeElements(data) {\n            let elements = [];\n\t\t\t// will loop through each yaxis dataset if it exists \n            if (data.length) {\n                data.forEach((item, i) => {\n                    item.positions.map((position, i) => {\n                        elements.push(\n                            yLine(position, item.labels[i], this.constants.width, {\n                                mode: this.constants.mode,\n                                pos: item.pos || this.constants.pos,\n                                shortenNumbers: this.constants.shortenNumbers,\n\t\t\t\t\t\t\t\ttitle: item.title\n                            })\n                        );\n                    });\n                    // we need to make yAxis titles if they are defined\n                    if (item.title) {\n                        elements.push(\n                            generateAxisLabel({\n                                title: item.title,\n                                position: item.pos,\n\t\t\t\t\t\t\t\theight: this.constants.height || data.zeroLine,\n                                width: this.constants.width\n                            })\n                        );\n                    }\n                });\n\n                return elements;\n            }\n\n            data.positions.forEach((position, i) => {\n                elements.push(yLine(position, data.labels[i], this.constants.width, {\n                    mode: this.constants.mode,\n                    pos: data.pos || this.constants.pos,\n                    shortenNumbers: this.constants.shortenNumbers\n                }));\n            });\n\n\t\t\tif (data.title) {\n\t\t\t\telements.push(\n\t\t\t\t\tgenerateAxisLabel({\n\t\t\t\t\t\ttitle: data.title,\n\t\t\t\t\t\tposition: data.pos,\n\t\t\t\t\t\theight: this.constants.height || data.zeroLine,\n\t\t\t\t\t\twidth: this.constants.width\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn elements;\n        },\n\n        animateElements(newData) {\n            const animateMultipleElements = (oldData, newData) => {\n                let newPos = newData.positions;\n                let newLabels = newData.labels;\n                let oldPos = oldData.positions;\n                let oldLabels = oldData.labels;\n\n                [oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n                [oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n                this.render({\n                    positions: oldPos,\n                    labels: newLabels\n                });\n\n                return this.store.map((line, i) => {\n                    return translateHoriLine(line, newPos[i], oldPos[i]);\n                });\n            };\n\n            // we will need to animate both axis if we have more than one.\n            // so check if the oldData is an array of values.\n            if (this.oldData instanceof Array) {\n                return this.oldData.forEach((old, i) => {\n                    animateMultipleElements(old, newData[i]);\n                });\n            }\n\n            let newPos = newData.positions;\n            let newLabels = newData.labels;\n            let oldPos = this.oldData.positions;\n            let oldLabels = this.oldData.labels;\n\n            [oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n            [oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n            this.render({\n                positions: oldPos,\n                labels: newLabels\n            });\n\n            return this.store.map((line, i) => {\n                return translateHoriLine(line, newPos[i], oldPos[i]);\n            });\n        }\n    },\n\n\txAxis: {\n\t\tlayerClass: 'x axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\txLine(position, data.calcLabels[i], this.constants.height,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.calcLabels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.calcLabels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tcalcLabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateVertLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyMarkers: {\n\t\tlayerClass: 'y-markers',\n\t\tmakeElements(data) {\n\t\t\treturn data.map((m) => \n\t\t\t\tyMarker(m.position, m.label, this.constants.width, {\n\t\t\t\t\tlabelPos: m.options.labelPos,\n\t\t\t\t\tmode: 'span',\n\t\t\t\t\tlineType: 'dashed'\n\t\t\t\t})\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.position);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newOptions = newData.map(d => d.options);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.position);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tposition: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i],\n\t\t\t\t\toptions: newOptions[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyRegions: {\n\t\tlayerClass: 'y-regions',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(r =>\n\t\t\t\tyRegion(r.startPos, r.endPos, this.constants.width,\n\t\t\t\t\tr.label, {labelPos: r.options.labelPos})\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.endPos);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newStarts = newData.map(d => d.startPos);\n\t\t\tlet newOptions = newData.map(d => d.options);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.endPos);\n\t\t\tlet oldStarts = this.oldData.map(d => d.startPos);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tstartPos: oldStarts[i],\n\t\t\t\t\tendPos: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i],\n\t\t\t\t\toptions: newOptions[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((rectGroup, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateRegion(\n\t\t\t\t\trectGroup, newStarts[i], newPos[i], oldPos[i]\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\theatDomain: {\n\t\tlayerClass: function() { return 'heat-domain domain-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet {index, colWidth, rowHeight, squareSize, radius, xTranslate} = this.constants;\n\t\t\tlet monthNameHeight = -12;\n\t\t\tlet x = xTranslate, y = 0;\n\n\t\t\tthis.serializedSubDomains = [];\n\n\t\t\tdata.cols.map((week, weekNo) => {\n\t\t\t\tif(weekNo === 1) {\n\t\t\t\t\tthis.labels.push(\n\t\t\t\t\t\tmakeText('domain-name', x, monthNameHeight, getMonthName(index, true).toUpperCase(),\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfontSize: 9\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tweek.map((day, i) => {\n\t\t\t\t\tif(day.fill) {\n\t\t\t\t\t\tlet data = {\n\t\t\t\t\t\t\t'data-date': day.yyyyMmDd,\n\t\t\t\t\t\t\t'data-value': day.dataValue,\n\t\t\t\t\t\t\t'data-day': i\n\t\t\t\t\t\t};\n\t\t\t\t\t\tlet square = heatSquare('day', x, y, squareSize, radius, day.fill, data);\n\t\t\t\t\t\tthis.serializedSubDomains.push(square);\n\t\t\t\t\t}\n\t\t\t\t\ty += rowHeight;\n\t\t\t\t});\n\t\t\t\ty = 0;\n\t\t\t\tx += colWidth;\n\t\t\t});\n\n\t\t\treturn this.serializedSubDomains;\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tif(newData) return [];\n\t\t}\n\t},\n\n\tbarGraph: {\n\t\tlayerClass: function() { return 'dataset-units dataset-bars dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'bar';\n\t\t\tthis.units = data.yPositions.map((y, j) => {\n\t\t\t\treturn datasetBar(\n\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\ty,\n\t\t\t\t\tdata.barWidth,\n\t\t\t\t\tc.color,\n\t\t\t\t\tdata.labels[j],\n\t\t\t\t\tj,\n\t\t\t\t\tdata.offsets[j],\n\t\t\t\t\t{\n\t\t\t\t\t\tzeroLine: data.zeroLine,\n\t\t\t\t\t\tbarsWidth: data.barsWidth,\n\t\t\t\t\t\tminHeight: c.minHeight\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t\treturn this.units;\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newOffsets = newData.offsets;\n\t\t\tlet newLabels = newData.labels;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldOffsets = this.oldData.offsets;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldOffsets, newOffsets] = equilizeNoOfElements(oldOffsets, newOffsets);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\toffsets: oldOffsets,\n\t\t\t\tlabels: newLabels,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tbarsWidth: this.oldData.barsWidth,\n\t\t\t\tbarWidth: this.oldData.barWidth,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((bar, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateBar(\n\t\t\t\t\tbar, newXPos[i], newYPos[i], newData.barWidth, newOffsets[i],\n\t\t\t\t\t{zeroLine: newData.zeroLine}\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n    lineGraph: {\n        layerClass: function () {\n            return 'dataset-units dataset-line dataset-' + this.constants.index;\n        },\n        makeElements(data) {\n            let c = this.constants;\n            this.unitType = 'dot';\n            this.paths = {};\n            if (!c.hideLine) {\n                this.paths = getPaths(\n                    data.xPositions,\n                    data.yPositions,\n                    c.color,\n                    {\n                        heatline: c.heatline,\n                        regionFill: c.regionFill,\n                        spline: c.spline\n                    },\n                    {\n                        svgDefs: c.svgDefs,\n                        zeroLine: data.zeroLine\n                    }\n                );\n            }\n\n            this.units = [];\n\n            if (!c.hideDots) {\n                this.units = data.yPositions.map((y, j) => {\n                    return datasetDot(\n                        data.xPositions[j],\n                        y,\n                        data.radius,\n                        c.color,\n                        c.valuesOverPoints ? data.values[j] : '',\n                        j\n                    );\n                });\n            }\n\n            return Object.values(this.paths).concat(this.units);\n        },\n        animateElements(newData) {\n            let newXPos = newData.xPositions;\n            let newYPos = newData.yPositions;\n            let newValues = newData.values;\n\n            let oldXPos = this.oldData.xPositions;\n            let oldYPos = this.oldData.yPositions;\n            let oldValues = this.oldData.values;\n\n            [oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n            [oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n            [oldValues, newValues] = equilizeNoOfElements(oldValues, newValues);\n\n            this.render({\n                xPositions: oldXPos,\n                yPositions: oldYPos,\n                values: newValues,\n\n                zeroLine: this.oldData.zeroLine,\n                radius: this.oldData.radius\n            });\n\n            let animateElements = [];\n\n            if (Object.keys(this.paths).length) {\n                animateElements = animateElements.concat(\n                    animatePath(\n                        this.paths,\n                        newXPos,\n                        newYPos,\n                        newData.zeroLine,\n                        this.constants.spline\n                    )\n                );\n            }\n\n            if (this.units.length) {\n                this.units.map((dot, i) => {\n                    animateElements = animateElements.concat(\n                        animateDot(dot, newXPos[i], newYPos[i])\n                    );\n                });\n            }\n\n            return animateElements;\n        }\n    }\n};\n\nexport function getComponent(name, constants, getData) {\n\tlet keys = Object.keys(componentConfigs).filter(k => name.includes(k));\n\tlet config = componentConfigs[keys[0]];\n\tObject.assign(config, {\n\t\tconstants: constants,\n\t\tgetData: getData\n\t});\n\treturn new ChartComponent(config);\n}\n","import { floatTwo } from './helpers';\n\nfunction normalize(x) {\n\t// Calculates mantissa and exponent of a number\n\t// Returns normalized number and exponent\n\t// https://stackoverflow.com/q/9383593/6495043\n\n\tif(x===0) {\n\t\treturn [0, 0];\n\t}\n\tif(isNaN(x)) {\n\t\treturn {mantissa: -6755399441055744, exponent: 972};\n\t}\n\tvar sig = x > 0 ? 1 : -1;\n\tif(!isFinite(x)) {\n\t\treturn {mantissa: sig * 4503599627370496, exponent: 972};\n\t}\n\n\tx = Math.abs(x);\n\tvar exp = Math.floor(Math.log10(x));\n\tvar man = x/Math.pow(10, exp);\n\n\treturn [sig * man, exp];\n}\n\nfunction getChartRangeIntervals(max, min=0) {\n\tlet upperBound = Math.ceil(max);\n\tlet lowerBound = Math.floor(min);\n\tlet range = upperBound - lowerBound;\n\n\tlet noOfParts = range;\n\tlet partSize = 1;\n\n\t// To avoid too many partitions\n\tif(range > 5) {\n\t\tif(range % 2 !== 0) {\n\t\t\tupperBound++;\n\t\t\t// Recalc range\n\t\t\trange = upperBound - lowerBound;\n\t\t}\n\t\tnoOfParts = range/2;\n\t\tpartSize = 2;\n\t}\n\n\t// Special case: 1 and 2\n\tif(range <= 2) {\n\t\tnoOfParts = 4;\n\t\tpartSize = range/noOfParts;\n\t}\n\n\t// Special case: 0\n\tif(range === 0) {\n\t\tnoOfParts = 5;\n\t\tpartSize = 1;\n\t}\n\n\tlet intervals = [];\n\tfor(var i = 0; i <= noOfParts; i++){\n\t\tintervals.push(lowerBound + partSize * i);\n\t}\n\treturn intervals;\n}\n\nfunction getChartIntervals(maxValue, minValue=0) {\n\tlet [normalMaxValue, exponent] = normalize(maxValue);\n\tlet normalMinValue = minValue ? minValue/Math.pow(10, exponent): 0;\n\n\t// Allow only 7 significant digits\n\tnormalMaxValue = normalMaxValue.toFixed(6);\n\n\tlet intervals = getChartRangeIntervals(normalMaxValue, normalMinValue);\n\tintervals = intervals.map(value => {\n\t\t// For negative exponents we want to divide by 10^-exponent to avoid\n\t\t// floating point arithmetic bugs. For instance, in javascript\n\t\t// 6 * 10^-1 == 0.6000000000000001, we instead want 6 / 10^1 == 0.6\n\t\tif (exponent < 0) {\n\t\t\treturn value / Math.pow(10, -exponent);\n\t\t}\n\t\treturn value * Math.pow(10, exponent);\n\t});\n\treturn intervals;\n}\n\nexport function calcChartIntervals(values, withMinimum=false) {\n\t//*** Where the magic happens ***\n\n\t// Calculates best-fit y intervals from given values\n\t// and returns the interval array\n\n\tlet maxValue = Math.max(...values);\n\tlet minValue = Math.min(...values);\n\n\t// Exponent to be used for pretty print\n\tlet exponent = 0, intervals = []; // eslint-disable-line no-unused-vars\n\n\tfunction getPositiveFirstIntervals(maxValue, absMinValue) {\n\t\tlet intervals = getChartIntervals(maxValue);\n\n\t\tlet intervalSize = intervals[1] - intervals[0];\n\n\t\t// Then unshift the negative values\n\t\tlet value = 0;\n\t\tfor(var i = 1; value < absMinValue; i++) {\n\t\t\tvalue += intervalSize;\n\t\t\tintervals.unshift((-1) * value);\n\t\t}\n\t\treturn intervals;\n\t}\n\n\t// CASE I: Both non-negative\n\n\tif(maxValue >= 0 && minValue >= 0) {\n\t\texponent = normalize(maxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(maxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(maxValue, minValue);\n\t\t}\n\t}\n\n\t// CASE II: Only minValue negative\n\n\telse if(maxValue > 0 && minValue < 0) {\n\t\t// `withMinimum` irrelevant in this case,\n\t\t// We'll be handling both sides of zero separately\n\t\t// (both starting from zero)\n\t\t// Because ceil() and floor() behave differently\n\t\t// in those two regions\n\n\t\tlet absMinValue = Math.abs(minValue);\n\n\t\tif(maxValue >= absMinValue) {\n\t\t\texponent = normalize(maxValue)[1];\n\t\t\tintervals = getPositiveFirstIntervals(maxValue, absMinValue);\n\t\t} else {\n\t\t\t// Mirror: maxValue => absMinValue, then change sign\n\t\t\texponent = normalize(absMinValue)[1];\n\t\t\tlet posIntervals = getPositiveFirstIntervals(absMinValue, maxValue);\n\t\t\tintervals = posIntervals.reverse().map(d => d * (-1));\n\t\t}\n\n\t}\n\n\t// CASE III: Both non-positive\n\n\telse if(maxValue <= 0 && minValue <= 0) {\n\t\t// Mirrored Case I:\n\t\t// Work with positives, then reverse the sign and array\n\n\t\tlet pseudoMaxValue = Math.abs(minValue);\n\t\tlet pseudoMinValue = Math.abs(maxValue);\n\n\t\texponent = normalize(pseudoMaxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue, pseudoMinValue);\n\t\t}\n\n\t\tintervals = intervals.reverse().map(d => d * (-1));\n\t}\n\n\treturn intervals;\n}\n\nexport function getZeroIndex(yPts) {\n\tlet zeroIndex;\n\tlet interval = getIntervalSize(yPts);\n\tif(yPts.indexOf(0) >= 0) {\n\t\t// the range has a given zero\n\t\t// zero-line on the chart\n\t\tzeroIndex = yPts.indexOf(0);\n\t} else if(yPts[0] > 0) {\n\t\t// Minimum value is positive\n\t\t// zero-line is off the chart: below\n\t\tlet min = yPts[0];\n\t\tzeroIndex = (-1) * min / interval;\n\t} else {\n\t\t// Maximum value is negative\n\t\t// zero-line is off the chart: above\n\t\tlet max = yPts[yPts.length - 1];\n\t\tzeroIndex = (-1) * max / interval + (yPts.length - 1);\n\t}\n\treturn zeroIndex;\n}\n\nexport function getRealIntervals(max, noOfIntervals, min = 0, asc = 1) {\n\tlet range = max - min;\n\tlet part = range * 1.0 / noOfIntervals;\n\tlet intervals = [];\n\n\tfor(var i = 0; i <= noOfIntervals; i++) {\n\t\tintervals.push(min + part * i);\n\t}\n\n\treturn asc ? intervals : intervals.reverse();\n}\n\nexport function getIntervalSize(orderedArray) {\n\treturn orderedArray[1] - orderedArray[0];\n}\n\nexport function getValueRange(orderedArray) {\n\treturn orderedArray[orderedArray.length-1] - orderedArray[0];\n}\n\nexport function scale(val, yAxis) {\n\treturn floatTwo(yAxis.zeroLine - val * yAxis.scaleMultiplier);\n}\n\nexport function isInRange(val, min, max) {\n\treturn val > min && val < max;\n}\n\nexport function isInRange2D(coord, minCoord, maxCoord) {\n\treturn isInRange(coord[0], minCoord[0], maxCoord[0])\n\t\t&& isInRange(coord[1], minCoord[1], maxCoord[1]);\n}\n\nexport function getClosestInArray(goal, arr, index = false) {\n\tlet closest = arr.reduce(function(prev, curr) {\n\t\treturn (Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev);\n\t}, []);\n\n\treturn index ? arr.indexOf(closest) : closest;\n}\n\nexport function calcDistribution(values, distributionSize) {\n\t// Assume non-negative values,\n\t// implying distribution minimum at zero\n\n\tlet dataMaxValue = Math.max(...values);\n\n\tlet distributionStep = 1 / (distributionSize - 1);\n\tlet distribution = [];\n\n\tfor(var i = 0; i < distributionSize; i++) {\n\t\tlet checkpoint = dataMaxValue * (distributionStep * i);\n\t\tdistribution.push(checkpoint);\n\t}\n\n\treturn distribution;\n}\n\nexport function getMaxCheckpoint(value, distribution) {\n\treturn distribution.filter(d => d < value).length;\n}\n","import { fillArray } from '../utils/helpers';\nimport { DEFAULT_AXIS_CHART_TYPE, AXIS_DATASET_CHART_TYPES, DEFAULT_CHAR_WIDTH } from '../utils/constants';\n\nexport function dataPrep(data, type) {\n\tdata.labels = data.labels || [];\n\n\tlet datasetLength = data.labels.length;\n\n\t// Datasets\n\tlet datasets = data.datasets;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\tif(!datasets) {\n\t\t// default\n\t\tdatasets = [{\n\t\t\tvalues: zeroArray\n\t\t}];\n\t}\n\n\tdatasets.map(d=> {\n\t\t// Set values\n\t\tif(!d.values) {\n\t\t\td.values = zeroArray;\n\t\t} else {\n\t\t\t// Check for non values\n\t\t\tlet vals = d.values;\n\t\t\tvals = vals.map(val => (!isNaN(val) ? val : 0));\n\n\t\t\t// Trim or extend\n\t\t\tif(vals.length > datasetLength) {\n\t\t\t\tvals = vals.slice(0, datasetLength);\n\t\t\t} else {\n\t\t\t\tvals = fillArray(vals, datasetLength - vals.length, 0);\n\t\t\t}\n\t\t\td.values = vals;\n\t\t}\n\n\t\t// Set type\n\t\tif(!d.chartType ) {\n\t\t\tif(!AXIS_DATASET_CHART_TYPES.includes(type)) type === DEFAULT_AXIS_CHART_TYPE;\n\t\t\td.chartType = type;\n\t\t}\n\n\t});\n\n\t// Markers\n\n\t// Regions\n\t// data.yRegions = data.yRegions || [];\n\tif(data.yRegions) {\n\t\tdata.yRegions.map(d => {\n\t\t\tif(d.end < d.start) {\n\t\t\t\t[d.start, d.end] = [d.end, d.start];\n\t\t\t}\n\t\t});\n\t}\n\n\treturn data;\n}\n\nexport function zeroDataPrep(realData) {\n\tlet datasetLength = realData.labels.length;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\n    let zeroData = {\n        labels: realData.labels.slice(0, -1),\n        datasets: realData.datasets.map((d) => {\n            const { axisID } = d;\n            return {\n                axisID,\n                name: '',\n                values: zeroArray.slice(0, -1),\n                chartType: d.chartType\n            };\n        })\n    };\n\n\tif(realData.yMarkers) {\n\t\tzeroData.yMarkers = [\n\t\t\t{\n\t\t\t\tvalue: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\tif(realData.yRegions) {\n\t\tzeroData.yRegions = [\n\t\t\t{\n\t\t\t\tstart: 0,\n\t\t\t\tend: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\treturn zeroData;\n}\n\nexport function getShortenedLabels(chartWidth, labels=[], isSeries=true) {\n\tlet allowedSpace = chartWidth / labels.length;\n\tif(allowedSpace <= 0) allowedSpace = 1;\n\tlet allowedLetters = allowedSpace / DEFAULT_CHAR_WIDTH;\n\n\tlet seriesMultiple;\n\tif(isSeries) {\n\t\t// Find the maximum label length for spacing calculations\n\t\tlet maxLabelLength = Math.max(...labels.map(label => label.length));\n\t\tseriesMultiple = Math.ceil(maxLabelLength/allowedLetters);\n\t}\n\n\tlet calcLabels = labels.map((label, i) => {\n\t\tlabel += \"\";\n\t\tif(label.length > allowedLetters) {\n\n\t\t\tif(!isSeries) {\n\t\t\t\tif(allowedLetters-3 > 0) {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters-3) + \" ...\";\n\t\t\t\t} else {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters) + '..';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif(i % seriesMultiple !== 0) {\n\t\t\t\t\tlabel = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn label;\n\t});\n\n\treturn calcLabels;\n}\n","import '../css/charts.scss';\n\n// import MultiAxisChart from './charts/MultiAxisChart';\nimport PercentageChart from './charts/PercentageChart';\nimport PieChart from './charts/PieChart';\nimport Heatmap from './charts/Heatmap';\nimport AxisChart from './charts/AxisChart';\nimport DonutChart from './charts/DonutChart';\n\nconst chartTypes = {\n\tbar: AxisChart,\n\tline: AxisChart,\n\t// multiaxis: MultiAxisChart,\n\tpercentage: PercentageChart,\n\theatmap: Heatmap,\n\tpie: PieChart,\n\tdonut: DonutChart,\n};\n\nfunction getChartByType(chartType = 'line', parent, options) {\n\tif (chartType === 'axis-mixed') {\n\t\toptions.type = 'line';\n\t\treturn new AxisChart(parent, options);\n\t}\n\n\tif (!chartTypes[chartType]) {\n\t\tconsole.error(\"Undefined chart type: \" + chartType);\n\t\treturn;\n\t}\n\n\treturn new chartTypes[chartType](parent, options);\n}\n\nclass Chart {\n\tconstructor(parent, options) {\n\t\treturn getChartByType(options.type, parent, options);\n\t}\n}\n\nexport { Chart, PercentageChart, PieChart, Heatmap, AxisChart };","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { $ } from '../utils/dom';\nimport { TOOLTIP_POINTER_TRIANGLE_HEIGHT } from '../utils/constants';\n\nexport default class SvgTip {\n\tconstructor({\n\t\tparent = null,\n\t\tcolors = []\n\t}) {\n\t\tthis.parent = parent;\n\t\tthis.colors = colors;\n\t\tthis.titleName = '';\n\t\tthis.titleValue = '';\n\t\tthis.listValues = [];\n\t\tthis.titleValueFirst = 0;\n\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\n\t\tthis.top = 0;\n\t\tthis.left = 0;\n\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tthis.makeTooltip();\n\t}\n\n\trefresh() {\n\t\tthis.fill();\n\t\tthis.calcPosition();\n\t}\n\n\tmakeTooltip() {\n\t\tthis.container = $.create('div', {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'graph-svg-tip comparison',\n\t\t\tinnerHTML: `<span class=\"title\"></span>\n\t\t\t\t<ul class=\"data-point-list\"></ul>\n\t\t\t\t<div class=\"svg-pointer\"></div>`\n\t\t});\n\t\tthis.hideTip();\n\n\t\tthis.title = this.container.querySelector('.title');\n\t\tthis.dataPointList = this.container.querySelector('.data-point-list');\n\n\t\tthis.parent.addEventListener('mouseleave', () => {\n\t\t\tthis.hideTip();\n\t\t});\n\t}\n\n\tfill() {\n\t\tlet title;\n\t\tif(this.index) {\n\t\t\tthis.container.setAttribute('data-point-index', this.index);\n\t\t}\n\t\tif(this.titleValueFirst) {\n\t\t\ttitle = `<strong>${this.titleValue}</strong>${this.titleName}`;\n\t\t} else {\n\t\t\ttitle = `${this.titleName}<strong>${this.titleValue}</strong>`;\n\t\t}\n\t\tthis.title.innerHTML = title;\n\t\tthis.dataPointList.innerHTML = '';\n\n\t\tthis.listValues.map((set, i) => {\n\t\t\tconst color = this.colors[i] || 'black';\n\t\t\tlet value = set.formatted === 0 || set.formatted ? set.formatted : set.value;\n\n\t\t\tlet li = $.create('li', {\n\t\t\t\tstyles: {\n\t\t\t\t\t'border-top': `3px solid ${color}`\n\t\t\t\t},\n\t\t\t\tinnerHTML: `<strong style=\"display: block;\">${ value === 0 || value ? value : '' }</strong>\n\t\t\t\t\t${set.title ? set.title : '' }`\n\t\t\t});\n\n\t\t\tthis.dataPointList.appendChild(li);\n\t\t});\n\t}\n\n\tcalcPosition() {\n\t\tlet width = this.container.offsetWidth;\n\n\t\tthis.top = this.y - this.container.offsetHeight\n\t\t\t- TOOLTIP_POINTER_TRIANGLE_HEIGHT;\n\t\tthis.left = this.x - width/2;\n\t\tlet maxLeft = this.parent.offsetWidth - width;\n\n\t\tlet pointer = this.container.querySelector('.svg-pointer');\n\n\t\tif(this.left < 0) {\n\t\t\tpointer.style.left = `calc(50% - ${-1 * this.left}px)`;\n\t\t\tthis.left = 0;\n\t\t} else if(this.left > maxLeft) {\n\t\t\tlet delta = this.left - maxLeft;\n\t\t\tlet pointerOffset = `calc(50% + ${delta}px)`;\n\t\t\tpointer.style.left = pointerOffset;\n\n\t\t\tthis.left = maxLeft;\n\t\t} else {\n\t\t\tpointer.style.left = `50%`;\n\t\t}\n\t}\n\n\tsetValues(x, y, title = {}, listValues = [], index = -1) {\n\t\tthis.titleName = title.name;\n\t\tthis.titleValue = title.value;\n\t\tthis.listValues = listValues;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.titleValueFirst = title.valueFirst || 0;\n\t\tthis.index = index;\n\t\tthis.refresh();\n\t}\n\n\thideTip() {\n\t\tthis.container.style.top = '0px';\n\t\tthis.container.style.left = '0px';\n\t\tthis.container.style.opacity = '0';\n\t}\n\n\tshowTip() {\n\t\tthis.container.style.top = this.top + 'px';\n\t\tthis.container.style.left = this.left + 'px';\n\t\tthis.container.style.opacity = '1';\n\t}\n}\n","export const CSSTEXT = \".chart-container{position:relative;font-family:-apple-system,BlinkMacSystemFont,'Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue',sans-serif}.chart-container .axis,.chart-container .chart-label{fill:#555b51}.chart-container .axis line,.chart-container .chart-label line{stroke:#dadada}.chart-container .dataset-units circle{stroke:#fff;stroke-width:2}.chart-container .dataset-units path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container .dataset-path{stroke-width:2px}.chart-container .path-group path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container line.dashed{stroke-dasharray:5,3}.chart-container .axis-line .specific-value{text-anchor:start}.chart-container .axis-line .y-line{text-anchor:end}.chart-container .axis-line .x-line{text-anchor:middle}.chart-container .legend-dataset-text{fill:#6c7680;font-weight:600}.graph-svg-tip{position:absolute;z-index:99999;padding:10px;font-size:12px;color:#959da5;text-align:center;background:rgba(0,0,0,.8);border-radius:3px}.graph-svg-tip ul{padding-left:0;display:flex}.graph-svg-tip ol{padding-left:0;display:flex}.graph-svg-tip ul.data-point-list li{min-width:90px;flex:1;font-weight:600}.graph-svg-tip strong{color:#dfe2e5;font-weight:600}.graph-svg-tip .svg-pointer{position:absolute;height:5px;margin:0 0 0 -5px;content:' ';border:5px solid transparent;border-top-color:rgba(0,0,0,.8)}.graph-svg-tip.comparison{padding:0;text-align:left;pointer-events:none}.graph-svg-tip.comparison .title{display:block;padding:10px;margin:0;font-weight:600;line-height:1;pointer-events:none}.graph-svg-tip.comparison ul{margin:0;white-space:nowrap;list-style:none}.graph-svg-tip.comparison li{display:inline-block;padding:5px 10px}\";","import SvgTip from '../objects/SvgTip';\nimport { $, isElementInViewport, getElementContentWidth, isHidden } from '../utils/dom';\nimport { makeSVGContainer, makeSVGDefs, makeSVGGroup, makeText } from '../utils/draw';\nimport { BASE_MEASURES, getExtraHeight, getExtraWidth, getTopOffset, getLeftOffset,\n\tINIT_CHART_UPDATE_TIMEOUT, CHART_POST_ANIMATE_TIMEOUT, DEFAULT_COLORS} from '../utils/constants';\nimport { getColor, isValidColor } from '../utils/colors';\nimport { runSMILAnimation } from '../utils/animation';\nimport { downloadFile, prepareForExport } from '../utils/export';\nimport { deepClone } from  '../utils/helpers';\n\nexport default class BaseChart {\n\tconstructor(parent, options) {\n\t\t// deepclone options to avoid making changes to orignal object\n\t\toptions = deepClone(options);\n\n\t\tthis.parent = typeof parent === 'string'\n\t\t\t? document.querySelector(parent)\n\t\t\t: parent;\n\n\t\tif (!(this.parent instanceof HTMLElement)) {\n\t\t\tthrow new Error('No `parent` element to render on was provided.');\n\t\t}\n\n\t\tthis.rawChartArgs = options;\n\n\t\tthis.title = options.title || '';\n\t\tthis.type = options.type || '';\n\n\t\tthis.realData = this.prepareData(options.data);\n\t\tthis.data = this.prepareFirstData(this.realData);\n\n\t\tthis.colors = this.validateColors(options.colors, this.type);\n\n\t\tthis.config = {\n\t\t\tshowTooltip: 1, // calculate\n\t\t\tshowLegend: 1, // calculate\n\t\t\tisNavigable: options.isNavigable || 0,\n\t\t\tanimate: (typeof options.animate !== 'undefined') ? options.animate : 1,\n\t\t\ttruncateLegends: options.truncateLegends || 1\n\t\t};\n\n\t\tthis.measures = JSON.parse(JSON.stringify(BASE_MEASURES));\n\t\tlet m = this.measures;\n\t\tthis.setMeasures(options);\n\t\tif(!this.title.length) { m.titleHeight = 0; }\n\t\tif(!this.config.showLegend) m.legendHeight = 0;\n\t\tthis.argHeight = options.height || m.baseHeight;\n\n\t\tthis.state = {};\n\t\tthis.options = {};\n\n\t\tthis.initTimeout = INIT_CHART_UPDATE_TIMEOUT;\n\n\t\tif(this.config.isNavigable) {\n\t\t\tthis.overlays = [];\n\t\t}\n\n\t\tthis.configure(options);\n\t}\n\n\tprepareData(data) {\n\t\treturn data;\n\t}\n\n\tprepareFirstData(data) {\n\t\treturn data;\n\t}\n\n\tvalidateColors(colors, type) {\n\t\tconst validColors = [];\n\t\tcolors = (colors || []).concat(DEFAULT_COLORS[type]);\n\t\tcolors.forEach((string) => {\n\t\t\tconst color = getColor(string);\n\t\t\tif(!isValidColor(color)) {\n\t\t\t\tconsole.warn('\"' + string + '\" is not a valid color.');\n\t\t\t} else {\n\t\t\t\tvalidColors.push(color);\n\t\t\t}\n\t\t});\n\t\treturn validColors;\n\t}\n\n\tsetMeasures() {\n\t\t// Override measures, including those for title and legend\n\t\t// set config for legend and title\n\t}\n\n\tconfigure() {\n\t\tlet height = this.argHeight;\n\t\tthis.baseHeight = height;\n\t\tthis.height = height - getExtraHeight(this.measures);\n\n\t\t// Bind window events\n\t\tthis.boundDrawFn = () => this.draw(true);\n\t\tif (ResizeObserver) {\n\t\t\tthis.resizeObserver = new ResizeObserver(this.boundDrawFn);\n\t\t\tthis.resizeObserver.observe(this.parent);\n\t\t}\n\t\twindow.addEventListener('resize', this.boundDrawFn);\n\t\twindow.addEventListener('orientationchange', this.boundDrawFn);\n\t}\n\n\tdestroy() {\n\t\tif (this.resizeObserver) this.resizeObserver.disconnect();\n\t\twindow.removeEventListener('resize', this.boundDrawFn);\n\t\twindow.removeEventListener('orientationchange', this.boundDrawFn);\n\t}\n\n\t// Has to be called manually\n\tsetup() {\n\t\tthis.makeContainer();\n\t\tthis.updateWidth();\n\t\tthis.makeTooltip();\n\n\t\tthis.draw(false, true);\n\t}\n\n\tmakeContainer() {\n\t\t// Chart needs a dedicated parent element\n\t\tthis.parent.innerHTML = '';\n\n\t\tlet args = {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'chart-container'\n\t\t};\n\n\t\tif(this.independentWidth) {\n\t\t\targs.styles = { width: this.independentWidth + 'px' };\n\t\t}\n\n\t\tthis.container = $.create('div', args);\n\t}\n\n\tmakeTooltip() {\n\t\tthis.tip = new SvgTip({\n\t\t\tparent: this.container,\n\t\t\tcolors: this.colors\n\t\t});\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {}\n\n\tdraw(onlyWidthChange=false, init=false) {\n\t\tif (onlyWidthChange && isHidden(this.parent)) {\n\t\t\t// Don't update anything if the chart is hidden\n\t\t\treturn;\n\t\t}\n\t\tthis.updateWidth();\n\n\t\tthis.calc(onlyWidthChange);\n\t\tthis.makeChartArea();\n\t\tthis.setupComponents();\n\n\t\tthis.components.forEach(c => c.setup(this.drawArea));\n\t\t// this.components.forEach(c => c.make());\n\t\tthis.render(this.components, false);\n\n\t\tif(init) {\n\t\t\tthis.data = this.realData;\n\t\t\tsetTimeout(() => {this.update(this.data);}, this.initTimeout);\n\t\t}\n\n\t\tthis.renderLegend();\n\n\t\tthis.setupNavigation(init);\n\t}\n\n\tcalc() {} // builds state\n\n\tupdateWidth() {\n\t\tthis.baseWidth = getElementContentWidth(this.parent);\n\t\tthis.width = this.baseWidth - getExtraWidth(this.measures);\n\t}\n\n\tmakeChartArea() {\n\t\tif(this.svg) {\n\t\t\tthis.container.removeChild(this.svg);\n\t\t}\n\t\tlet m = this.measures;\n\n\t\tthis.svg = makeSVGContainer(\n\t\t\tthis.container,\n\t\t\t'frappe-chart chart',\n\t\t\tthis.baseWidth,\n\t\t\tthis.baseHeight\n\t\t);\n\t\tthis.svgDefs = makeSVGDefs(this.svg);\n\n\t\tif(this.title.length) {\n\t\t\tthis.titleEL = makeText(\n\t\t\t\t'title',\n\t\t\t\tm.margins.left,\n\t\t\t\tm.margins.top,\n\t\t\t\tthis.title,\n\t\t\t\t{\n\t\t\t\t\tfontSize: m.titleFontSize,\n\t\t\t\t\tfill: '#666666',\n\t\t\t\t\tdy: m.titleFontSize\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tlet top = getTopOffset(m);\n\t\tthis.drawArea = makeSVGGroup(\n\t\t\tthis.type + '-chart chart-draw-area',\n\t\t\t`translate(${getLeftOffset(m)}, ${top})`\n\t\t);\n\n\t\tif(this.config.showLegend) {\n\t\t\ttop += this.height + m.paddings.bottom;\n\t\t\tthis.legendArea = makeSVGGroup(\n\t\t\t\t'chart-legend',\n\t\t\t\t`translate(${getLeftOffset(m)}, ${top})`\n\t\t\t);\n\t\t}\n\n\t\tif(this.title.length) { this.svg.appendChild(this.titleEL); }\n\t\tthis.svg.appendChild(this.drawArea);\n\t\tif(this.config.showLegend) { this.svg.appendChild(this.legendArea); }\n\n\t\tthis.updateTipOffset(getLeftOffset(m), getTopOffset(m));\n\t}\n\n\tupdateTipOffset(x, y) {\n\t\tthis.tip.offset = {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tsetupComponents() { this.components = new Map(); }\n\n\tupdate(data) {\n\t\tif(!data) {\n\t\t\tconsole.error('No data to update.');\n\t\t}\n\t\tthis.data = this.prepareData(data);\n\t\tthis.calc(); // builds state\n\t\tthis.render(this.components, this.config.animate);\n\t\tthis.renderLegend();\n\t}\n\n\trender(components=this.components, animate=true) {\n\t\tif(this.config.isNavigable) {\n\t\t\t// Remove all existing overlays\n\t\t\tthis.overlays.map(o => o.parentNode.removeChild(o));\n\t\t\t// ref.parentNode.insertBefore(element, ref);\n\t\t}\n\t\tlet elementsToAnimate = [];\n\t\t// Can decouple to this.refreshComponents() first to save animation timeout\n\t\tcomponents.forEach(c => {\n\t\t\telementsToAnimate = elementsToAnimate.concat(c.update(animate));\n\t\t});\n\t\tif(elementsToAnimate.length > 0) {\n\t\t\trunSMILAnimation(this.container, this.svg, elementsToAnimate);\n\t\t\tsetTimeout(() => {\n\t\t\t\tcomponents.forEach(c => c.make());\n\t\t\t\tthis.updateNav();\n\t\t\t}, CHART_POST_ANIMATE_TIMEOUT);\n\t\t} else {\n\t\t\tcomponents.forEach(c => c.make());\n\t\t\tthis.updateNav();\n\t\t}\n\t}\n\n\tupdateNav() {\n\t\tif(this.config.isNavigable) {\n\t\t\tthis.makeOverlay();\n\t\t\tthis.bindUnits();\n\t\t}\n\t}\n\n\trenderLegend() {}\n\n\tsetupNavigation(init=false) {\n\t\tif(!this.config.isNavigable) return;\n\n\t\tif(init) {\n\t\t\tthis.bindOverlay();\n\n\t\t\tthis.keyActions = {\n\t\t\t\t'13': this.onEnterKey.bind(this),\n\t\t\t\t'37': this.onLeftArrow.bind(this),\n\t\t\t\t'38': this.onUpArrow.bind(this),\n\t\t\t\t'39': this.onRightArrow.bind(this),\n\t\t\t\t'40': this.onDownArrow.bind(this),\n\t\t\t};\n\n\t\t\tdocument.addEventListener('keydown', (e) => {\n\t\t\t\tif(isElementInViewport(this.container)) {\n\t\t\t\t\te = e || window.event;\n\t\t\t\t\tif(this.keyActions[e.keyCode]) {\n\t\t\t\t\t\tthis.keyActions[e.keyCode]();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tmakeOverlay() {}\n\tupdateOverlay() {}\n\tbindOverlay() {}\n\tbindUnits() {}\n\n\tonLeftArrow() {}\n\tonRightArrow() {}\n\tonUpArrow() {}\n\tonDownArrow() {}\n\tonEnterKey() {}\n\n\taddDataPoint() {}\n\tremoveDataPoint() {}\n\n\tgetDataPoint() {}\n\tsetCurrentDataPoint() {}\n\n\tupdateDataset() {}\n\n\texport() {\n\t\tlet chartSvg = prepareForExport(this.svg);\n\t\tdownloadFile(this.title || 'Chart', [chartSvg]);\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { truncateString } from '../utils/draw-utils';\nimport { legendDot } from '../utils/draw';\nimport { round } from '../utils/helpers';\nimport { getExtraWidth } from '../utils/constants';\n\nexport default class AggregationChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\n\t\tthis.config.formatTooltipY = (args.tooltipOptions || {}).formatTooltipY;\n\t\tthis.config.maxSlices = args.maxSlices || 20;\n\t\tthis.config.maxLegendPoints = args.maxLegendPoints || 20;\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\t\tlet maxSlices = this.config.maxSlices;\n\t\ts.sliceTotals = [];\n\n\t\tlet allTotals = this.data.labels.map((label, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, label];\n\t\t}).filter(d => { return d[0] >= 0; }); // keep only positive results\n\n\t\tlet totals = allTotals;\n\t\tif(allTotals.length > maxSlices) {\n\t\t\t// Prune and keep a grey area for rest as per maxSlices\n\t\t\tallTotals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = allTotals.slice(0, maxSlices-1);\n\t\t\tlet remaining = allTotals.slice(maxSlices-1);\n\n\t\t\tlet sumOfRemaining = 0;\n\t\t\tremaining.map(d => {sumOfRemaining += d[0];});\n\t\t\ttotals.push([sumOfRemaining, 'Rest']);\n\t\t\tthis.colors[maxSlices-1] = 'grey';\n\t\t}\n\n\t\ts.labels = [];\n\t\ttotals.map(d => {\n\t\t\ts.sliceTotals.push(round(d[0]));\n\t\t\ts.labels.push(d[1]);\n\t\t});\n\n\t\ts.grandTotal = s.sliceTotals.reduce((a, b) => a + b, 0);\n\n\t\tthis.center = {\n\t\t\tx: this.width / 2,\n\t\t\ty: this.height / 2\n\t\t};\n\t}\n\n\trenderLegend() {\n\t\tlet s = this.state;\n\t\tthis.legendArea.textContent = '';\n\t\tthis.legendTotals = s.sliceTotals.slice(0, this.config.maxLegendPoints);\n\n\t\tlet count = 0;\n\t\tlet y = 0;\n\t\tthis.legendTotals.map((d, i) => {\n\t\t\tlet barWidth = 150;\n\t\t\tlet divisor = Math.floor(\n\t\t\t\t(this.width - getExtraWidth(this.measures))/barWidth\n\t\t\t);\n\t\t\tif (this.legendTotals.length < divisor) {\n\t\t\t\tbarWidth = this.width/this.legendTotals.length;\n\t\t\t}\n\t\t\tif(count > divisor) {\n\t\t\t\tcount = 0;\n\t\t\t\ty += 20;\n\t\t\t}\n\t\t\tlet x = barWidth * count + 5;\n\t\t\tlet label = this.config.truncateLegends ? truncateString(s.labels[i], barWidth/10) : s.labels[i];\n\t\t\tlet formatted = this.config.formatTooltipY ? this.config.formatTooltipY(d) : d;\n\t\t\tlet dot = legendDot(\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t\t5,\n\t\t\t\tthis.colors[i],\n\t\t\t\t`${label}: ${formatted}`,\n\t\t\t\tfalse\n\t\t\t);\n\t\t\tthis.legendArea.appendChild(dot);\n\t\t\tcount++;\n\t\t});\n\t}\n}\n","import AggregationChart from './AggregationChart';\nimport { getOffset } from '../utils/dom';\nimport { getComponent } from '../objects/ChartComponents';\nimport { PERCENTAGE_BAR_DEFAULT_HEIGHT, PERCENTAGE_BAR_DEFAULT_DEPTH } from '../utils/constants';\n\nexport default class PercentageChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'percentage';\n\t\tthis.setup();\n\t}\n\n\tsetMeasures(options) {\n\t\tlet m = this.measures;\n\t\tthis.barOptions = options.barOptions || {};\n\n\t\tlet b = this.barOptions;\n\t\tb.height = b.height || PERCENTAGE_BAR_DEFAULT_HEIGHT;\n\t\tb.depth = b.depth || PERCENTAGE_BAR_DEFAULT_DEPTH;\n\n\t\tm.paddings.right = 30;\n\t\tm.legendHeight = 60;\n\t\tm.baseHeight = (b.height + b.depth * 0.5) * 8;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'percentageBars',\n\t\t\t\t{\n\t\t\t\t\tbarHeight: this.barOptions.height,\n\t\t\t\t\tbarDepth: this.barOptions.depth,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: s.xPositions,\n\t\t\t\t\t\twidths: s.widths,\n\t\t\t\t\t\tcolors: this.colors\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\n\t\ts.xPositions = [];\n\t\ts.widths = [];\n\n\t\tlet xPos = 0;\n\t\ts.sliceTotals.map((value) => {\n\t\t\tlet width = this.width * value / s.grandTotal;\n\t\t\ts.widths.push(width);\n\t\t\ts.xPositions.push(xPos);\n\t\t\txPos += width;\n\t\t});\n\t}\n\n\tmakeDataByIndex() { }\n\n\tbindTooltip() {\n\t\tlet s = this.state;\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tlet bars = this.components.get('percentageBars').store;\n\t\t\tlet bar = e.target;\n\t\t\tif(bars.includes(bar)) {\n\n\t\t\t\tlet i = bars.indexOf(bar);\n\t\t\t\tlet gOff = getOffset(this.container), pOff = getOffset(bar);\n\n\t\t\t\tlet x = pOff.left - gOff.left + parseInt(bar.getAttribute('width'))/2;\n\t\t\t\tlet y = pOff.top - gOff.top;\n\t\t\t\tlet title = (this.formattedLabels && this.formattedLabels.length>0\n\t\t\t\t\t? this.formattedLabels[i] : this.state.labels[i]) + ': ';\n\t\t\t\tlet fraction = s.sliceTotals[i]/s.grandTotal;\n\n\t\t\t\tthis.tip.setValues(x, y, {name: title, value: (fraction*100).toFixed(1) + \"%\"});\n\t\t\t\tthis.tip.showTip();\n\t\t\t}\n\t\t});\n\t}\n}\n","import AggregationChart from './AggregationChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset } from '../utils/dom';\nimport { getPositionByAngle } from '../utils/helpers';\nimport { makeArcPathStr, makeCircleStr } from '../utils/draw';\nimport { lightenDarkenColor } from '../utils/colors';\nimport { transform } from '../utils/animation';\nimport { FULL_ANGLE } from '../utils/constants';\n\nexport default class PieChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'pie';\n\t\tthis.initTimeout = 0;\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.config.startAngle = args.startAngle || 0;\n\n\t\tthis.clockWise = args.clockWise || false;\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\t\tthis.radius = (this.height > this.width ? this.center.x : this.center.y);\n\n\t\tconst { radius, clockWise } = this;\n\n\t\tconst prevSlicesProperties = s.slicesProperties || [];\n\t\ts.sliceStrings = [];\n\t\ts.slicesProperties = [];\n\t\tlet curAngle = 180 - this.config.startAngle;\n\t\ts.sliceTotals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / s.grandTotal) * FULL_ANGLE;\n\t\t\tconst largeArc = originDiffAngle > 180 ? 1: 0;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = getPositionByAngle(startAngle, radius);\n\t\t\tconst endPosition = getPositionByAngle(endAngle, radius);\n\n\t\t\tconst prevProperty = this.init && prevSlicesProperties[i];\n\n\t\t\tlet curStart,curEnd;\n\t\t\tif(this.init) {\n\t\t\t\tcurStart = prevProperty ? prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty ? prevProperty.endPosition : startPosition;\n\t\t\t} else {\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath =\n\t\t\t\toriginDiffAngle === 360\n\t\t\t\t\t? makeCircleStr(curStart, curEnd, this.center, this.radius, clockWise, largeArc)\n\t\t\t\t\t: makeArcPathStr(curStart, curEnd, this.center, this.radius, clockWise, largeArc);\n\n\t\t\ts.sliceStrings.push(curPath);\n\t\t\ts.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: s.grandTotal,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle: diffAngle\n\t\t\t});\n\n\t\t});\n\t\tthis.init = 0;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'pieSlices',\n\t\t\t\t{ },\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsliceStrings: s.sliceStrings,\n\t\t\t\t\t\tcolors: this.colors\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalTranslateByAngle(property){\n\t\tconst{radius,hoverRadio} = this;\n\t\tconst position = getPositionByAngle(property.startAngle+(property.angle / 2),radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\n\thoverSlice(path,i,flag,e){\n\t\tif(!path) return;\n\t\tconst color = this.colors[i];\n\t\tif(flag) {\n\t\t\ttransform(path, this.calTranslateByAngle(this.state.slicesProperties[i]));\n\t\t\tpath.style.fill = lightenDarkenColor(color, 50);\n\t\t\tlet g_off = getOffset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t\t? this.formatted_labels[i] : this.state.labels[i]) + ': ';\n\t\t\tlet percent = (this.state.sliceTotals[i] * 100 / this.state.grandTotal).toFixed(1);\n\t\t\tthis.tip.setValues(x, y, {name: title, value: percent + \"%\"});\n\t\t\tthis.tip.showTip();\n\t\t} else {\n\t\t\ttransform(path,'translate3d(0,0,0)');\n\t\t\tthis.tip.hideTip();\n\t\t\tpath.style.fill = color;\n\t\t}\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', this.mouseMove);\n\t\tthis.container.addEventListener('mouseleave', this.mouseLeave);\n\t}\n\n\tmouseMove(e){\n\t\tconst target = e.target;\n\t\tlet slices = this.components.get('pieSlices').store;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevAcitve = this.curActiveSlice;\n\t\tif(slices.includes(target)) {\n\t\t\tlet i = slices.indexOf(target);\n\t\t\tthis.hoverSlice(prevAcitve, prevIndex,false);\n\t\t\tthis.curActiveSlice = target;\n\t\t\tthis.curActiveSliceIndex = i;\n\t\t\tthis.hoverSlice(target, i, true, e);\n\t\t} else {\n\t\t\tthis.mouseLeave();\n\t\t}\n\t}\n\n\tmouseLeave(){\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { makeText, heatSquare } from '../utils/draw';\nimport { DAY_NAMES_SHORT, addDays, areInSameMonth, getLastDateInMonth, setDayToSunday, getYyyyMmDd, getWeeksBetween, getMonthName, clone,\n\tNO_OF_MILLIS, NO_OF_YEAR_MONTHS, NO_OF_DAYS_IN_WEEK } from '../utils/date-utils';\nimport { calcDistribution, getMaxCheckpoint } from '../utils/intervals';\nimport { getExtraHeight, getExtraWidth, HEATMAP_DISTRIBUTION_SIZE, HEATMAP_SQUARE_SIZE,\n\tHEATMAP_GUTTER_SIZE } from '../utils/constants';\n\nconst COL_WIDTH = HEATMAP_SQUARE_SIZE + HEATMAP_GUTTER_SIZE;\nconst ROW_HEIGHT = COL_WIDTH;\n// const DAY_INCR = 1;\n\nexport default class Heatmap extends BaseChart {\n\tconstructor(parent, options) {\n\t\tsuper(parent, options);\n\t\tthis.type = 'heatmap';\n\n\t\tthis.countLabel = options.countLabel || '';\n\n\t\tlet validStarts = ['Sunday', 'Monday'];\n\t\tlet startSubDomain = validStarts.includes(options.startSubDomain)\n\t\t\t? options.startSubDomain : 'Sunday';\n\t\tthis.startSubDomainIndex = validStarts.indexOf(startSubDomain);\n\n\t\tthis.setup();\n\t}\n\n\tsetMeasures(options) {\n\t\tlet m = this.measures;\n\t\tthis.discreteDomains = options.discreteDomains === 0 ? 0 : 1;\n\n\t\tm.paddings.top = ROW_HEIGHT * 3;\n\t\tm.paddings.bottom = 0;\n\t\tm.legendHeight = ROW_HEIGHT * 2;\n\t\tm.baseHeight = ROW_HEIGHT * NO_OF_DAYS_IN_WEEK\n\t\t\t+ getExtraHeight(m);\n\n\t\tlet d = this.data;\n\t\tlet spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\n\t\tthis.independentWidth = (getWeeksBetween(d.start, d.end)\n\t\t\t+ spacing) * COL_WIDTH + getExtraWidth(m);\n\t}\n\n\tupdateWidth() {\n\t\tlet spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\n\t\tlet noOfWeeks = this.state.noOfWeeks ? this.state.noOfWeeks : 52;\n\t\tthis.baseWidth = (noOfWeeks + spacing) * COL_WIDTH\n\t\t\t+ getExtraWidth(this.measures);\n\t}\n\n\tprepareData(data=this.data) {\n\t\tif(data.start && data.end && data.start > data.end) {\n\t\t\tthrow new Error('Start date cannot be greater than end date.');\n\t\t}\n\n\t\tif(!data.start) {\n\t\t\tdata.start = new Date();\n\t\t\tdata.start.setFullYear( data.start.getFullYear() - 1 );\n\t\t}\n\t\tif(!data.end) { data.end = new Date(); }\n\t\tdata.dataPoints = data.dataPoints || {};\n\n\t\tif(parseInt(Object.keys(data.dataPoints)[0]) > 100000) {\n\t\t\tlet points = {};\n\t\t\tObject.keys(data.dataPoints).forEach(timestampSec => {\n\t\t\t\tlet date = new Date(timestampSec * NO_OF_MILLIS);\n\t\t\t\tpoints[getYyyyMmDd(date)] = data.dataPoints[timestampSec];\n\t\t\t});\n\t\t\tdata.dataPoints = points;\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\n\t\ts.start = clone(this.data.start);\n\t\ts.end = clone(this.data.end);\n\n\t\ts.firstWeekStart = clone(s.start);\n\t\ts.noOfWeeks = getWeeksBetween(s.start, s.end);\n\t\ts.distribution = calcDistribution(\n\t\t\tObject.values(this.data.dataPoints), HEATMAP_DISTRIBUTION_SIZE);\n\n\t\ts.domainConfigs = this.getDomains();\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\t\tlet lessCol = this.discreteDomains ? 0 : 1;\n\n\t\tlet componentConfigs = s.domainConfigs.map((config, i) => [\n\t\t\t'heatDomain',\n\t\t\t{\n\t\t\t\tindex: config.index,\n\t\t\t\tcolWidth: COL_WIDTH,\n\t\t\t\trowHeight: ROW_HEIGHT,\n\t\t\t\tsquareSize: HEATMAP_SQUARE_SIZE,\n\t\t\t\tradius: this.rawChartArgs.radius || 0,\n\t\t\t\txTranslate: s.domainConfigs\n\t\t\t\t\t.filter((config, j) => j < i)\n\t\t\t\t\t.map(config => config.cols.length - lessCol)\n\t\t\t\t\t.reduce((a, b) => a + b, 0)\n\t\t\t\t\t* COL_WIDTH\n\t\t\t},\n\t\t\tfunction() {\n\t\t\t\treturn s.domainConfigs[i];\n\t\t\t}.bind(this)\n\n\t\t]);\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map((args, i) => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0] + '-' + i, component];\n\t\t\t})\n\t\t);\n\n\t\tlet y = 0;\n\t\tDAY_NAMES_SHORT.forEach((dayName, i) => {\n\t\t\tif([1, 3, 5].includes(i)) {\n\t\t\t\tlet dayText = makeText('subdomain-name', -COL_WIDTH/2, y, dayName,\n\t\t\t\t\t{\n\t\t\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE,\n\t\t\t\t\t\tdy: 8,\n\t\t\t\t\t\ttextAnchor: 'end'\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tthis.drawArea.appendChild(dayText);\n\t\t\t}\n\t\t\ty += ROW_HEIGHT;\n\t\t});\n\t}\n\n\tupdate(data) {\n\t\tif(!data) {\n\t\t\tconsole.error('No data to update.');\n\t\t}\n\n\t\tthis.data = this.prepareData(data);\n\t\tthis.draw();\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tthis.components.forEach(comp => {\n\t\t\t\tlet daySquares = comp.store;\n\t\t\t\tlet daySquare = e.target;\n\t\t\t\tif(daySquares.includes(daySquare)) {\n\n\t\t\t\t\tlet count = daySquare.getAttribute('data-value');\n\t\t\t\t\tlet dateParts = daySquare.getAttribute('data-date').split('-');\n\n\t\t\t\t\tlet month = getMonthName(parseInt(dateParts[1])-1, true);\n\n\t\t\t\t\tlet gOff = this.container.getBoundingClientRect(), pOff = daySquare.getBoundingClientRect();\n\n\t\t\t\t\tlet width = parseInt(e.target.getAttribute('width'));\n\t\t\t\t\tlet x = pOff.left - gOff.left + width/2;\n\t\t\t\t\tlet y = pOff.top - gOff.top;\n\t\t\t\t\tlet value = count + ' ' + this.countLabel;\n\t\t\t\t\tlet name = ' on ' + month + ' ' + dateParts[0] + ', ' + dateParts[2];\n\n\t\t\t\t\tthis.tip.setValues(x, y, {name: name, value: value, valueFirst: 1}, []);\n\t\t\t\t\tthis.tip.showTip();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\trenderLegend() {\n\t\tthis.legendArea.textContent = '';\n\t\tlet x = 0;\n\t\tlet y = ROW_HEIGHT;\n\t\tlet radius = this.rawChartArgs.radius || 0;\n\n\t\tlet lessText = makeText('subdomain-name', x, y, 'Less',\n\t\t\t{\n\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE + 1,\n\t\t\t\tdy: 9\n\t\t\t}\n\t\t);\n\t\tx = (COL_WIDTH * 2) + COL_WIDTH/2;\n\t\tthis.legendArea.appendChild(lessText);\n\n\t\tthis.colors.slice(0, HEATMAP_DISTRIBUTION_SIZE).map((color, i) => {\n\t\t\tconst square = heatSquare('heatmap-legend-unit', x + (COL_WIDTH + 3) * i,\n\t\t\t\ty, HEATMAP_SQUARE_SIZE, radius, color);\n\t\t\tthis.legendArea.appendChild(square);\n\t\t});\n\n\t\tlet moreTextX = x + HEATMAP_DISTRIBUTION_SIZE * (COL_WIDTH + 3) + COL_WIDTH/4;\n\t\tlet moreText = makeText('subdomain-name', moreTextX, y, 'More',\n\t\t\t{\n\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE + 1,\n\t\t\t\tdy: 9\n\t\t\t}\n\t\t);\n\t\tthis.legendArea.appendChild(moreText);\n\t}\n\n\tgetDomains() {\n\t\tlet s = this.state;\n\t\tconst [startMonth, startYear] = [s.start.getMonth(), s.start.getFullYear()];\n\t\tconst [endMonth, endYear] = [s.end.getMonth(), s.end.getFullYear()];\n\n\t\tconst noOfMonths = (endMonth - startMonth + 1) + (endYear - startYear) * 12;\n\n\t\tlet domainConfigs = [];\n\n\t\tlet startOfMonth = clone(s.start);\n\t\tfor(var i = 0; i < noOfMonths; i++) {\n\t\t\tlet endDate = s.end;\n\t\t\tif(!areInSameMonth(startOfMonth, s.end)) {\n\t\t\t\tlet [month, year] = [startOfMonth.getMonth(), startOfMonth.getFullYear()];\n\t\t\t\tendDate = getLastDateInMonth(month, year);\n\t\t\t}\n\t\t\tdomainConfigs.push(this.getDomainConfig(startOfMonth, endDate));\n\n\t\t\taddDays(endDate, 1);\n\t\t\tstartOfMonth = endDate;\n\t\t}\n\n\t\treturn domainConfigs;\n\t}\n\n\tgetDomainConfig(startDate, endDate='') {\n\t\tlet [month, year] = [startDate.getMonth(), startDate.getFullYear()];\n\t\tlet startOfWeek = setDayToSunday(startDate); // TODO: Monday as well\n\t\tendDate = clone(endDate) || getLastDateInMonth(month, year);\n\n\t\tlet domainConfig = {\n\t\t\tindex: month,\n\t\t\tcols: []\n\t\t};\n\n\t\taddDays(endDate, 1);\n\t\tlet noOfMonthWeeks = getWeeksBetween(startOfWeek, endDate);\n\n\t\tlet cols = [], col;\n\t\tfor(var i = 0; i < noOfMonthWeeks; i++) {\n\t\t\tcol = this.getCol(startOfWeek, month);\n\t\t\tcols.push(col);\n\n\t\t\tstartOfWeek = new Date(col[NO_OF_DAYS_IN_WEEK - 1].yyyyMmDd);\n\t\t\taddDays(startOfWeek, 1);\n\t\t}\n\n\t\tif(col[NO_OF_DAYS_IN_WEEK - 1].dataValue !== undefined) {\n\t\t\taddDays(startOfWeek, 1);\n\t\t\tcols.push(this.getCol(startOfWeek, month, true));\n\t\t}\n\n\t\tdomainConfig.cols = cols;\n\n\t\treturn domainConfig;\n\t}\n\n\tgetCol(startDate, month, empty = false) {\n\t\tlet s = this.state;\n\n\t\t// startDate is the start of week\n\t\tlet currentDate = clone(startDate);\n\t\tlet col = [];\n\n\t\tfor(var i = 0; i < NO_OF_DAYS_IN_WEEK; i++, addDays(currentDate, 1)) {\n\t\t\tlet config = {};\n\n\t\t\t// Non-generic adjustment for entire heatmap, needs state\n\t\t\tlet currentDateWithinData = currentDate >= s.start && currentDate <= s.end;\n\n\t\t\tif(empty || currentDate.getMonth() !== month || !currentDateWithinData) {\n\t\t\t\tconfig.yyyyMmDd = getYyyyMmDd(currentDate);\n\t\t\t} else {\n\t\t\t\tconfig = this.getSubDomainConfig(currentDate);\n\t\t\t}\n\t\t\tcol.push(config);\n\t\t}\n\n\t\treturn col;\n\t}\n\n\tgetSubDomainConfig(date) {\n\t\tlet yyyyMmDd = getYyyyMmDd(date);\n\t\tlet dataValue = this.data.dataPoints[yyyyMmDd];\n\t\tlet config = {\n\t\t\tyyyyMmDd: yyyyMmDd,\n\t\t\tdataValue: dataValue || 0,\n\t\t\tfill: this.colors[getMaxCheckpoint(dataValue, this.state.distribution)]\n\t\t};\n\t\treturn config;\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { dataPrep, zeroDataPrep, getShortenedLabels } from '../utils/axis-chart-utils';\nimport { AXIS_LEGEND_BAR_SIZE } from '../utils/constants';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset, fire } from '../utils/dom';\nimport { calcChartIntervals, getIntervalSize, getValueRange, getZeroIndex, scale, getClosestInArray } from '../utils/intervals';\nimport { floatTwo } from '../utils/helpers';\nimport { makeOverlay, updateOverlay, legendBar } from '../utils/draw';\nimport { getTopOffset, getLeftOffset, MIN_BAR_PERCENT_HEIGHT, BAR_CHART_SPACE_RATIO,\n\tLINE_CHART_DOT_SIZE } from '../utils/constants';\n\nexport default class AxisChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\n\t\tthis.barOptions = args.barOptions || {};\n\t\tthis.lineOptions = args.lineOptions || {};\n\n\t\tthis.type = args.type || 'line';\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tsetMeasures() {\n\t\tif(this.data.datasets.length <= 1) {\n\t\t\tthis.config.showLegend = 0;\n\t\t\tthis.measures.paddings.bottom = 30;\n\t\t}\n\t}\n\n\tconfigure(options) {\n        super.configure(options);\n        const { axisOptions = {} } = options;\n        const { xAxis, yAxis } = axisOptions || {};\n\n        options.tooltipOptions = options.tooltipOptions || {};\n\n        this.config.xAxisMode = xAxis ? xAxis.xAxisMode : axisOptions.xAxisMode || 'span';\n\n        // this will pass an array\n        // lets determine if we need two yAxis based on if there is length\n        // to the yAxis array\n        if (yAxis && yAxis.length) {\n            this.config.yAxisConfig = yAxis.map((item) => {\n                return {\n                    yAxisMode: item.yAxisMode,\n                    id: item.id,\n                    position: item.position,\n                    title: item.title\n                };\n            });\n        } else {\n            this.config.yAxisMode = yAxis ? yAxis.yAxisMode : axisOptions.yAxisMode || 'span';\n\n\t\t\t// if we have yAxis config settings lets populate a yAxis config array.\n\t\t\tif (yAxis && yAxis.id && yAxis.position) {\n\t\t\t\tthis.config.yAxisConfig = [yAxis]\n\t\t\t}\n        }\n\n        this.config.xIsSeries = axisOptions.xIsSeries || 0;\n        this.config.shortenYAxisNumbers = axisOptions.shortenYAxisNumbers || 0;\n\n        this.config.formatTooltipX = options.tooltipOptions.formatTooltipX;\n        this.config.formatTooltipY = options.tooltipOptions.formatTooltipY;\n\n        this.config.valuesOverPoints = options.valuesOverPoints;\n\t}\n\n\tprepareData(data=this.data) {\n\t\treturn dataPrep(data, this.type);\n\t}\n\n\tprepareFirstData(data=this.data) {\n\t\treturn zeroDataPrep(data);\n\t}\n\n\tcalc(onlyWidthChange = false) {\n\t\tthis.calcXPositions();\n\t\tif(!onlyWidthChange) {\n\t\t\tthis.calcYAxisParameters(this.getAllYValues(), this.type === 'line');\n\t\t}\n\t\tthis.makeDataByIndex();\n\t}\n\n\tcalcXPositions() {\n\t\tlet s = this.state;\n\t\tlet labels = this.data.labels;\n\t\ts.datasetLength = labels.length;\n\n\t\ts.unitWidth = this.width/(s.datasetLength);\n\t\t// Default, as per bar, and mixed. Only line will be a special case\n\t\ts.xOffset = s.unitWidth/2;\n\n\t\t// // For a pure Line Chart\n\t\t// s.unitWidth = this.width/(s.datasetLength - 1);\n\t\t// s.xOffset = 0;\n\n\t\ts.xAxis = {\n\t\t\tlabels: labels,\n\t\t\tpositions: labels.map((d, i) =>\n\t\t\t\tfloatTwo(s.xOffset + i * s.unitWidth)\n\t\t\t)\n\t\t};\n\t}\n\n\n    calcYAxisParameters(dataValues, withMinimum = 'false') {\n        let yPts, scaleMultiplier, intervalHeight, zeroLine, positions, yAxisConfigObject, yAxisAlignment, yKeys;\n\t\tyKeys = [];\n\t\tyAxisConfigObject = this.config.yAxisMode || {};\t\n\t\tyAxisAlignment = yAxisConfigObject.position ? yAxisConfigObject.position : 'left';\t\n\n        // if we have an object we have multiple yAxisParameters.\n        if (dataValues instanceof Array) {\n            yPts = calcChartIntervals(dataValues, withMinimum);\n            scaleMultiplier = this.height / getValueRange(yPts);\n            intervalHeight = getIntervalSize(yPts) * scaleMultiplier;\n            zeroLine = this.height - getZeroIndex(yPts) * intervalHeight;\n\n            this.state.yAxis = {\n                labels: yPts,\n                positions: yPts.map((d) => zeroLine - d * scaleMultiplier),\n\t\t\t\ttitle: yAxisConfigObject.title || null,\n\t\t\t\tpos: yAxisAlignment,\n                scaleMultiplier: scaleMultiplier,\n                zeroLine: zeroLine\n            };\n        } else {\n            this.state.yAxis = [];\n            for (let key in dataValues) {\n                const dataValue = dataValues[key];\n\t\t\t\tyAxisConfigObject = this.config.yAxisConfig.find((item) => key === item.id) || [];\n\t\t\t\tyAxisAlignment = yAxisConfigObject.position ? yAxisConfigObject.position : 'left';\t\n                yPts = calcChartIntervals(dataValue, withMinimum);\n                scaleMultiplier = this.height / getValueRange(yPts);\n                intervalHeight = getIntervalSize(yPts) * scaleMultiplier;\n                zeroLine = this.height - getZeroIndex(yPts) * intervalHeight;\n                positions = yPts.map((d) => zeroLine - d * scaleMultiplier);\n\t\t\t\tyKeys.push(key);\n\n                if (this.state.yAxis.length > 1) {\n                    const yPtsArray = [];\n                    const firstArr = this.state.yAxis[0];\n\n\t\t\t\t\t// we need to calculate the scaleMultiplier.\n\n\t\t\t\t\t// now that we have an accurate scaleMultiplier we can \n                    // we need to loop through original positions.\n\t\t\t\t\tscaleMultiplier = this.height / getValueRange(yPts);\n                    firstArr.positions.forEach((pos) => {\n                        yPtsArray.push(Math.ceil(pos / scaleMultiplier));\n                    });\n                    yPts = yPtsArray.reverse();\n                    zeroLine = this.height - getZeroIndex(yPts) * intervalHeight;\n                    positions = firstArr.positions;\n                }\n\n                this.state.yAxis.push({\n                    axisID: key || 'left-axis',\n                    labels: yPts,\n                    title: yAxisConfigObject.title,\n                    pos: yAxisAlignment,\n                    scaleMultiplier,\n                    zeroLine,\n                    positions\n                });\n            }\n\n\t\t\t// the labels are not aligned in length between the two yAxis objects,\n\t\t\t// we need to run some new calculations.\n\t\t\tif (this.state.yAxis[1] && this.state.yAxis[0].labels.length !== this.state.yAxis[1].labels.length) {\n\t\t\t\tconst newYptsArr = [];\n\t\t\t\t// find the shorter array\n\t\t\t\tconst shortest = this.state.yAxis.reduce((p,c) => { \n\t\t\t\t\treturn p.length > c.labels.length ? c : p;\n\t\t\t\t},\n\t\t\t\t{ length: Infinity });\n\t\t\t\t// return the longest\n\t\t\t\tconst longest = this.state.yAxis.reduce((p,c) => { \n\t\t\t\t\treturn p.length < c.labels.length ? p : c;\n\t\t\t\t},\n\t\t\t\t{ length: Infinity });\n\n\t\t\t\t// we now need to populate the shortest obj with the new scale multiplier\n\t\t\t\t// with the positions of the longest obj.\n\t\t\t\tlongest.positions.forEach((pos) => {\n\t\t\t\t\t// calculate a new yPts\n\t\t\t\t\tnewYptsArr.push(Math.ceil(pos / shortest.scaleMultiplier));\n\t\t\t\t});\n\n\t\t\t\tshortest.labels = newYptsArr.reverse();\n\t\t\t\tshortest.positions = longest.positions;\n\t\t\t}\n        }\n\n        // Dependent if above changes\n        this.calcDatasetPoints();\n        this.calcYExtremes();\n        this.calcYRegions();\n    }\n\n    calcDatasetPoints() {\n        let s = this.state;\n        let scaleAll = (values, id) => {\n            return values.map((val) => {\n                let { yAxis } = s;\n\n                if (yAxis instanceof Array) {\n\t\t\t\t\tyAxis = yAxis.length > 1 ? yAxis.find((axis) => id === axis.axisID) : s.yAxis[0];\n                }\n\n                return scale(val, yAxis);\n            });\n        };\n\n        s.barChartIndex = 1;\n        s.datasets = this.data.datasets.map((d, i) => {\n            let values = d.values;\n            let cumulativeYs = d.cumulativeYs || [];\n\n            return {\n                name:\n                    d.name &&\n                    d.name.replace(/<|>|&/g, (char) =>\n                        char == '&' ? '&amp;' : char == '<' ? '&lt;' : '&gt;'\n                    ),\n                index: i,\n                barIndex: d.chartType === 'bar' ? s.barChartIndex++ : s.barChartIndex,\n                chartType: d.chartType,\n\n                values: values,\n                yPositions: scaleAll(values, d.axisID),\n                id: d.axisID,\n\n                cumulativeYs: cumulativeYs,\n                cumulativeYPos: scaleAll(cumulativeYs, d.axisID)\n            };\n        });\n    }\n\n\tcalcYExtremes() {\n\t\tlet s = this.state;\n\t\tif(this.barOptions.stacked) {\n\t\t\ts.yExtremes = s.datasets[s.datasets.length - 1].cumulativeYPos;\n\t\t\treturn;\n\t\t}\n\t\ts.yExtremes = new Array(s.datasetLength).fill(9999);\n\t\ts.datasets.map(d => {\n\t\t\td.yPositions.map((pos, j) => {\n\t\t\t\tif(pos < s.yExtremes[j]) {\n\t\t\t\t\ts.yExtremes[j] = pos;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tcalcYRegions() {\n\t\tlet s = this.state;\n\t\tif(this.data.yMarkers) {\n\t\t\tthis.state.yMarkers = this.data.yMarkers.map(d => {\n\t\t\t\td.position = scale(d.value, s.yAxis);\n\t\t\t\tif(!d.options) d.options = {};\n\t\t\t\t// if(!d.label.includes(':')) {\n\t\t\t\t// \td.label += ': ' + d.value;\n\t\t\t\t// }\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t\tif(this.data.yRegions) {\n\t\t\tthis.state.yRegions = this.data.yRegions.map(d => {\n\t\t\t\td.startPos = scale(d.start, s.yAxis);\n\t\t\t\td.endPos = scale(d.end, s.yAxis);\n\t\t\t\tif(!d.options) d.options = {};\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t}\n\n    getAllYValues() {\n        let key = 'values';\n        let multiAxis = this.config.yAxisConfig ? true : false;\n        let allValueLists = multiAxis ? {} : [];\n\n        let groupBy = (arr, property) => {\n            return arr.reduce((acc, cur) => {\n                acc[cur[property]] = [...(acc[cur[property]] || []), cur];\n                return acc;\n            }, {});\n        };\n\n        let generateCumulative = (arr) => {\n            let cumulative = new Array(this.state.datasetLength).fill(0);\n            arr.forEach((d, i) => {\n                let values = arr[i].values;\n                d[key] = cumulative = cumulative.map((c, i) => {\n                    return c + values[i];\n                });\n            });\n        };\n\n        if (this.barOptions.stacked) {\n            key = 'cumulativeYs';\n            // we need to filter out the different yAxis ID's here.\n            if (multiAxis) {\n                const groupedDataSets = groupBy(this.data.datasets, 'axisID');\n                // const dataSetsByAxis = this.data.dd\n                for (var axisID in groupedDataSets) {\n                    generateCumulative(groupedDataSets[axisID]);\n                }\n            } else {\n                generateCumulative(this.data.datasets);\n            }\n        }\n\n        // this is the trouble maker, we don't want to merge all\n        // datasets since we are trying to run two yAxis.\n        if (multiAxis) {\n            this.data.datasets.forEach((d) => {\n                // if the array exists already just push more data into it.\n                // otherwise create a new array into the object.\n                allValueLists[d.axisID || key]\n                    ? allValueLists[d.axisID || key].push(...d[key])\n                    : (allValueLists[d.axisID || key] = [...d[key]]);\n            });\n        } else {\n            allValueLists = this.data.datasets.map((d) => {\n                return d[key];\n            });\n        }\n\n        if (this.data.yMarkers && !multiAxis) {\n            allValueLists.push(this.data.yMarkers.map((d) => d.value));\n        }\n\n        if (this.data.yRegions && !multiAxis) {\n            this.data.yRegions.map((d) => {\n                allValueLists.push([d.end, d.start]);\n            });\n        }\n\n        return multiAxis ? allValueLists : [].concat(...allValueLists);\n    }\n\n\tsetupComponents() {\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'xAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.config.xAxisMode,\n\t\t\t\t\theight: this.height,\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\ts.xAxis.calcLabels = getShortenedLabels(this.width,\n\t\t\t\t\t\ts.xAxis.labels, this.config.xIsSeries);\n\n\t\t\t\t\treturn s.xAxis;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'yRegions',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yRegions;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\t\t];\n\n        // if we have multiple yAxisConfigs we need to update the yAxisDefault\n        // components to multiple yAxis components.\n        if (this.config.yAxisConfig && this.config.yAxisConfig.length) {\n            this.config.yAxisConfig.forEach((yAxis) => {\n                componentConfigs.push([\n                    'yAxis',\n                    {\n                        mode: yAxis.yAxisMode || 'span',\n                        width: this.width,\n\t\t\t\t\t\theight: this.baseHeight,\n                        shortenNumbers: this.config.shortenYAxisNumbers,\n                        pos: yAxis.position || 'left'\n                    },\n                    function () {\n                        return this.state.yAxis;\n                    }.bind(this)\n                ]);\n            });\n        } else {\n            componentConfigs.push([\n                'yAxis',\n                {\n                    mode: this.config.yAxisMode,\n                    width: this.width,\n\t\t\t\t\theight: this.baseHeight,\n                    shortenNumbers: this.config.shortenYAxisNumbers\n                },\n                function () {\n                    return this.state.yAxis;\n                }.bind(this)\n            ]);\n        }\n\n\t\tlet barDatasets = this.state.datasets.filter(d => d.chartType === 'bar');\n\t\tlet lineDatasets = this.state.datasets.filter(d => d.chartType === 'line');\n\n\t\tlet barsConfigs = barDatasets.map(d => {\n            let index = d.index;\n            let barIndex = d.barIndex || index;\n\t\t\treturn [\n\t\t\t\t'barGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tstacked: this.barOptions.stacked,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\n\t\t\t\t\tminHeight: this.height * MIN_BAR_PERCENT_HEIGHT,\n\t\t\t\t},\n\t\t\t\tfunction() {\n                    let s = this.state;\n                    let { yAxis } = s;\n                    let d = s.datasets[index];\n                    let { id = 'left-axis' } = d;\n                    let stacked = this.barOptions.stacked;\n\n                    let spaceRatio = this.barOptions.spaceRatio || BAR_CHART_SPACE_RATIO;\n                    let barsWidth = s.unitWidth * (1 - spaceRatio);\n                    let barWidth = barsWidth / (stacked ? 1 : barDatasets.length);\n\n                    // if there are multiple yAxis we need to return the yAxis with the\n                    // proper ID.\n\t\t\t\t\tif (yAxis instanceof Array) {\n\t\t\t\t\t\t// if the person only configured one yAxis in the array return the first.\n\t\t\t\t\t\tyAxis = yAxis.length > 1 ? yAxis.find((axis) => id === axis.axisID) : s.yAxis[0];\n\t\t\t\t\t}\n\n\n                    let xPositions = s.xAxis.positions.map((x) => x - barsWidth / 2);\n\n                    if (!stacked) {\n                        xPositions = xPositions.map((p) => {\n                            return p + barWidth * barIndex - barWidth;\n                        });\n                    }\n\n                    let labels = new Array(s.datasetLength).fill('');\n                    if (this.config.valuesOverPoints) {\n                        if (stacked && d.index === s.datasets.length - 1) {\n                            labels = d.cumulativeYs;\n                        } else {\n                            labels = d.values;\n                        }\n                    }\n                    let offsets = new Array(s.datasetLength).fill(0);\n                    if (stacked) {\n                        offsets = d.yPositions.map((y, j) => y - d.cumulativeYPos[j]);\n                    }\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: xPositions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\t\t\t\t\t\toffsets: offsets,\n\t\t\t\t\t\t// values: d.values,\n\t\t\t\t\t\tlabels: labels,\n\n\t\t\t\t\t\tzeroLine: yAxis.zeroLine,\n\t\t\t\t\t\tbarsWidth: barsWidth,\n\t\t\t\t\t\tbarWidth: barWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n        let lineConfigs = lineDatasets.map((d) => {\n            let index = d.index;\n            return [\n                'lineGraph' + '-' + d.index,\n                {\n                    index: index,\n                    color: this.colors[index],\n                    svgDefs: this.svgDefs,\n                    heatline: this.lineOptions.heatline,\n                    regionFill: this.lineOptions.regionFill,\n                    spline: this.lineOptions.spline,\n                    hideDots: this.lineOptions.hideDots,\n                    hideLine: this.lineOptions.hideLine,\n\n                    // same for all datasets\n                    valuesOverPoints: this.config.valuesOverPoints\n                },\n                function () {\n                    let s = this.state;\n                    let d = s.datasets[index];\n\n                    // if we have more than one yindex lets map the values\n                    const yAxis = s.yAxis.length\n                        ? s.yAxis.find((axis) => d.id === axis.axisID) || s.yAxis[0]\n                        : s.yAxis;\n\n                    let minLine =\n                        yAxis.positions[0] < yAxis.zeroLine\n                            ? yAxis.positions[0]\n                            : yAxis.zeroLine;\n\n                    return {\n                        xPositions: s.xAxis.positions,\n                        yPositions: d.yPositions,\n\n                        values: d.values,\n\n                        zeroLine: minLine,\n                        radius: this.lineOptions.dotSize || LINE_CHART_DOT_SIZE\n                    };\n                }.bind(this)\n            ];\n        });\n\n\t\tlet markerConfigs = [\n\t\t\t[\n\t\t\t\t'yMarkers',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yMarkers;\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tcomponentConfigs = componentConfigs.concat(barsConfigs, lineConfigs, markerConfigs);\n\n\t\tlet optionals = ['yMarkers', 'yRegions'];\n\t\tthis.dataUnitComponents = [];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.filter(args => !optionals.includes(args[0]) || this.state[args[0]])\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\tif(args[0].includes('lineGraph') || args[0].includes('barGraph')) {\n\t\t\t\t\tthis.dataUnitComponents.push(component);\n\t\t\t\t}\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tmakeDataByIndex() {\n\t\tthis.dataByIndex = {};\n\n\t\tlet s = this.state;\n\t\tlet formatX = this.config.formatTooltipX;\n\t\tlet formatY = this.config.formatTooltipY;\n\t\tlet titles = s.xAxis.labels;\n\n\t\ttitles.map((label, index) => {\n\t\t\tlet values = this.state.datasets.map((set, i) => {\n\t\t\t\tlet value = set.values[index];\n\t\t\t\treturn {\n\t\t\t\t\ttitle: set.name,\n\t\t\t\t\tvalue: value,\n\t\t\t\t\tyPos: set.yPositions[index],\n\t\t\t\t\tcolor: this.colors[i],\n\t\t\t\t\tformatted: formatY ? formatY(value) : value,\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tthis.dataByIndex[index] = {\n\t\t\t\tlabel: label,\n\t\t\t\tformattedLabel: formatX ? formatX(label) : label,\n\t\t\t\txPos: s.xAxis.positions[index],\n\t\t\t\tvalues: values,\n\t\t\t\tyExtreme: s.yExtremes[index],\n\t\t\t};\n\t\t});\n\t}\n\n\tbindTooltip() {\n\t\t// NOTE: could be in tooltip itself, as it is a given functionality for its parent\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tlet m = this.measures;\n\t\t\tlet o = getOffset(this.container);\n\t\t\tlet relX = e.pageX - o.left - getLeftOffset(m);\n\t\t\tlet relY = e.pageY - o.top;\n\n\t\t\tif(relY < this.height + getTopOffset(m)\n\t\t\t\t&& relY >  getTopOffset(m)) {\n\t\t\t\tthis.mapTooltipXPosition(relX);\n\t\t\t} else {\n\t\t\t\tthis.tip.hideTip();\n\t\t\t}\n\t\t});\n\t}\n\n\tmapTooltipXPosition(relX) {\n\t\tlet s = this.state;\n\t\tif(!s.yExtremes) return;\n\n\t\tlet index = getClosestInArray(relX, s.xAxis.positions, true);\n\t\tif (index >= 0) {\n\t\t\tlet dbi = this.dataByIndex[index];\n\n\t\t\tthis.tip.setValues(\n\t\t\t\tdbi.xPos + this.tip.offset.x,\n\t\t\t\tdbi.yExtreme + this.tip.offset.y,\n\t\t\t\t{name: dbi.formattedLabel, value: ''},\n\t\t\t\tdbi.values,\n\t\t\t\tindex\n\t\t\t);\n\n\t\t\tthis.tip.showTip();\n\t\t}\n\t}\n\n\trenderLegend() {\n\t\tlet s = this.data;\n\t\tif(s.datasets.length > 1) {\n\t\t\tthis.legendArea.textContent = '';\n\t\t\ts.datasets.map((d, i) => {\n\t\t\t\tlet barWidth = AXIS_LEGEND_BAR_SIZE;\n\t\t\t\t// let rightEndPoint = this.baseWidth - this.measures.margins.left - this.measures.margins.right;\n\t\t\t\t// let multiplier = s.datasets.length - i;\n\t\t\t\tlet rect = legendBar(\n\t\t\t\t\t// rightEndPoint - multiplier * barWidth,\t// To right align\n\t\t\t\t\tbarWidth * i,\n\t\t\t\t\t'0',\n\t\t\t\t\tbarWidth,\n\t\t\t\t\tthis.colors[i],\n\t\t\t\t\td.name,\n\t\t\t\t\tthis.config.truncateLegends);\n\t\t\t\tthis.legendArea.appendChild(rect);\n\t\t\t});\n\t\t}\n\t}\n\n\n\n\t// Overlay\n\tmakeOverlay() {\n\t\tif(this.init) {\n\t\t\tthis.init = 0;\n\t\t\treturn;\n\t\t}\n\t\tif(this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\n\t\tthis.overlayGuides = this.dataUnitComponents.map(c => {\n\t\t\treturn {\n\t\t\t\ttype: c.unitType,\n\t\t\t\toverlay: undefined,\n\t\t\t\tunits: c.units,\n\t\t\t};\n\t\t});\n\n\t\tif(this.state.currentIndex === undefined) {\n\t\t\tthis.state.currentIndex = this.state.datasetLength - 1;\n\t\t}\n\n\t\t// Render overlays\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\n\t\t\td.overlay = makeOverlay[d.type](currentUnit);\n\t\t\tthis.drawArea.appendChild(d.overlay);\n\t\t});\n\t}\n\n\tupdateOverlayGuides() {\n\t\tif(this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\t}\n\n\tbindOverlay() {\n\t\tthis.parent.addEventListener('data-select', () => {\n\t\t\tthis.updateOverlay();\n\t\t});\n\t}\n\n\tbindUnits() {\n\t\tthis.dataUnitComponents.map(c => {\n\t\t\tc.units.map(unit => {\n\t\t\t\tunit.addEventListener('click', () => {\n\t\t\t\t\tlet index = unit.getAttribute('data-point-index');\n\t\t\t\t\tthis.setCurrentDataPoint(index);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\t// Note: Doesn't work as tooltip is absolutely positioned\n\t\tthis.tip.container.addEventListener('click', () => {\n\t\t\tlet index = this.tip.container.getAttribute('data-point-index');\n\t\t\tthis.setCurrentDataPoint(index);\n\t\t});\n\t}\n\n\tupdateOverlay() {\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\t\t\tupdateOverlay[d.type](currentUnit, d.overlay);\n\t\t});\n\t}\n\n\tonLeftArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex - 1);\n\t}\n\n\tonRightArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex + 1);\n\t}\n\n\tgetDataPoint(index=this.state.currentIndex) {\n\t\tlet s = this.state;\n\t\tlet data_point = {\n\t\t\tindex: index,\n\t\t\tlabel: s.xAxis.labels[index],\n\t\t\tvalues: s.datasets.map(d => d.values[index])\n\t\t};\n\t\treturn data_point;\n\t}\n\n\tsetCurrentDataPoint(index) {\n\t\tlet s = this.state;\n\t\tindex = parseInt(index);\n\t\tif(index < 0) index = 0;\n\t\tif(index >= s.xAxis.labels.length) index = s.xAxis.labels.length - 1;\n\t\tif(index === s.currentIndex) return;\n\t\ts.currentIndex = index;\n\t\tfire(this.parent, \"data-select\", this.getDataPoint());\n\t}\n\n\n\n\t// API\n\taddDataPoint(label, datasetValues, index=this.state.datasetLength) {\n\t\tsuper.addDataPoint(label, datasetValues, index);\n\t\tthis.data.labels.splice(index, 0, label);\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\td.values.splice(index, 0, datasetValues[i]);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tremoveDataPoint(index = this.state.datasetLength-1) {\n\t\tif (this.data.labels.length <= 1) {\n\t\t\treturn;\n\t\t}\n\t\tsuper.removeDataPoint(index);\n\t\tthis.data.labels.splice(index, 1);\n\t\tthis.data.datasets.map(d => {\n\t\t\td.values.splice(index, 1);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tupdateDataset(datasetValues, index=0) {\n\t\tthis.data.datasets[index].values = datasetValues;\n\t\tthis.update(this.data);\n\t}\n\t// addDataset(dataset, index) {}\n\t// removeDataset(index = 0) {}\n\n\tupdateDatasets(datasets) {\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\tif(datasets[i]) {\n\t\t\t\td.values = datasets[i];\n\t\t\t}\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\t// updateDataPoint(dataPoint, index = 0) {}\n\t// addDataPoint(dataPoint, index = 0) {}\n\t// removeDataPoint(index = 0) {}\n}\n","import AggregationChart from './AggregationChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset } from '../utils/dom';\nimport { getPositionByAngle } from '../utils/helpers';\nimport { makeArcStrokePathStr, makeStrokeCircleStr } from '../utils/draw';\nimport { lightenDarkenColor } from '../utils/colors';\nimport { transform } from '../utils/animation';\nimport { FULL_ANGLE } from '../utils/constants';\n\nexport default class DonutChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'donut';\n\t\tthis.initTimeout = 0;\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.config.startAngle = args.startAngle || 0;\n\n\t\tthis.clockWise = args.clockWise || false;\n\t\tthis.strokeWidth = args.strokeWidth || 30;\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\t\tthis.radius =\n\t\t\tthis.height > this.width\n\t\t\t\t? this.center.x - this.strokeWidth / 2\n\t\t\t\t: this.center.y - this.strokeWidth / 2;\n\n\t\tconst { radius, clockWise } = this;\n\n\t\tconst prevSlicesProperties = s.slicesProperties || [];\n\t\ts.sliceStrings = [];\n\t\ts.slicesProperties = [];\n\t\tlet curAngle = 180 - this.config.startAngle;\n\n\t\ts.sliceTotals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / s.grandTotal) * FULL_ANGLE;\n\t\t\tconst largeArc = originDiffAngle > 180 ? 1: 0;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = getPositionByAngle(startAngle, radius);\n\t\t\tconst endPosition = getPositionByAngle(endAngle, radius);\n\n\t\t\tconst prevProperty = this.init && prevSlicesProperties[i];\n\n\t\t\tlet curStart,curEnd;\n\t\t\tif(this.init) {\n\t\t\t\tcurStart = prevProperty ? prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty ? prevProperty.endPosition : startPosition;\n\t\t\t} else {\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath =\n\t\t\t\toriginDiffAngle === 360\n\t\t\t\t\t? makeStrokeCircleStr(curStart, curEnd, this.center, this.radius, this.clockWise, largeArc)\n\t\t\t\t\t: makeArcStrokePathStr(curStart, curEnd, this.center, this.radius, this.clockWise, largeArc);\n\n\t\t\ts.sliceStrings.push(curPath);\n\t\t\ts.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: s.grandTotal,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle: diffAngle\n\t\t\t});\n\n\t\t});\n\t\tthis.init = 0;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'donutSlices',\n\t\t\t\t{ },\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsliceStrings: s.sliceStrings,\n\t\t\t\t\t\tcolors: this.colors,\n\t\t\t\t\t\tstrokeWidth: this.strokeWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalTranslateByAngle(property){\n\t\tconst{ radius, hoverRadio } = this;\n\t\tconst position = getPositionByAngle(property.startAngle+(property.angle / 2),radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\n\thoverSlice(path,i,flag,e){\n\t\tif(!path) return;\n\t\tconst color = this.colors[i];\n\t\tif(flag) {\n\t\t\ttransform(path, this.calTranslateByAngle(this.state.slicesProperties[i]));\n\t\t\tpath.style.stroke = lightenDarkenColor(color, 50);\n\t\t\tlet g_off = getOffset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t\t? this.formatted_labels[i] : this.state.labels[i]) + ': ';\n\t\t\tlet percent = (this.state.sliceTotals[i] * 100 / this.state.grandTotal).toFixed(1);\n\t\t\tthis.tip.setValues(x, y, {name: title, value: percent + \"%\"});\n\t\t\tthis.tip.showTip();\n\t\t} else {\n\t\t\ttransform(path,'translate3d(0,0,0)');\n\t\t\tthis.tip.hideTip();\n\t\t\tpath.style.stroke = color;\n\t\t}\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', this.mouseMove);\n\t\tthis.container.addEventListener('mouseleave', this.mouseLeave);\n\t}\n\n\tmouseMove(e){\n\t\tconst target = e.target;\n\t\tlet slices = this.components.get('donutSlices').store;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevAcitve = this.curActiveSlice;\n\t\tif(slices.includes(target)) {\n\t\t\tlet i = slices.indexOf(target);\n\t\t\tthis.hoverSlice(prevAcitve, prevIndex,false);\n\t\t\tthis.curActiveSlice = target;\n\t\t\tthis.curActiveSliceIndex = i;\n\t\t\tthis.hoverSlice(target, i, true, e);\n\t\t} else {\n\t\t\tthis.mouseLeave();\n\t\t}\n\t}\n\n\tmouseLeave(){\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\n\t}\n}\n","import * as Charts from './chart';\n\nlet frappe     = { };\n\nfrappe.NAME    = 'Frappe Charts';\nfrappe.VERSION = '1.6.2';\n\nfrappe         = Object.assign({ }, frappe, Charts);\n\nexport default frappe;"],"names":["expr","con","document","querySelector","getOffset","element","rect","getBoundingClientRect","top","documentElement","scrollTop","body","left","scrollLeft","isHidden","el","offsetParent","isElementInViewport","bottom","window","innerHeight","clientHeight","right","innerWidth","clientWidth","getElementContentWidth","styles","getComputedStyle","padding","parseFloat","paddingLeft","paddingRight","fire","target","type","properties","evt","createEvent","initEvent","j","dispatchEvent","getTopOffset","m","titleHeight","margins","paddings","getLeftOffset","getExtraHeight","legendHeight","getExtraWidth","floatTwo","d","toFixed","fillArray","array","count","start","length","fillerArray","Array","Math","abs","fill","concat","getStringWidth","string","charWidth","getPositionByAngle","angle","radius","sin","ANGLE_RATIO","cos","isValidNumber","candidate","nonNegative","Number","isNaN","undefined","isFinite","round","deepClone","cloned","value","key","Date","getTime","isArray","getBarHeightAndYAttr","yTop","zeroLine","height","y","equilizeNoOfElements","array1","array2","extraCount","truncateString","txt","len","slice","shortenLargeNumber","label","number","p","floor","log10","l","shortened","pow","getSplineCurvePointsStr","xList","yList","points","i","push","line","pointA","pointB","lengthX","lengthY","sqrt","atan2","controlPoint","current","previous","next","reverse","o","PI","command","reduce","acc","point","a","cps","cpe","limitColor","r","lightenDarkenColor","color","amt","col","getColor","usePound","num","parseInt","b","g","toString","isValidColor","RGB_RE","test","$","createSVG","tag","createElementNS","val","appendChild","ref","parentNode","insertBefore","keys","map","style","prop","setAttribute","renderVerticalGradient","svgDefElem","gradientId","setGradientStop","gradElem","offset","opacity","makeSVGContainer","parent","className","width","makeSVGDefs","svgContainer","makeSVGGroup","transform","args","inside","makePath","pathStr","makeArcPathStr","startPosition","endPosition","center","clockWise","largeArc","arcStartX","x","arcStartY","arcEndX","arcEndY","makeCircleStr","midArc","makeArcStrokePathStr","makeStrokeCircleStr","makeGradient","lighter","gradientDef","opacities","percentageBar","depth","PERCENTAGE_BAR_DEFAULT_DEPTH","heatSquare","size","data","legendBar","LABEL_MAX_CHARS","text","FONT_SIZE","FONT_FILL","group","legendDot","makeText","content","options","fontSize","dy","textAnchor","makeVertLine","y1","y2","stroke","BASE_LINE_COLOR","LABEL_MARGIN","makeHoriLine","x1","x2","lineType","alignment","shortenNumbers","textXPos","title","LABEL_WIDTH","generateAxisLabel","position","TOTAL_PADDING","rotation","labelSvg","wrapper","yLine","pos","mode","AXIS_TICK_LENGTH","xLine","yMarker","labelPos","yRegion","region","datasetBar","index","meta","minHeight","datasetDot","dot","getPaths","pointsStr","join","spline","path","heatline","gradient_id","svgDefs","paths","regionFill","gradient_id_region","translate","unit","oldCoord","newCoord","duration","old","STD_EASING","translateVertLine","newX","oldX","MARKER_LINE_ANIM_DUR","translateHoriLine","newY","oldY","animateRegion","rectGroup","newY1","newY2","oldY2","newHeight","childNodes","stroke-dasharray","getAttribute","animateBar","bar","nodeName","UNIT_ANIM_DUR","split","animateDot","cx","cy","animatePath","newXList","newYList","pathComponents","animPath","PATH_ANIM_DUR","regStartPt","regEndPt","animRegion","animatePathStr","oldPath","animateSVGElement","props","dur","easingType","oldValues","animElement","cloneNode","newElement","attributeName","animateElement","currentValue","animAttr","EASING","webkitTransform","msTransform","mozTransform","oTransform","animateSVG","elements","newElements","animElements","replaceChild","animSvg","runSMILAnimation","svgElement","elementsToAnimate","animSvgElement","removeChild","REPLACE_ALL_NEW_DUR","downloadFile","filename","createElement","blob","Blob","url","URL","createObjectURL","href","download","click","revokeObjectURL","prepareForExport","svg","clone","classList","add","styleEl","create","CSSTEXT","firstChild","container","innerHTML","treatAsUtc","date","result","setMinutes","getMinutes","getTimezoneOffset","getYyyyMmDd","dd","getDate","mm","getMonth","getFullYear","getWeeksBetween","startDate","endDate","weekStartDate","setDayToSunday","ceil","getDaysBetween","NO_OF_DAYS_IN_WEEK","millisecondsPerDay","SEC_IN_DAY","NO_OF_MILLIS","areInSameMonth","getMonthName","short","monthName","MONTH_NAMES","getLastDateInMonth","month","year","newDate","day","getDay","addDays","numberOfDays","setDate","getComponent","name","constants","getData","Object","componentConfigs","filter","includes","k","config","assign","ChartComponent","normalize","mantissa","exponent","sig","exp","getChartRangeIntervals","max","min","upperBound","lowerBound","range","noOfParts","partSize","intervals","getChartIntervals","maxValue","minValue","normalMaxValue","normalMinValue","calcChartIntervals","values","getPositiveFirstIntervals","absMinValue","intervalSize","unshift","withMinimum","pseudoMaxValue","pseudoMinValue","getZeroIndex","yPts","interval","getIntervalSize","indexOf","orderedArray","getValueRange","scale","yAxis","scaleMultiplier","getClosestInArray","goal","arr","closest","prev","curr","calcDistribution","distributionSize","dataMaxValue","distributionStep","distribution","checkpoint","getMaxCheckpoint","dataPrep","labels","datasetLength","datasets","zeroArray","vals","chartType","AXIS_DATASET_CHART_TYPES","yRegions","end","zeroDataPrep","realData","zeroData","axisID","yMarkers","getShortenedLabels","chartWidth","isSeries","allowedSpace","allowedLetters","DEFAULT_CHAR_WIDTH","seriesMultiple","maxLabelLength","getChartByType","AxisChart","chartTypes","error","css","insertAt","head","getElementsByTagName","styleSheet","cssText","createTextNode","BASE_MEASURES","INIT_CHART_UPDATE_TIMEOUT","DEFAULT_CHART_COLORS","DEFAULT_COLORS","SvgTip","colors","titleName","titleValue","listValues","titleValueFirst","setup","makeTooltip","calcPosition","this","hideTip","dataPointList","addEventListener","set","_this2","formatted","li","offsetWidth","offsetHeight","maxLeft","pointer","pointerOffset","valueFirst","refresh","PRESET_COLOR_MAP","exec","c","ch","makeOverlay","transformValue","overlay","updateOverlay","attributes","attr","specified","nodeValue","BaseChart","HTMLElement","Error","rawChartArgs","prepareData","prepareFirstData","validateColors","isNavigable","animate","truncateLegends","measures","JSON","parse","stringify","setMeasures","showLegend","argHeight","baseHeight","state","initTimeout","overlays","configure","validColors","forEach","warn","boundDrawFn","_this","draw","ResizeObserver","resizeObserver","observe","disconnect","removeEventListener","makeContainer","updateWidth","independentWidth","tip","bindTooltip","onlyWidthChange","init","calc","makeChartArea","setupComponents","components","drawArea","render","update","renderLegend","setupNavigation","baseWidth","titleEL","titleFontSize","legendArea","updateTipOffset","Map","make","updateNav","bindUnits","bindOverlay","keyActions","onEnterKey","bind","onLeftArrow","onUpArrow","onRightArrow","onDownArrow","e","_this4","event","keyCode","chartSvg","AggregationChart","formatTooltipY","tooltipOptions","maxSlices","maxLegendPoints","s","sliceTotals","allTotals","total","totals","sort","sumOfRemaining","grandTotal","textContent","legendTotals","barWidth","divisor","_this3","DAY_NAMES_SHORT","layerClass","layerTransform","makeElements","animateElements","store","layer","oldData","sliceStrings","strokeWidth","transition","newData","xPositions","widths","barHeight","barDepth","item","positions","animateMultipleElements","newPos","newLabels","oldPos","oldLabels","calcLabels","_this5","_this6","newOptions","startPos","endPos","_this7","newStarts","oldStarts","colWidth","rowHeight","squareSize","xTranslate","serializedSubDomains","cols","week","weekNo","toUpperCase","yyyyMmDd","dataValue","square","unitType","units","yPositions","offsets","barsWidth","newXPos","newYPos","newOffsets","oldXPos","oldYPos","oldOffsets","hideLine","hideDots","valuesOverPoints","newValues","PercentageChart","barOptions","component","xPos","bars","get","gOff","pOff","formattedLabels","fraction","setValues","showTip","PieChart","mouseMove","mouseLeave","hoverRadio","startAngle","prevSlicesProperties","slicesProperties","curAngle","originDiffAngle","diffAngle","endAngle","prevProperty","curStart","curEnd","curPath","property","flag","calTranslateByAngle","g_off","pageX","pageY","formatted_labels","percent","slices","prevIndex","curActiveSliceIndex","prevAcitve","curActiveSlice","hoverSlice","Heatmap","countLabel","validStarts","startSubDomain","startSubDomainIndex","discreteDomains","ROW_HEIGHT","HEATMAP_SQUARE_SIZE","spacing","noOfWeeks","setFullYear","dataPoints","timestampSec","firstWeekStart","domainConfigs","getDomains","lessCol","dayName","dayText","daySquares","comp","daySquare","dateParts","lessText","COL_WIDTH","moreText","HEATMAP_DISTRIBUTION_SIZE","startMonth","startYear","noOfMonths","startOfMonth","getDomainConfig","startOfWeek","domainConfig","noOfMonthWeeks","getCol","empty","currentDate","currentDateWithinData","getSubDomainConfig","lineOptions","axisOptions","xAxis","xAxisMode","yAxisConfig","yAxisMode","id","xIsSeries","shortenYAxisNumbers","formatTooltipX","calcXPositions","calcYAxisParameters","getAllYValues","makeDataByIndex","unitWidth","xOffset","dataValues","intervalHeight","yAxisConfigObject","yAxisAlignment","yKeys","find","yPtsArray","firstArr","newYptsArr","shortest","Infinity","longest","calcDatasetPoints","calcYExtremes","calcYRegions","scaleAll","axis","barChartIndex","cumulativeYs","replace","char","stacked","yExtremes","cumulativeYPos","multiAxis","allValueLists","generateCumulative","cumulative","groupedDataSets","cur","barDatasets","lineDatasets","barsConfigs","barIndex","spaceRatio","lineConfigs","minLine","dotSize","markerConfigs","optionals","dataUnitComponents","dataByIndex","formatX","formatY","relX","relY","mapTooltipXPosition","dbi","yExtreme","formattedLabel","overlayGuides","currentIndex","currentUnit","_this8","setCurrentDataPoint","_this10","_this11","getDataPoint","datasetValues","splice","DonutChart","Chart","frappe","NAME","VERSION","Charts"],"mappings":"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"}