{"version":3,"file":"frappe-charts.min.js","sources":["../../../src/js/utils/dom.js","../../../src/js/utils/constants.js","../../../src/js/utils/helpers.js","../../../src/js/utils/draw-utils.js","../../../src/js/utils/colors.js","../../../src/js/utils/draw.js","../../../src/js/utils/animate.js","../../../src/js/utils/animation.js","../../../src/js/utils/export.js","../../../src/js/utils/date-utils.js","../../../src/js/objects/ChartComponents.js","../../../src/js/utils/intervals.js","../../../src/js/utils/axis-chart-utils.js","../../../src/js/chart.js","../../../node_modules/style-inject/dist/style-inject.es.js","../../../src/js/objects/SvgTip.js","../../../src/css/chartsCss.js","../../../src/js/charts/BaseChart.js","../../../src/js/charts/AggregationChart.js","../../../src/js/charts/PercentageChart.js","../../../src/js/charts/PieChart.js","../../../src/js/charts/Heatmap.js","../../../src/js/charts/AxisChart.js","../../../src/js/charts/DonutChart.js","../../../src/js/index.js"],"sourcesContent":["export function $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function findNodeIndex(node)\n{\n\tvar i = 0;\n\twhile (node.previousSibling) {\n\t\tnode = node.previousSibling;\n\t\ti++;\n\t}\n\treturn i;\n}\n\n$.create = (tag, o) => {\n\tvar element = document.createElement(tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (i in element ) {\n\t\t\telement[i] = val;\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(i, val);\n\t\t}\n\t}\n\n\treturn element;\n};\n\nexport function getOffset(element) {\n\tlet rect = element.getBoundingClientRect();\n\treturn {\n\t\t// https://stackoverflow.com/a/7436602/6495043\n\t\t// rect.top varies with scroll, so we add whatever has been\n\t\t// scrolled to it to get absolute distance from actual page top\n\t\ttop: rect.top + (document.documentElement.scrollTop || document.body.scrollTop),\n\t\tleft: rect.left + (document.documentElement.scrollLeft || document.body.scrollLeft)\n\t};\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n// an element's offsetParent property will return null whenever it, or any of its parents,\n// is hidden via the display style property.\nexport function isHidden(el) {\n\treturn (el.offsetParent === null);\n}\n\nexport function isElementInViewport(el) {\n\t// Although straightforward: https://stackoverflow.com/a/7557433/6495043\n\tvar rect = el.getBoundingClientRect();\n\n\treturn (\n\t\trect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\n\t);\n}\n\nexport function getElementContentWidth(element) {\n\tvar styles = window.getComputedStyle(element);\n\tvar padding = parseFloat(styles.paddingLeft) +\n\t\tparseFloat(styles.paddingRight);\n\n\treturn element.clientWidth - padding;\n}\n\nexport function bind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function (event) {\n\t\t\t\telement.addEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function unbind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function(event) {\n\t\t\t\telement.removeEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function fire(target, type, properties) {\n\tvar evt = document.createEvent(\"HTMLEvents\");\n\n\tevt.initEvent(type, true, true );\n\n\tfor (var j in properties) {\n\t\tevt[j] = properties[j];\n\t}\n\n\treturn target.dispatchEvent(evt);\n}\n\n// https://css-tricks.com/snippets/javascript/loop-queryselectorall-matches/\nexport function forEachNode(nodeList, callback, scope) {\n\tif(!nodeList) return;\n\tfor (var i = 0; i < nodeList.length; i++) {\n\t\tcallback.call(scope, nodeList[i], i);\n\t}\n}\n\nexport function activate($parent, $child, commonClass, activeClass='active', index = -1) {\n\tlet $children = $parent.querySelectorAll(`.${commonClass}.${activeClass}`);\n\n\tforEachNode($children, (node, i) => {\n\t\tif(index >= 0 && i <= index) return;\n\t\tnode.classList.remove(activeClass);\n\t});\n\n\t$child.classList.add(activeClass);\n}\n","export const ALL_CHART_TYPES = ['line', 'scatter', 'bar', 'percentage', 'heatmap', 'pie'];\n\nexport const COMPATIBLE_CHARTS = {\n\tbar: ['line', 'scatter', 'percentage', 'pie'],\n\tline: ['scatter', 'bar', 'percentage', 'pie'],\n\tpie: ['line', 'scatter', 'percentage', 'bar'],\n\tpercentage: ['bar', 'line', 'scatter', 'pie'],\n\theatmap: []\n};\n\nexport const DATA_COLOR_DIVISIONS = {\n\tbar: 'datasets',\n\tline: 'datasets',\n\tpie: 'labels',\n\tpercentage: 'labels',\n\theatmap: HEATMAP_DISTRIBUTION_SIZE\n};\n\nexport const BASE_MEASURES = {\n\tmargins: {\n\t\ttop: 10,\n\t\tbottom: 10,\n\t\tleft: 20,\n\t\tright: 20\n\t},\n\tpaddings: {\n\t\ttop: 20,\n\t\tbottom: 40,\n\t\tleft: 30,\n\t\tright: 10\n\t},\n\n\tbaseHeight: 240,\n\ttitleHeight: 20,\n\tlegendHeight: 30,\n\n\ttitleFontSize: 12,\n};\n\nexport function getTopOffset(m) {\n\treturn m.titleHeight + m.margins.top + m.paddings.top;\n}\n\nexport function getLeftOffset(m) {\n\treturn m.margins.left + m.paddings.left;\n}\n\nexport function getExtraHeight(m) {\n\tlet totalExtraHeight = m.margins.top + m.margins.bottom\n\t\t+ m.paddings.top + m.paddings.bottom\n\t\t+ m.titleHeight + m.legendHeight;\n\treturn totalExtraHeight;\n}\n\nexport function getExtraWidth(m) {\n\tlet totalExtraWidth = m.margins.left + m.margins.right\n\t\t+ m.paddings.left + m.paddings.right;\n\n\treturn totalExtraWidth;\n}\n\nexport const INIT_CHART_UPDATE_TIMEOUT = 700;\nexport const CHART_POST_ANIMATE_TIMEOUT = 400;\n\nexport const DEFAULT_AXIS_CHART_TYPE = 'line';\nexport const AXIS_DATASET_CHART_TYPES = ['line', 'bar'];\n\nexport const AXIS_LEGEND_BAR_SIZE = 100;\n\nexport const BAR_CHART_SPACE_RATIO = 0.5;\nexport const MIN_BAR_PERCENT_HEIGHT = 0.00;\n\nexport const LINE_CHART_DOT_SIZE = 4;\nexport const DOT_OVERLAY_SIZE_INCR = 4;\n\nexport const PERCENTAGE_BAR_DEFAULT_HEIGHT = 20;\nexport const PERCENTAGE_BAR_DEFAULT_DEPTH = 2;\n\n// Fixed 5-color theme,\n// More colors are difficult to parse visually\nexport const HEATMAP_DISTRIBUTION_SIZE = 5;\n\nexport const HEATMAP_SQUARE_SIZE = 10;\nexport const HEATMAP_GUTTER_SIZE = 2;\n\nexport const DEFAULT_CHAR_WIDTH = 7;\n\nexport const TOOLTIP_POINTER_TRIANGLE_HEIGHT = 5;\n\nconst DEFAULT_CHART_COLORS = ['light-blue', 'blue', 'violet', 'red', 'orange',\n\t'yellow', 'green', 'light-green', 'purple', 'magenta', 'light-grey', 'dark-grey'];\nconst HEATMAP_COLORS_GREEN = ['#ebedf0', '#c6e48b', '#7bc96f', '#239a3b', '#196127'];\nexport const HEATMAP_COLORS_BLUE = ['#ebedf0', '#c0ddf9', '#73b3f3', '#3886e1', '#17459e'];\nexport const HEATMAP_COLORS_YELLOW = ['#ebedf0', '#fdf436', '#ffc700', '#ff9100', '#06001c'];\n\nexport const DEFAULT_COLORS = {\n\tbar: DEFAULT_CHART_COLORS,\n\tline: DEFAULT_CHART_COLORS,\n\tpie: DEFAULT_CHART_COLORS,\n\tpercentage: DEFAULT_CHART_COLORS,\n\theatmap: HEATMAP_COLORS_GREEN,\n\tdonut: DEFAULT_CHART_COLORS\n};\n\n// Universal constants\nexport const ANGLE_RATIO = Math.PI / 180;\nexport const FULL_ANGLE = 360;\n","import { ANGLE_RATIO } from './constants';\n\n/**\n * Returns the value of a number upto 2 decimal places.\n * @param {Number} d Any number\n */\nexport function floatTwo(d) {\n\treturn parseFloat(d.toFixed(2));\n}\n\n/**\n * Returns whether or not two given arrays are equal.\n * @param {Array} arr1 First array\n * @param {Array} arr2 Second array\n */\nexport function arraysEqual(arr1, arr2) {\n\tif(arr1.length !== arr2.length) return false;\n\tlet areEqual = true;\n\tarr1.map((d, i) => {\n\t\tif(arr2[i] !== d) areEqual = false;\n\t});\n\treturn areEqual;\n}\n\n/**\n * Shuffles array in place. ES6 version\n * @param {Array} array An array containing the items.\n */\nexport function shuffle(array) {\n\t// Awesomeness: https://bost.ocks.org/mike/shuffle/\n\t// https://stackoverflow.com/a/2450976/6495043\n\t// https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array?noredirect=1&lq=1\n\n\tfor (let i = array.length - 1; i > 0; i--) {\n\t\tlet j = Math.floor(Math.random() * (i + 1));\n\t\t[array[i], array[j]] = [array[j], array[i]];\n\t}\n\n\treturn array;\n}\n\n/**\n * Fill an array with extra points\n * @param {Array} array Array\n * @param {Number} count number of filler elements\n * @param {Object} element element to fill with\n * @param {Boolean} start fill at start?\n */\nexport function fillArray(array, count, element, start=false) {\n\tif(!element) {\n\t\telement = start ? array[0] : array[array.length - 1];\n\t}\n\tlet fillerArray = new Array(Math.abs(count)).fill(element);\n\tarray = start ? fillerArray.concat(array) : array.concat(fillerArray);\n\treturn array;\n}\n\n/**\n * Returns pixel width of string.\n * @param {String} string\n * @param {Number} charWidth Width of single char in pixels\n */\nexport function getStringWidth(string, charWidth) {\n\treturn (string+\"\").length * charWidth;\n}\n\nexport function bindChange(obj, getFn, setFn) {\n\treturn new Proxy(obj, {\n\t\tset: function(target, prop, value) {\n\t\t\tsetFn();\n\t\t\treturn Reflect.set(target, prop, value);\n\t\t},\n\t\tget: function(target, prop) {\n\t\t\tgetFn();\n\t\t\treturn Reflect.get(target, prop);\n\t\t}\n\t});\n}\n\n// https://stackoverflow.com/a/29325222\nexport function getRandomBias(min, max, bias, influence) {\n\tconst range = max - min;\n\tconst biasValue = range * bias + min;\n\tvar rnd = Math.random() * range + min,\t\t// random in range\n\t\tmix = Math.random() * influence;\t\t// random mixer\n\treturn rnd * (1 - mix) + biasValue * mix;\t// mix full range and bias\n}\n\nexport function getPositionByAngle(angle, radius) {\n\treturn {\n\t\tx: Math.sin(angle * ANGLE_RATIO) * radius,\n\t\ty: Math.cos(angle * ANGLE_RATIO) * radius,\n\t};\n}\n\n/**\n * Check if a number is valid for svg attributes\n * @param {object} candidate Candidate to test\n * @param {Boolean} nonNegative flag to treat negative number as invalid\n */\nexport function isValidNumber(candidate, nonNegative=false) {\n\tif (Number.isNaN(candidate)) return false;\n\telse if (candidate === undefined) return false;\n\telse if (!Number.isFinite(candidate)) return false;\n\telse if (nonNegative && candidate < 0) return false;\n\telse return true;\n}\n\n/**\n * Round a number to the closes precision, max max precision 4\n * @param {Number} d Any Number\n */\nexport function round(d) {\n\t// https://floating-point-gui.de/\n\t// https://www.jacklmoore.com/notes/rounding-in-javascript/\n\treturn Number(Math.round(d + 'e4') + 'e-4');\n}\n\n/**\n * Creates a deep clone of an object\n * @param {Object} candidate Any Object\n */\n export function deepClone(candidate) {\n\tlet cloned, value, key;\n  \n\tif (candidate instanceof Date) {\n\t  return new Date(candidate.getTime());\n\t}\n  \n\tif (typeof candidate !== \"object\" || candidate === null) {\n\t  return candidate;\n\t}\n  \n\tcloned = Array.isArray(candidate) ? [] : {};\n  \n\tfor (key in candidate) {\n\t  value = candidate[key];\n  \n\t  cloned[key] = deepClone(value);\n\t}\n  \n\treturn cloned;\n  }","import { fillArray } from './helpers';\n\nexport function getBarHeightAndYAttr(yTop, zeroLine) {\n\tlet height, y;\n\tif (yTop <= zeroLine) {\n\t\theight = zeroLine - yTop;\n\t\ty = yTop;\n\t} else {\n\t\theight = yTop - zeroLine;\n\t\ty = zeroLine;\n\t}\n\n\treturn [height, y];\n}\n\nexport function equilizeNoOfElements(array1, array2,\n\textraCount = array2.length - array1.length) {\n\n\t// Doesn't work if either has zero elements.\n\tif(extraCount > 0) {\n\t\tarray1 = fillArray(array1, extraCount);\n\t} else {\n\t\tarray2 = fillArray(array2, extraCount);\n\t}\n\treturn [array1, array2];\n}\n\nexport function truncateString(txt, len) {\n\tif (!txt) {\n\t\treturn;\n\t}\n\tif (txt.length > len) {\n\t\treturn txt.slice(0, len-3) + '...';\n\t} else {\n\t\treturn txt;\n\t}\n}\n\nexport function shortenLargeNumber(label) {\n\tlet number;\n\tif (typeof label === 'number') number = label;\n\telse if (typeof label === 'string') {\n\t\tnumber = Number(label);\n\t\tif (Number.isNaN(number)) return label;\n\t}\n\n\t// Using absolute since log wont work for negative numbers\n\tlet p = Math.floor(Math.log10(Math.abs(number)));\n\tif (p <= 2) return number; // Return as is for a 3 digit number of less\n\tlet\tl = Math.floor(p / 3);\n\tlet shortened = (Math.pow(10, p - l * 3) * +(number / Math.pow(10, p)).toFixed(1));\n\n\t// Correct for floating point error upto 2 decimal places\n\treturn Math.round(shortened*100)/100 + ' ' + ['', 'K', 'M', 'B', 'T'][l];\n}\n\n// cubic bezier curve calculation (from example by François Romain)\nexport function getSplineCurvePointsStr(xList, yList) {\n\n\tlet points=[];\n\tfor(let i=0;i<xList.length;i++){\n\t\tpoints.push([xList[i], yList[i]]);\n\t}\n\n\tlet smoothing = 0.2;\n\tlet line = (pointA, pointB) => {\n\t\tlet lengthX = pointB[0] - pointA[0];\n\t\tlet lengthY = pointB[1] - pointA[1];\n\t\treturn {\n\t\t\tlength: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n\t\t\tangle: Math.atan2(lengthY, lengthX)\n\t\t};\n\t};\n    \n\tlet controlPoint = (current, previous, next, reverse) => {\n\t\tlet p = previous || current;\n\t\tlet n = next || current;\n\t\tlet o = line(p, n);\n\t\tlet angle = o.angle + (reverse ? Math.PI : 0);\n\t\tlet length = o.length * smoothing;\n\t\tlet x = current[0] + Math.cos(angle) * length;\n\t\tlet y = current[1] + Math.sin(angle) * length;\n\t\treturn [x, y];\n\t};\n    \n\tlet bezierCommand = (point, i, a) => {\n\t\tlet cps = controlPoint(a[i - 1], a[i - 2], point);\n\t\tlet cpe = controlPoint(point, a[i - 1], a[i + 1], true);\n\t\treturn `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[1]}`;\n\t};\n    \n\tlet pointStr = (points, command) => {\n\t\treturn points.reduce((acc, point, i, a) => i === 0\n\t\t\t? `${point[0]},${point[1]}`\n\t\t\t: `${acc} ${command(point, i, a)}`, '');\n\t};\n    \n\treturn pointStr(points, bezierCommand);\n}\n","const PRESET_COLOR_MAP = {\n\t'light-blue': '#7cd6fd',\n\t'blue': '#5e64ff',\n\t'violet': '#743ee2',\n\t'red': '#ff5858',\n\t'orange': '#ffa00a',\n\t'yellow': '#feef72',\n\t'green': '#28a745',\n\t'light-green': '#98d85b',\n\t'purple': '#b554ff',\n\t'magenta': '#ffa3ef',\n\t'black': '#36114C',\n\t'grey': '#bdd3e6',\n\t'light-grey': '#f0f4f7',\n\t'dark-grey': '#b8c2cc'\n};\n\nfunction limitColor(r){\n\tif (r > 255) return 255;\n\telse if (r < 0) return 0;\n\treturn r;\n}\n\nexport function lightenDarkenColor(color, amt) {\n\tlet col = getColor(color);\n\tlet usePound = false;\n\tif (col[0] == \"#\") {\n\t\tcol = col.slice(1);\n\t\tusePound = true;\n\t}\n\tlet num = parseInt(col,16);\n\tlet r = limitColor((num >> 16) + amt);\n\tlet b = limitColor(((num >> 8) & 0x00FF) + amt);\n\tlet g = limitColor((num & 0x0000FF) + amt);\n\treturn (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\nexport function isValidColor(string) {\n\t// https://stackoverflow.com/a/32685393\n\tlet HEX_RE = /(^\\s*)(#)((?:[A-Fa-f0-9]{3}){1,2})$/i;\n\tlet RGB_RE = /(^\\s*)(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/i;\n\treturn HEX_RE.test(string) || RGB_RE.test(string);\n}\n\nexport const getColor = (color) => {\n\t// When RGB color, convert to hexadecimal (alpha value is omitted)\n\tif((/rgb[a]{0,1}\\([\\d, ]+\\)/gim).test(color)) {\n\t\treturn (/\\D+(\\d*)\\D+(\\d*)\\D+(\\d*)/gim).exec(color)\n\t\t\t.map((x, i) => (i !== 0 ? Number(x).toString(16) : '#'))\n\t\t\t.reduce((c, ch) => `${c}${ch}`);\n\t}\n\treturn PRESET_COLOR_MAP[color] || color;\n};\n","import {\n    getBarHeightAndYAttr,\n    truncateString,\n    shortenLargeNumber,\n    getSplineCurvePointsStr\n} from './draw-utils';\nimport { getStringWidth, isValidNumber } from './helpers';\nimport { DOT_OVERLAY_SIZE_INCR, PERCENTAGE_BAR_DEFAULT_DEPTH } from './constants';\nimport { lightenDarkenColor } from './colors';\n\nexport const AXIS_TICK_LENGTH = 6;\nconst LABEL_MARGIN = 4;\nconst LABEL_MAX_CHARS = 15;\nexport const FONT_SIZE = 10;\nconst BASE_LINE_COLOR = '#dadada';\nconst FONT_FILL = '#555b51';\n\nfunction $(expr, con) {\n    return typeof expr === 'string' ? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function createSVG(tag, o) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', tag);\n\n    for (var i in o) {\n        var val = o[i];\n\n        if (i === 'inside') {\n            $(val).appendChild(element);\n        } else if (i === 'around') {\n            var ref = $(val);\n            ref.parentNode.insertBefore(element, ref);\n            element.appendChild(ref);\n        } else if (i === 'styles') {\n            if (typeof val === 'object') {\n                Object.keys(val).map((prop) => {\n                    element.style[prop] = val[prop];\n                });\n            }\n        } else {\n            if (i === 'className') {\n                i = 'class';\n            }\n            if (i === 'innerHTML') {\n                element['textContent'] = val;\n            } else {\n                element.setAttribute(i, val);\n            }\n        }\n    }\n\n    return element;\n}\n\nfunction renderVerticalGradient(svgDefElem, gradientId) {\n    return createSVG('linearGradient', {\n        inside: svgDefElem,\n        id: gradientId,\n        x1: 0,\n        x2: 0,\n        y1: 0,\n        y2: 1\n    });\n}\n\nfunction setGradientStop(gradElem, offset, color, opacity) {\n    return createSVG('stop', {\n        inside: gradElem,\n        style: `stop-color: ${color}`,\n        offset: offset,\n        'stop-opacity': opacity\n    });\n}\n\nexport function makeSVGContainer(parent, className, width, height) {\n    return createSVG('svg', {\n        className: className,\n        inside: parent,\n        width: width,\n        height: height\n    });\n}\n\nexport function makeSVGDefs(svgContainer) {\n    return createSVG('defs', {\n        inside: svgContainer\n    });\n}\n\nexport function makeSVGGroup(className, transform = '', parent = undefined) {\n    let args = {\n        className: className,\n        transform: transform\n    };\n    if (parent) args.inside = parent;\n    return createSVG('g', args);\n}\n\nexport function wrapInSVGGroup(elements, className = '') {\n    let g = createSVG('g', {\n        className: className\n    });\n    elements.forEach((e) => g.appendChild(e));\n    return g;\n}\n\nexport function makePath(\n    pathStr,\n    className = '',\n    stroke = 'none',\n    fill = 'none',\n    strokeWidth = 2\n) {\n    return createSVG('path', {\n        className: className,\n        d: pathStr,\n        styles: {\n            stroke: stroke,\n            fill: fill,\n            'stroke-width': strokeWidth\n        }\n    });\n}\n\nexport function makeArcPathStr(\n    startPosition,\n    endPosition,\n    center,\n    radius,\n    clockWise = 1,\n    largeArc = 0\n) {\n    let [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n    let [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\n    return `M${center.x} ${center.y}\n\t\tL${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY} z`;\n}\n\nexport function makeCircleStr(\n    startPosition,\n    endPosition,\n    center,\n    radius,\n    clockWise = 1,\n    largeArc = 0\n) {\n    let [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n    let [arcEndX, midArc, arcEndY] = [\n        center.x + endPosition.x,\n        center.y * 2,\n        center.y + endPosition.y\n    ];\n    return `M${center.x} ${center.y}\n\t\tL${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${midArc} z\n\t\tL${arcStartX} ${midArc}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY} z`;\n}\n\nexport function makeArcStrokePathStr(\n    startPosition,\n    endPosition,\n    center,\n    radius,\n    clockWise = 1,\n    largeArc = 0\n) {\n    let [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n    let [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\n\n    return `M${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY}`;\n}\n\nexport function makeStrokeCircleStr(\n    startPosition,\n    endPosition,\n    center,\n    radius,\n    clockWise = 1,\n    largeArc = 0\n) {\n    let [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n    let [arcEndX, midArc, arcEndY] = [\n        center.x + endPosition.x,\n        radius * 2 + arcStartY,\n        center.y + startPosition.y\n    ];\n\n    return `M${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${midArc}\n\t\tM${arcStartX} ${midArc}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY}`;\n}\n\nexport function makeGradient(svgDefElem, color, lighter = false) {\n    let gradientId =\n        'path-fill-gradient' + '-' + color + '-' + (lighter ? 'lighter' : 'default');\n    let gradientDef = renderVerticalGradient(svgDefElem, gradientId);\n    let opacities = [1, 0.6, 0.2];\n    if (lighter) {\n        opacities = [0.4, 0.2, 0];\n    }\n\n    setGradientStop(gradientDef, '0%', color, opacities[0]);\n    setGradientStop(gradientDef, '50%', color, opacities[1]);\n    setGradientStop(gradientDef, '100%', color, opacities[2]);\n\n    return gradientId;\n}\n\nexport function percentageBar(\n    x,\n    y,\n    width,\n    height,\n    depth = PERCENTAGE_BAR_DEFAULT_DEPTH,\n    fill = 'none'\n) {\n    let args = {\n        className: 'percentage-bar',\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        fill: fill,\n        styles: {\n            stroke: lightenDarkenColor(fill, -25),\n            // Diabolically good: https://stackoverflow.com/a/9000859\n            // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray\n            'stroke-dasharray': `0, ${height + width}, ${width}, ${height}`,\n            'stroke-width': depth\n        }\n    };\n\n    return createSVG('rect', args);\n}\n\nexport function heatSquare(className, x, y, size, radius, fill = 'none', data = {}) {\n    let args = {\n        className: className,\n        x: x,\n        y: y,\n        width: size,\n        height: size,\n        rx: radius,\n        fill: fill\n    };\n\n    Object.keys(data).map((key) => {\n        args[key] = data[key];\n    });\n\n    return createSVG('rect', args);\n}\n\nexport function legendBar(x, y, size, fill = 'none', label, truncate = false) {\n    label = truncate ? truncateString(label, LABEL_MAX_CHARS) : label;\n\n    let args = {\n        className: 'legend-bar',\n        x: 0,\n        y: 0,\n        width: size,\n        height: '2px',\n        fill: fill\n    };\n    let text = createSVG('text', {\n        className: 'legend-dataset-text',\n        x: 0,\n        y: 0,\n        dy: FONT_SIZE * 2 + 'px',\n        'font-size': FONT_SIZE * 1.2 + 'px',\n        'text-anchor': 'start',\n        fill: FONT_FILL,\n        innerHTML: label\n    });\n\n    let group = createSVG('g', {\n        transform: `translate(${x}, ${y})`\n    });\n    group.appendChild(createSVG('rect', args));\n    group.appendChild(text);\n\n    return group;\n}\n\nexport function legendDot(x, y, size, fill = 'none', label, truncate = false) {\n    label = truncate ? truncateString(label, LABEL_MAX_CHARS) : label;\n\n    let args = {\n        className: 'legend-dot',\n        cx: 0,\n        cy: 0,\n        r: size,\n        fill: fill\n    };\n    let text = createSVG('text', {\n        className: 'legend-dataset-text',\n        x: 0,\n        y: 0,\n        dx: FONT_SIZE + 'px',\n        dy: FONT_SIZE / 3 + 'px',\n        'font-size': FONT_SIZE * 1.2 + 'px',\n        'text-anchor': 'start',\n        fill: FONT_FILL,\n        innerHTML: label\n    });\n\n    let group = createSVG('g', {\n        transform: `translate(${x}, ${y})`\n    });\n    group.appendChild(createSVG('circle', args));\n    group.appendChild(text);\n\n    return group;\n}\n\nexport function makeText(className, x, y, content, options = {}) {\n    let fontSize = options.fontSize || FONT_SIZE;\n    let dy = options.dy !== undefined ? options.dy : fontSize / 2;\n    let fill = options.fill || FONT_FILL;\n    let textAnchor = options.textAnchor || 'start';\n    return createSVG('text', {\n        className: className,\n        x: x,\n        y: y,\n        dy: dy + 'px',\n        'font-size': fontSize + 'px',\n        fill: fill,\n        'text-anchor': textAnchor,\n        innerHTML: content\n    });\n}\n\nfunction makeVertLine(x, label, y1, y2, options = {}) {\n    if (!options.stroke) options.stroke = BASE_LINE_COLOR;\n    let l = createSVG('line', {\n        className: 'line-vertical ' + options.className,\n        x1: 0,\n        x2: 0,\n        y1: y1,\n        y2: y2,\n        styles: {\n            stroke: options.stroke\n        }\n    });\n\n    let text = createSVG('text', {\n        x: 0,\n        y: y1 > y2 ? y1 + LABEL_MARGIN : y1 - LABEL_MARGIN - FONT_SIZE,\n        dy: FONT_SIZE + 'px',\n        'font-size': FONT_SIZE + 'px',\n        'text-anchor': 'middle',\n        innerHTML: label + ''\n    });\n\n    let line = createSVG('g', {\n        transform: `translate(${x}, 0)`\n    });\n\n    line.appendChild(l);\n    line.appendChild(text);\n\n    return line;\n}\n\nfunction makeHoriLine(y, label, x1, x2, options = {}) {\n    if (!options.stroke) options.stroke = BASE_LINE_COLOR;\n    if (!options.lineType) options.lineType = '';\n    if (!options.alignment) options.alignment = 'left';\n    if (options.shortenNumbers) label = shortenLargeNumber(label);\n\n    let className =\n        'line-horizontal ' +\n        options.className +\n        (options.lineType === 'dashed' ? 'dashed' : '');\n\n    let l = createSVG('line', {\n        className: className,\n        x1: x1,\n        x2: x2,\n        y1: 0,\n        y2: 0,\n        styles: {\n            stroke: options.stroke\n        }\n    });\n\n    let text = createSVG('text', {\n        x: options.alignment === 'left' ? x1 - LABEL_MARGIN : x2 + LABEL_MARGIN * 4,\n        y: 0,\n        dy: FONT_SIZE / 2 - 2 + 'px',\n        'font-size': FONT_SIZE + 'px',\n        'text-anchor': x1 < x2 ? 'end' : 'start',\n        innerHTML: label + ''\n    });\n\n    let line = createSVG('g', {\n        transform: `translate(0, ${y})`,\n        'stroke-opacity': 1\n    });\n\n    if (text === 0 || text === '0') {\n        line.style.stroke = 'rgba(27, 31, 35, 0.6)';\n    }\n\n    line.appendChild(l);\n    line.appendChild(text);\n\n    return line;\n}\n\nexport function generateAxisLabel(options) {\n    if (!options.title) return;\n\n    const x = options.position === 'left' ? LABEL_MARGIN : options.width;\n    // - getStringWidth(options.title, 5);\n    const rotation =\n        options.position === 'right'\n            ? `rotate(90, ${options.width}, ${options.height / 2})`\n            : `rotate(270, 0, ${options.height / 2})`;\n\n    const labelSvg = createSVG('text', {\n        className: 'chart-label',\n        x: x - getStringWidth(options.title, 5) / 2,\n        y: options.height / 2 - LABEL_MARGIN,\n        dy: FONT_SIZE / -2 + 'px',\n        'font-size': FONT_SIZE + 'px',\n        'text-anchor': 'start',\n        transform: rotation,\n        innerHTML: options.title + ''\n    });\n\n    return labelSvg;\n}\n\nexport function yLine(y, label, width, options = {}) {\n    if (!isValidNumber(y)) y = 0;\n\n    if (!options.pos) options.pos = 'left';\n    if (!options.offset) options.offset = 0;\n    if (!options.mode) options.mode = 'span';\n    if (!options.stroke) options.stroke = BASE_LINE_COLOR;\n    if (!options.className) options.className = '';\n\n    let x1 = -1 * AXIS_TICK_LENGTH;\n    let x2 = options.mode === 'span' ? width + AXIS_TICK_LENGTH : 0;\n\n    if (options.mode === 'tick' && options.pos === 'right') {\n        x1 = width + AXIS_TICK_LENGTH;\n        x2 = width;\n    }\n\n    let offset = options.pos === 'left' ? -1 * options.offset : options.offset;\n\n    x1 += offset;\n    x2 += offset;\n\n    return makeHoriLine(y, label, x1, x2, {\n        stroke: options.stroke,\n        className: options.className,\n        lineType: options.lineType,\n        alignment: options.pos,\n        shortenNumbers: options.shortenNumbers\n    });\n}\n\nexport function xLine(x, label, height, options = {}) {\n    if (!isValidNumber(x)) x = 0;\n\n    if (!options.pos) options.pos = 'bottom';\n    if (!options.offset) options.offset = 0;\n    if (!options.mode) options.mode = 'span';\n    if (!options.stroke) options.stroke = BASE_LINE_COLOR;\n    if (!options.className) options.className = '';\n\n    // Draw X axis line in span/tick mode with optional label\n    //                        \ty2(span)\n    // \t\t\t\t\t\t|\n    // \t\t\t\t\t\t|\n    //\t\t\t\tx line\t|\n    //\t\t\t\t\t\t|\n    // \t\t\t\t\t   \t|\n    // ---------------------+-- y2(tick)\n    //\t\t\t\t\t\t|\n    //\t\t\t\t\t\t\ty1\n\n    let y1 = height + AXIS_TICK_LENGTH;\n    let y2 = options.mode === 'span' ? -1 * AXIS_TICK_LENGTH : height;\n\n    if (options.mode === 'tick' && options.pos === 'top') {\n        // top axis ticks\n        y1 = -1 * AXIS_TICK_LENGTH;\n        y2 = 0;\n    }\n\n    return makeVertLine(x, label, y1, y2, {\n        stroke: options.stroke,\n        className: options.className,\n        lineType: options.lineType\n    });\n}\n\nexport function yMarker(y, label, width, options = {}) {\n    if (!options.labelPos) options.labelPos = 'right';\n    let x =\n        options.labelPos === 'left'\n            ? LABEL_MARGIN\n            : width - getStringWidth(label, 5) - LABEL_MARGIN;\n\n    let labelSvg = createSVG('text', {\n        className: 'chart-label',\n        x: x,\n        y: 0,\n        dy: FONT_SIZE / -2 + 'px',\n        'font-size': FONT_SIZE + 'px',\n        'text-anchor': 'start',\n        innerHTML: label + ''\n    });\n\n    let line = makeHoriLine(y, '', 0, width, {\n        stroke: options.stroke || BASE_LINE_COLOR,\n        className: options.className || '',\n        lineType: options.lineType\n    });\n\n    line.appendChild(labelSvg);\n\n    return line;\n}\n\nexport function yRegion(y1, y2, width, label, options = {}) {\n    // return a group\n    let height = y1 - y2;\n\n    let rect = createSVG('rect', {\n        className: `bar mini`, // remove class\n        styles: {\n            fill: `rgba(228, 234, 239, 0.49)`,\n            stroke: BASE_LINE_COLOR,\n            'stroke-dasharray': `${width}, ${height}`\n        },\n        // 'data-point-index': index,\n        x: 0,\n        y: 0,\n        width: width,\n        height: height\n    });\n\n    if (!options.labelPos) options.labelPos = 'right';\n    let x =\n        options.labelPos === 'left'\n            ? LABEL_MARGIN\n            : width - getStringWidth(label + '', 4.5) - LABEL_MARGIN;\n\n    let labelSvg = createSVG('text', {\n        className: 'chart-label',\n        x: x,\n        y: 0,\n        dy: FONT_SIZE / -2 + 'px',\n        'font-size': FONT_SIZE + 'px',\n        'text-anchor': 'start',\n        innerHTML: label + ''\n    });\n\n    let region = createSVG('g', {\n        transform: `translate(0, ${y2})`\n    });\n\n    region.appendChild(rect);\n    region.appendChild(labelSvg);\n\n    return region;\n}\n\nexport function datasetBar(\n    x,\n    yTop,\n    width,\n    color,\n    label = '',\n    index = 0,\n    offset = 0,\n    meta = {}\n) {\n    let [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n    y -= offset;\n\n    if (height === 0) {\n        height = meta.minHeight;\n        y -= meta.minHeight;\n    }\n\n    // Preprocess numbers to avoid svg building errors\n    if (!isValidNumber(x)) x = 0;\n    if (!isValidNumber(y)) y = 0;\n    if (!isValidNumber(height, true)) height = 0;\n    if (!isValidNumber(width, true)) width = 0;\n\n    let rect = createSVG('rect', {\n        className: `bar mini`,\n        style: `fill: ${color}`,\n        'data-point-index': index,\n        x: x,\n        y: y,\n        width: width,\n        height: height\n    });\n\n    label += '';\n\n    if (!label && !label.length) {\n        return rect;\n    } else {\n        rect.setAttribute('y', 0);\n        rect.setAttribute('x', 0);\n        let text = createSVG('text', {\n            className: 'data-point-value',\n            x: width / 2,\n            y: 0,\n            dy: (FONT_SIZE / 2) * -1 + 'px',\n            'font-size': FONT_SIZE + 'px',\n            'text-anchor': 'middle',\n            innerHTML: label\n        });\n\n        let group = createSVG('g', {\n            'data-point-index': index,\n            transform: `translate(${x}, ${y})`\n        });\n        group.appendChild(rect);\n        group.appendChild(text);\n\n        return group;\n    }\n}\n\nexport function datasetDot(x, y, radius, color, label = '', index = 0) {\n    let dot = createSVG('circle', {\n        style: `fill: ${color}`,\n        'data-point-index': index,\n        cx: x,\n        cy: y,\n        r: radius\n    });\n\n    label += '';\n\n    if (!label && !label.length) {\n        return dot;\n    } else {\n        dot.setAttribute('cy', 0);\n        dot.setAttribute('cx', 0);\n\n        let text = createSVG('text', {\n            className: 'data-point-value',\n            x: 0,\n            y: 0,\n            dy: (FONT_SIZE / 2) * -1 - radius + 'px',\n            'font-size': FONT_SIZE + 'px',\n            'text-anchor': 'middle',\n            innerHTML: label\n        });\n\n        let group = createSVG('g', {\n            'data-point-index': index,\n            transform: `translate(${x}, ${y})`\n        });\n        group.appendChild(dot);\n        group.appendChild(text);\n\n        return group;\n    }\n}\n\nexport function getPaths(xList, yList, color, options = {}, meta = {}) {\n    let pointsList = yList.map((y, i) => xList[i] + ',' + y);\n    let pointsStr = pointsList.join('L');\n\n    // Spline\n    if (options.spline) pointsStr = getSplineCurvePointsStr(xList, yList);\n\n    let path = makePath('M' + pointsStr, 'line-graph-path', color);\n\n    // HeatLine\n    if (options.heatline) {\n        let gradient_id = makeGradient(meta.svgDefs, color);\n        path.style.stroke = `url(#${gradient_id})`;\n    }\n\n    let paths = {\n        path: path\n    };\n\n    // Region\n    if (options.regionFill) {\n        let gradient_id_region = makeGradient(meta.svgDefs, color, true);\n\n        let pathStr =\n            'M' +\n            `${xList[0]},${meta.zeroLine}L` +\n            pointsStr +\n            `L${xList.slice(-1)[0]},${meta.zeroLine}`;\n        paths.region = makePath(pathStr, `region-fill`, 'none', `url(#${gradient_id_region})`);\n    }\n\n    return paths;\n}\n\nexport let makeOverlay = {\n    bar: (unit) => {\n        let transformValue;\n        if (unit.nodeName !== 'rect') {\n            transformValue = unit.getAttribute('transform');\n            unit = unit.childNodes[0];\n        }\n        let overlay = unit.cloneNode();\n        overlay.style.fill = '#000000';\n        overlay.style.opacity = '0.4';\n\n        if (transformValue) {\n            overlay.setAttribute('transform', transformValue);\n        }\n        return overlay;\n    },\n\n    dot: (unit) => {\n        let transformValue;\n        if (unit.nodeName !== 'circle') {\n            transformValue = unit.getAttribute('transform');\n            unit = unit.childNodes[0];\n        }\n        let overlay = unit.cloneNode();\n        let radius = unit.getAttribute('r');\n        let fill = unit.getAttribute('fill');\n        overlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\n        overlay.setAttribute('fill', fill);\n        overlay.style.opacity = '0.6';\n\n        if (transformValue) {\n            overlay.setAttribute('transform', transformValue);\n        }\n        return overlay;\n    },\n\n    heat_square: (unit) => {\n        let transformValue;\n        if (unit.nodeName !== 'circle') {\n            transformValue = unit.getAttribute('transform');\n            unit = unit.childNodes[0];\n        }\n        let overlay = unit.cloneNode();\n        let radius = unit.getAttribute('r');\n        let fill = unit.getAttribute('fill');\n        overlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\n        overlay.setAttribute('fill', fill);\n        overlay.style.opacity = '0.6';\n\n        if (transformValue) {\n            overlay.setAttribute('transform', transformValue);\n        }\n        return overlay;\n    }\n};\n\nexport let updateOverlay = {\n    bar: (unit, overlay) => {\n        let transformValue;\n        if (unit.nodeName !== 'rect') {\n            transformValue = unit.getAttribute('transform');\n            unit = unit.childNodes[0];\n        }\n        let attributes = ['x', 'y', 'width', 'height'];\n        Object.values(unit.attributes)\n            .filter((attr) => attributes.includes(attr.name) && attr.specified)\n            .map((attr) => {\n                overlay.setAttribute(attr.name, attr.nodeValue);\n            });\n\n        if (transformValue) {\n            overlay.setAttribute('transform', transformValue);\n        }\n    },\n\n    dot: (unit, overlay) => {\n        let transformValue;\n        if (unit.nodeName !== 'circle') {\n            transformValue = unit.getAttribute('transform');\n            unit = unit.childNodes[0];\n        }\n        let attributes = ['cx', 'cy'];\n        Object.values(unit.attributes)\n            .filter((attr) => attributes.includes(attr.name) && attr.specified)\n            .map((attr) => {\n                overlay.setAttribute(attr.name, attr.nodeValue);\n            });\n\n        if (transformValue) {\n            overlay.setAttribute('transform', transformValue);\n        }\n    },\n\n    heat_square: (unit, overlay) => {\n        let transformValue;\n        if (unit.nodeName !== 'circle') {\n            transformValue = unit.getAttribute('transform');\n            unit = unit.childNodes[0];\n        }\n        let attributes = ['cx', 'cy'];\n        Object.values(unit.attributes)\n            .filter((attr) => attributes.includes(attr.name) && attr.specified)\n            .map((attr) => {\n                overlay.setAttribute(attr.name, attr.nodeValue);\n            });\n\n        if (transformValue) {\n            overlay.setAttribute('transform', transformValue);\n        }\n    }\n};\n","import { getBarHeightAndYAttr, getSplineCurvePointsStr } from './draw-utils';\n\nexport const UNIT_ANIM_DUR = 350;\nexport const PATH_ANIM_DUR = 350;\nexport const MARKER_LINE_ANIM_DUR = UNIT_ANIM_DUR;\nexport const REPLACE_ALL_NEW_DUR = 250;\n\nexport const STD_EASING = 'easein';\n\nexport function translate(unit, oldCoord, newCoord, duration) {\n\tlet old = typeof oldCoord === 'string' ? oldCoord : oldCoord.join(', ');\n\treturn [\n\t\tunit,\n\t\t{transform: newCoord.join(', ')},\n\t\tduration,\n\t\tSTD_EASING,\n\t\t\"translate\",\n\t\t{transform: old}\n\t];\n}\n\nexport function translateVertLine(xLine, newX, oldX) {\n\treturn translate(xLine, [oldX, 0], [newX, 0], MARKER_LINE_ANIM_DUR);\n}\n\nexport function translateHoriLine(yLine, newY, oldY) {\n\treturn translate(yLine, [0, oldY], [0, newY], MARKER_LINE_ANIM_DUR);\n}\n\nexport function animateRegion(rectGroup, newY1, newY2, oldY2) {\n\tlet newHeight = newY1 - newY2;\n\tlet rect = rectGroup.childNodes[0];\n\tlet width = rect.getAttribute(\"width\");\n\tlet rectAnim = [\n\t\trect,\n\t\t{ height: newHeight, 'stroke-dasharray': `${width}, ${newHeight}` },\n\t\tMARKER_LINE_ANIM_DUR,\n\t\tSTD_EASING\n\t];\n\n\tlet groupAnim = translate(rectGroup, [0, oldY2], [0, newY2], MARKER_LINE_ANIM_DUR);\n\treturn [rectAnim, groupAnim];\n}\n\nexport function animateBar(bar, x, yTop, width, offset=0, meta={}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\tif(bar.nodeName !== 'rect') {\n\t\tlet rect = bar.childNodes[0];\n\t\tlet rectAnim = [\n\t\t\trect,\n\t\t\t{width: width, height: height},\n\t\t\tUNIT_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\n\t\tlet oldCoordStr = bar.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(bar, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [rectAnim, groupAnim];\n\t} else {\n\t\treturn [[bar, {width: width, height: height, x: x, y: y}, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// bar.animate({height: args.newHeight, y: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animateDot(dot, x, y) {\n\tif(dot.nodeName !== 'circle') {\n\t\tlet oldCoordStr = dot.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(dot, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [groupAnim];\n\t} else {\n\t\treturn [[dot, {cx: x, cy: y}, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animatePath(paths, newXList, newYList, zeroLine, spline) {\n\tlet pathComponents = [];\n\tlet pointsStr = newYList.map((y, i) => (newXList[i] + ',' + y)).join(\"L\");\n\n\tif (spline)\n\t\tpointsStr = getSplineCurvePointsStr(newXList, newYList);\n\n\tconst animPath = [paths.path, {d:\"M\" + pointsStr}, PATH_ANIM_DUR, STD_EASING];\n\tpathComponents.push(animPath);\n\n\tif(paths.region) {\n\t\tlet regStartPt = `${newXList[0]},${zeroLine}L`;\n\t\tlet regEndPt = `L${newXList.slice(-1)[0]}, ${zeroLine}`;\n\n\t\tconst animRegion = [\n\t\t\tpaths.region,\n\t\t\t{d:\"M\" + regStartPt + pointsStr + regEndPt},\n\t\t\tPATH_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\t\tpathComponents.push(animRegion);\n\t}\n\n\treturn pathComponents;\n}\n\nexport function animatePathStr(oldPath, pathStr) {\n\treturn [oldPath, {d: pathStr}, UNIT_ANIM_DUR, STD_EASING];\n}\n","// Leveraging SMIL Animations\n\nimport { REPLACE_ALL_NEW_DUR } from './animate';\n\nconst EASING = {\n\tease: \"0.25 0.1 0.25 1\",\n\tlinear: \"0 0 1 1\",\n\t// easein: \"0.42 0 1 1\",\n\teasein: \"0.1 0.8 0.2 1\",\n\teaseout: \"0 0 0.58 1\",\n\teaseinout: \"0.42 0 0.58 1\"\n};\n\nfunction animateSVGElement(element, props, dur, easingType=\"linear\", type=undefined, oldValues={}) {\n\n\tlet animElement = element.cloneNode(true);\n\tlet newElement = element.cloneNode(true);\n\n\tfor(var attributeName in props) {\n\t\tlet animateElement;\n\t\tif(attributeName === 'transform') {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animateTransform\");\n\t\t} else {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animate\");\n\t\t}\n\t\tlet currentValue = oldValues[attributeName] || element.getAttribute(attributeName);\n\t\tlet value = props[attributeName];\n\n\t\tlet animAttr = {\n\t\t\tattributeName: attributeName,\n\t\t\tfrom: currentValue,\n\t\t\tto: value,\n\t\t\tbegin: \"0s\",\n\t\t\tdur: dur/1000 + \"s\",\n\t\t\tvalues: currentValue + \";\" + value,\n\t\t\tkeySplines: EASING[easingType],\n\t\t\tkeyTimes: \"0;1\",\n\t\t\tcalcMode: \"spline\",\n\t\t\tfill: 'freeze'\n\t\t};\n\n\t\tif(type) {\n\t\t\tanimAttr[\"type\"] = type;\n\t\t}\n\n\t\tfor (var i in animAttr) {\n\t\t\tanimateElement.setAttribute(i, animAttr[i]);\n\t\t}\n\n\t\tanimElement.appendChild(animateElement);\n\n\t\tif(type) {\n\t\t\tnewElement.setAttribute(attributeName, `translate(${value})`);\n\t\t} else {\n\t\t\tnewElement.setAttribute(attributeName, value);\n\t\t}\n\t}\n\n\treturn [animElement, newElement];\n}\n\nexport function transform(element, style) { // eslint-disable-line no-unused-vars\n\telement.style.transform = style;\n\telement.style.webkitTransform = style;\n\telement.style.msTransform = style;\n\telement.style.mozTransform = style;\n\telement.style.oTransform = style;\n}\n\nfunction animateSVG(svgContainer, elements) {\n\tlet newElements = [];\n\tlet animElements = [];\n\n\telements.map(element => {\n\t\tlet unit = element[0];\n\t\tlet parent = unit.parentNode;\n\n\t\tlet animElement, newElement;\n\n\t\telement[0] = unit;\n\t\t[animElement, newElement] = animateSVGElement(...element);\n\n\t\tnewElements.push(newElement);\n\t\tanimElements.push([animElement, parent]);\n\t\t\n\t\tif (parent) {\n\t\t\tparent.replaceChild(animElement, unit);\n\t\t}\n\t});\n\n\tlet animSvg = svgContainer.cloneNode(true);\n\n\tanimElements.map((animElement, i) => {\n\t\tif (animElement[1]) {\n\t\t\tanimElement[1].replaceChild(newElements[i], animElement[0]);\n\t\t\telements[i][0] = newElements[i];\n\t\t}\n\t});\n\n\treturn animSvg;\n}\n\nexport function runSMILAnimation(parent, svgElement, elementsToAnimate) {\n\tif(elementsToAnimate.length === 0) return;\n\n\tlet animSvgElement = animateSVG(svgElement, elementsToAnimate);\n\tif(svgElement.parentNode == parent) {\n\t\tparent.removeChild(svgElement);\n\t\tparent.appendChild(animSvgElement);\n\n\t}\n\n\t// Replace the new svgElement (data has already been replaced)\n\tsetTimeout(() => {\n\t\tif(animSvgElement.parentNode == parent) {\n\t\t\tparent.removeChild(animSvgElement);\n\t\t\tparent.appendChild(svgElement);\n\t\t}\n\t}, REPLACE_ALL_NEW_DUR);\n}\n","import { $ } from '../utils/dom';\nimport { CSSTEXT } from '../../css/chartsCss';\n\nexport function downloadFile(filename, data) {\n\tvar a = document.createElement('a');\n\ta.style = \"display: none\";\n\tvar blob = new Blob(data, {type: \"image/svg+xml; charset=utf-8\"});\n\tvar url = window.URL.createObjectURL(blob);\n\ta.href = url;\n\ta.download = filename;\n\tdocument.body.appendChild(a);\n\ta.click();\n\tsetTimeout(function(){\n\t\tdocument.body.removeChild(a);\n\t\twindow.URL.revokeObjectURL(url);\n\t}, 300);\n}\n\nexport function prepareForExport(svg) {\n\tlet clone = svg.cloneNode(true);\n\tclone.classList.add('chart-container');\n\tclone.setAttribute('xmlns', \"http://www.w3.org/2000/svg\");\n\tclone.setAttribute('xmlns:xlink', \"http://www.w3.org/1999/xlink\");\n\tlet styleEl = $.create('style', {\n\t\t'innerHTML': CSSTEXT\n\t});\n\tclone.insertBefore(styleEl, clone.firstChild);\n\n\tlet container = $.create('div');\n\tcontainer.appendChild(clone);\n\n\treturn container.innerHTML;\n}\n","// Playing around with dates\n\nexport const NO_OF_YEAR_MONTHS = 12;\nexport const NO_OF_DAYS_IN_WEEK = 7;\nexport const DAYS_IN_YEAR = 375;\nexport const NO_OF_MILLIS = 1000;\nexport const SEC_IN_DAY = 86400;\n\nexport const MONTH_NAMES = [\"January\", \"February\", \"March\", \"April\", \"May\",\n\t\"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nexport const MONTH_NAMES_SHORT = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n\t\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nexport const DAY_NAMES_SHORT = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nexport const DAY_NAMES = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",\n\t\"Thursday\", \"Friday\", \"Saturday\"];\n\n// https://stackoverflow.com/a/11252167/6495043\nfunction treatAsUtc(date) {\n\tlet result = new Date(date);\n\tresult.setMinutes(result.getMinutes() - result.getTimezoneOffset());\n\treturn result;\n}\n\nexport function getYyyyMmDd(date) {\n\tlet dd = date.getDate();\n\tlet mm = date.getMonth() + 1; // getMonth() is zero-based\n\treturn [\n\t\tdate.getFullYear(),\n\t\t(mm>9 ? '' : '0') + mm,\n\t\t(dd>9 ? '' : '0') + dd\n\t].join('-');\n}\n\nexport function clone(date) {\n\treturn new Date(date.getTime());\n}\n\nexport function timestampSec(date) {\n\treturn date.getTime()/NO_OF_MILLIS;\n}\n\nexport function timestampToMidnight(timestamp, roundAhead = false) {\n\tlet midnightTs = Math.floor(timestamp - (timestamp % SEC_IN_DAY));\n\tif(roundAhead) {\n\t\treturn midnightTs + SEC_IN_DAY;\n\t}\n\treturn midnightTs;\n}\n\n// export function getMonthsBetween(startDate, endDate) {}\n\nexport function getWeeksBetween(startDate, endDate) {\n\tlet weekStartDate = setDayToSunday(startDate);\n\treturn Math.ceil(getDaysBetween(weekStartDate, endDate) / NO_OF_DAYS_IN_WEEK);\n}\n\nexport function getDaysBetween(startDate, endDate) {\n\tlet millisecondsPerDay = SEC_IN_DAY * NO_OF_MILLIS;\n\treturn (treatAsUtc(endDate) - treatAsUtc(startDate)) / millisecondsPerDay;\n}\n\nexport function areInSameMonth(startDate, endDate) {\n\treturn startDate.getMonth() === endDate.getMonth()\n\t\t&& startDate.getFullYear() === endDate.getFullYear();\n}\n\nexport function getMonthName(i, short=false) {\n\tlet monthName = MONTH_NAMES[i];\n\treturn short ? monthName.slice(0, 3) : monthName;\n}\n\nexport function getLastDateInMonth (month, year) {\n\treturn new Date(year, month + 1, 0); // 0: last day in previous month\n}\n\n// mutates\nexport function setDayToSunday(date) {\n\tlet newDate = clone(date);\n\tconst day = newDate.getDay();\n\tif(day !== 0) {\n\t\taddDays(newDate, (-1) * day);\n\t}\n\treturn newDate;\n}\n\n// mutates\nexport function addDays(date, numberOfDays) {\n\tdate.setDate(date.getDate() + numberOfDays);\n}\n","import { makeSVGGroup } from '../utils/draw';\nimport { makeText, generateAxisLabel, makePath, xLine, yLine, yMarker, yRegion, datasetBar, datasetDot, percentageBar, getPaths, heatSquare } from '../utils/draw';\nimport { equilizeNoOfElements } from '../utils/draw-utils';\nimport { translateHoriLine, translateVertLine, animateRegion, animateBar,\n\tanimateDot, animatePath, animatePathStr } from '../utils/animate';\nimport { getMonthName } from '../utils/date-utils';\n\nclass ChartComponent {\n\tconstructor({\n\t\tlayerClass = '',\n\t\tlayerTransform = '',\n\t\tconstants,\n\n\t\tgetData,\n\t\tmakeElements,\n\t\tanimateElements\n\t}) {\n\t\tthis.layerTransform = layerTransform;\n\t\tthis.constants = constants;\n\n\t\tthis.makeElements = makeElements;\n\t\tthis.getData = getData;\n\n\t\tthis.animateElements = animateElements;\n\n\t\tthis.store = [];\n\t\tthis.labels = [];\n\n\t\tthis.layerClass = layerClass;\n\t\tthis.layerClass = typeof(this.layerClass) === 'function'\n\t\t\t? this.layerClass() : this.layerClass;\n\n\t\tthis.refresh();\n\t}\n\n\trefresh(data) {\n\t\tthis.data = data || this.getData();\n\t}\n\n\tsetup(parent) {\n\t\tthis.layer = makeSVGGroup(this.layerClass, this.layerTransform, parent);\n\t}\n\n\tmake() {\n\t\tthis.render(this.data);\n\t\tthis.oldData = this.data;\n\t}\n\n\trender(data) {\n\t\tthis.store = this.makeElements(data);\n\n\t\tthis.layer.textContent = '';\n        this.store.forEach((element) => {\n            element.length\n                ? element.forEach((el) => {\n                      this.layer.appendChild(el);\n                  })\n                : this.layer.appendChild(element);\n        });\n\t\tthis.labels.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t}\n\n\tupdate(animate = true) {\n\t\tthis.refresh();\n\t\tlet animateElements = [];\n\t\tif(animate) {\n\t\t\tanimateElements = this.animateElements(this.data) || [];\n\t\t}\n\t\treturn animateElements;\n\t}\n}\n\nlet componentConfigs = {\n\tdonutSlices: {\n\t\tlayerClass: 'donut-slices',\n\t\tmakeElements(data) {\n\t\t\treturn data.sliceStrings.map((s, i) => {\n\t\t\t\tlet slice = makePath(s, 'donut-path', data.colors[i], 'none', data.strokeWidth);\n\t\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\t\treturn slice;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\treturn this.store.map((slice, i) => animatePathStr(slice, newData.sliceStrings[i]));\n\t\t},\n\t},\n\tpieSlices: {\n\t\tlayerClass: 'pie-slices',\n\t\tmakeElements(data) {\n\t\t\treturn data.sliceStrings.map((s, i) =>{\n\t\t\t\tlet slice = makePath(s, 'pie-path', 'none', data.colors[i]);\n\t\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\t\treturn slice;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\treturn this.store.map((slice, i) =>\n\t\t\t\tanimatePathStr(slice, newData.sliceStrings[i])\n\t\t\t);\n\t\t}\n\t},\n\tpercentageBars: {\n\t\tlayerClass: 'percentage-bars',\n\t\tmakeElements(data) {\n\t\t\treturn data.xPositions.map((x, i) =>{\n\t\t\t\tlet y = 0;\n\t\t\t\tlet bar = percentageBar(x, y, data.widths[i],\n\t\t\t\t\tthis.constants.barHeight, this.constants.barDepth, data.colors[i]);\n\t\t\t\treturn bar;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tif(newData) return [];\n\t\t}\n\t},\n    yAxis: {\n        layerClass: 'y axis',\n        makeElements(data) {\n            let elements = [];\n\n            if (data.length) {\n                data.forEach((item, i) => {\n                    item.positions.map((position, i) => {\n                        elements.push(\n                            yLine(position, item.labels[i], this.constants.width, {\n                                mode: this.constants.mode,\n                                pos: item.pos || this.constants.pos,\n                                shortenNumbers: this.constants.shortenNumbers\n                            })\n                        );\n                    });\n                    // we need to make yAxis titles if they are defined\n                    if (item.title) {\n                        elements.push(\n                            generateAxisLabel({\n                                title: item.title,\n                                position: item.pos,\n                                height: item.zeroLine,\n                                width: this.constants.width\n                            })\n                        );\n                    }\n                });\n\n                return elements;\n            }\n\n            return data.positions.map((position, i) => {\n                return yLine(position, data.labels[i], this.constants.width, {\n                    mode: this.constants.mode,\n                    pos: this.constants.pos,\n                    shortenNumbers: this.constants.shortenNumbers\n                });\n            });\n        },\n\n        animateElements(newData) {\n            const animateMultipleElements = (oldData, newData) => {\n                let newPos = newData.positions;\n                let newLabels = newData.labels;\n                let oldPos = oldData.positions;\n                let oldLabels = oldData.labels;\n\n                [oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n                [oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n                this.render({\n                    positions: oldPos,\n                    labels: newLabels\n                });\n\n                return this.store.map((line, i) => {\n                    return translateHoriLine(line, newPos[i], oldPos[i]);\n                });\n            };\n\n            // we will need to animate both axis if we have more than one.\n            // so check if the oldData is an array of values.\n            if (this.oldData instanceof Array) {\n                return this.oldData.forEach((old, i) => {\n                    animateMultipleElements(old, newData[i]);\n                });\n            }\n\n            let newPos = newData.positions;\n            let newLabels = newData.labels;\n            let oldPos = this.oldData.positions;\n            let oldLabels = this.oldData.labels;\n\n            [oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n            [oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n            this.render({\n                positions: oldPos,\n                labels: newLabels\n            });\n\n            return this.store.map((line, i) => {\n                return translateHoriLine(line, newPos[i], oldPos[i]);\n            });\n        }\n    },\n\n\txAxis: {\n\t\tlayerClass: 'x axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\txLine(position, data.calcLabels[i], this.constants.height,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.calcLabels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.calcLabels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tcalcLabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateVertLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyMarkers: {\n\t\tlayerClass: 'y-markers',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(m =>\n\t\t\t\tyMarker(m.position, m.label, this.constants.width,\n\t\t\t\t\t{labelPos: m.options.labelPos, mode: 'span', lineType: 'dashed'})\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.position);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newOptions = newData.map(d => d.options);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.position);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tposition: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i],\n\t\t\t\t\toptions: newOptions[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyRegions: {\n\t\tlayerClass: 'y-regions',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(r =>\n\t\t\t\tyRegion(r.startPos, r.endPos, this.constants.width,\n\t\t\t\t\tr.label, {labelPos: r.options.labelPos})\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.endPos);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newStarts = newData.map(d => d.startPos);\n\t\t\tlet newOptions = newData.map(d => d.options);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.endPos);\n\t\t\tlet oldStarts = this.oldData.map(d => d.startPos);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tstartPos: oldStarts[i],\n\t\t\t\t\tendPos: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i],\n\t\t\t\t\toptions: newOptions[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((rectGroup, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateRegion(\n\t\t\t\t\trectGroup, newStarts[i], newPos[i], oldPos[i]\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\theatDomain: {\n\t\tlayerClass: function() { return 'heat-domain domain-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet {index, colWidth, rowHeight, squareSize, radius, xTranslate} = this.constants;\n\t\t\tlet monthNameHeight = -12;\n\t\t\tlet x = xTranslate, y = 0;\n\n\t\t\tthis.serializedSubDomains = [];\n\n\t\t\tdata.cols.map((week, weekNo) => {\n\t\t\t\tif(weekNo === 1) {\n\t\t\t\t\tthis.labels.push(\n\t\t\t\t\t\tmakeText('domain-name', x, monthNameHeight, getMonthName(index, true).toUpperCase(),\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfontSize: 9\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tweek.map((day, i) => {\n\t\t\t\t\tif(day.fill) {\n\t\t\t\t\t\tlet data = {\n\t\t\t\t\t\t\t'data-date': day.yyyyMmDd,\n\t\t\t\t\t\t\t'data-value': day.dataValue,\n\t\t\t\t\t\t\t'data-day': i\n\t\t\t\t\t\t};\n\t\t\t\t\t\tlet square = heatSquare('day', x, y, squareSize, radius, day.fill, data);\n\t\t\t\t\t\tthis.serializedSubDomains.push(square);\n\t\t\t\t\t}\n\t\t\t\t\ty += rowHeight;\n\t\t\t\t});\n\t\t\t\ty = 0;\n\t\t\t\tx += colWidth;\n\t\t\t});\n\n\t\t\treturn this.serializedSubDomains;\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tif(newData) return [];\n\t\t}\n\t},\n\n\tbarGraph: {\n\t\tlayerClass: function() { return 'dataset-units dataset-bars dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'bar';\n\t\t\tthis.units = data.yPositions.map((y, j) => {\n\t\t\t\treturn datasetBar(\n\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\ty,\n\t\t\t\t\tdata.barWidth,\n\t\t\t\t\tc.color,\n\t\t\t\t\tdata.labels[j],\n\t\t\t\t\tj,\n\t\t\t\t\tdata.offsets[j],\n\t\t\t\t\t{\n\t\t\t\t\t\tzeroLine: data.zeroLine,\n\t\t\t\t\t\tbarsWidth: data.barsWidth,\n\t\t\t\t\t\tminHeight: c.minHeight\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t\treturn this.units;\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newOffsets = newData.offsets;\n\t\t\tlet newLabels = newData.labels;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldOffsets = this.oldData.offsets;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldOffsets, newOffsets] = equilizeNoOfElements(oldOffsets, newOffsets);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\toffsets: oldOffsets,\n\t\t\t\tlabels: newLabels,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tbarsWidth: this.oldData.barsWidth,\n\t\t\t\tbarWidth: this.oldData.barWidth,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((bar, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateBar(\n\t\t\t\t\tbar, newXPos[i], newYPos[i], newData.barWidth, newOffsets[i],\n\t\t\t\t\t{zeroLine: newData.zeroLine}\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\tlineGraph: {\n\t\tlayerClass: function() { return 'dataset-units dataset-line dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'dot';\n\t\t\tthis.paths = {};\n\t\t\tif(!c.hideLine) {\n\t\t\t\tthis.paths = getPaths(\n\t\t\t\t\tdata.xPositions,\n\t\t\t\t\tdata.yPositions,\n\t\t\t\t\tc.color,\n\t\t\t\t\t{\n\t\t\t\t\t\theatline: c.heatline,\n\t\t\t\t\t\tregionFill: c.regionFill,\n\t\t\t\t\t\tspline: c.spline\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tsvgDefs: c.svgDefs,\n\t\t\t\t\t\tzeroLine: data.zeroLine\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.units = [];\n\t\t\tif(!c.hideDots) {\n\t\t\t\tthis.units = data.yPositions.map((y, j) => {\n\t\t\t\t\treturn datasetDot(\n\t\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\t\ty,\n\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\tc.color,\n\t\t\t\t\t\t(c.valuesOverPoints ? data.values[j] : ''),\n\t\t\t\t\t\tj\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn Object.values(this.paths).concat(this.units);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newValues = newData.values;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldValues = this.oldData.values;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldValues, newValues] = equilizeNoOfElements(oldValues, newValues);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\tvalues: newValues,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tradius: this.oldData.radius,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tif(Object.keys(this.paths).length) {\n\t\t\t\tanimateElements = animateElements.concat(animatePath(\n\t\t\t\t\tthis.paths, newXPos, newYPos, newData.zeroLine, this.constants.spline));\n\t\t\t}\n\n\t\t\tif(this.units.length) {\n\t\t\t\tthis.units.map((dot, i) => {\n\t\t\t\t\tanimateElements = animateElements.concat(animateDot(\n\t\t\t\t\t\tdot, newXPos[i], newYPos[i]));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn animateElements;\n\t\t}\n\t}\n};\n\nexport function getComponent(name, constants, getData) {\n\tlet keys = Object.keys(componentConfigs).filter(k => name.includes(k));\n\tlet config = componentConfigs[keys[0]];\n\tObject.assign(config, {\n\t\tconstants: constants,\n\t\tgetData: getData\n\t});\n\treturn new ChartComponent(config);\n}\n","import { floatTwo } from './helpers';\n\nfunction normalize(x) {\n\t// Calculates mantissa and exponent of a number\n\t// Returns normalized number and exponent\n\t// https://stackoverflow.com/q/9383593/6495043\n\n\tif(x===0) {\n\t\treturn [0, 0];\n\t}\n\tif(isNaN(x)) {\n\t\treturn {mantissa: -6755399441055744, exponent: 972};\n\t}\n\tvar sig = x > 0 ? 1 : -1;\n\tif(!isFinite(x)) {\n\t\treturn {mantissa: sig * 4503599627370496, exponent: 972};\n\t}\n\n\tx = Math.abs(x);\n\tvar exp = Math.floor(Math.log10(x));\n\tvar man = x/Math.pow(10, exp);\n\n\treturn [sig * man, exp];\n}\n\nfunction getChartRangeIntervals(max, min=0) {\n\tlet upperBound = Math.ceil(max);\n\tlet lowerBound = Math.floor(min);\n\tlet range = upperBound - lowerBound;\n\n\tlet noOfParts = range;\n\tlet partSize = 1;\n\n\t// To avoid too many partitions\n\tif(range > 5) {\n\t\tif(range % 2 !== 0) {\n\t\t\tupperBound++;\n\t\t\t// Recalc range\n\t\t\trange = upperBound - lowerBound;\n\t\t}\n\t\tnoOfParts = range/2;\n\t\tpartSize = 2;\n\t}\n\n\t// Special case: 1 and 2\n\tif(range <= 2) {\n\t\tnoOfParts = 4;\n\t\tpartSize = range/noOfParts;\n\t}\n\n\t// Special case: 0\n\tif(range === 0) {\n\t\tnoOfParts = 5;\n\t\tpartSize = 1;\n\t}\n\n\tlet intervals = [];\n\tfor(var i = 0; i <= noOfParts; i++){\n\t\tintervals.push(lowerBound + partSize * i);\n\t}\n\treturn intervals;\n}\n\nfunction getChartIntervals(maxValue, minValue=0) {\n\tlet [normalMaxValue, exponent] = normalize(maxValue);\n\tlet normalMinValue = minValue ? minValue/Math.pow(10, exponent): 0;\n\n\t// Allow only 7 significant digits\n\tnormalMaxValue = normalMaxValue.toFixed(6);\n\n\tlet intervals = getChartRangeIntervals(normalMaxValue, normalMinValue);\n\tintervals = intervals.map(value => {\n\t\t// For negative exponents we want to divide by 10^-exponent to avoid\n\t\t// floating point arithmetic bugs. For instance, in javascript\n\t\t// 6 * 10^-1 == 0.6000000000000001, we instead want 6 / 10^1 == 0.6\n\t\tif (exponent < 0) {\n\t\t\treturn value / Math.pow(10, -exponent);\n\t\t}\n\t\treturn value * Math.pow(10, exponent);\n\t});\n\treturn intervals;\n}\n\nexport function calcChartIntervals(values, withMinimum=false) {\n\t//*** Where the magic happens ***\n\n\t// Calculates best-fit y intervals from given values\n\t// and returns the interval array\n\n\tlet maxValue = Math.max(...values);\n\tlet minValue = Math.min(...values);\n\n\t// Exponent to be used for pretty print\n\tlet exponent = 0, intervals = []; // eslint-disable-line no-unused-vars\n\n\tfunction getPositiveFirstIntervals(maxValue, absMinValue) {\n\t\tlet intervals = getChartIntervals(maxValue);\n\n\t\tlet intervalSize = intervals[1] - intervals[0];\n\n\t\t// Then unshift the negative values\n\t\tlet value = 0;\n\t\tfor(var i = 1; value < absMinValue; i++) {\n\t\t\tvalue += intervalSize;\n\t\t\tintervals.unshift((-1) * value);\n\t\t}\n\t\treturn intervals;\n\t}\n\n\t// CASE I: Both non-negative\n\n\tif(maxValue >= 0 && minValue >= 0) {\n\t\texponent = normalize(maxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(maxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(maxValue, minValue);\n\t\t}\n\t}\n\n\t// CASE II: Only minValue negative\n\n\telse if(maxValue > 0 && minValue < 0) {\n\t\t// `withMinimum` irrelevant in this case,\n\t\t// We'll be handling both sides of zero separately\n\t\t// (both starting from zero)\n\t\t// Because ceil() and floor() behave differently\n\t\t// in those two regions\n\n\t\tlet absMinValue = Math.abs(minValue);\n\n\t\tif(maxValue >= absMinValue) {\n\t\t\texponent = normalize(maxValue)[1];\n\t\t\tintervals = getPositiveFirstIntervals(maxValue, absMinValue);\n\t\t} else {\n\t\t\t// Mirror: maxValue => absMinValue, then change sign\n\t\t\texponent = normalize(absMinValue)[1];\n\t\t\tlet posIntervals = getPositiveFirstIntervals(absMinValue, maxValue);\n\t\t\tintervals = posIntervals.reverse().map(d => d * (-1));\n\t\t}\n\n\t}\n\n\t// CASE III: Both non-positive\n\n\telse if(maxValue <= 0 && minValue <= 0) {\n\t\t// Mirrored Case I:\n\t\t// Work with positives, then reverse the sign and array\n\n\t\tlet pseudoMaxValue = Math.abs(minValue);\n\t\tlet pseudoMinValue = Math.abs(maxValue);\n\n\t\texponent = normalize(pseudoMaxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue, pseudoMinValue);\n\t\t}\n\n\t\tintervals = intervals.reverse().map(d => d * (-1));\n\t}\n\n\treturn intervals;\n}\n\nexport function getZeroIndex(yPts) {\n\tlet zeroIndex;\n\tlet interval = getIntervalSize(yPts);\n\tif(yPts.indexOf(0) >= 0) {\n\t\t// the range has a given zero\n\t\t// zero-line on the chart\n\t\tzeroIndex = yPts.indexOf(0);\n\t} else if(yPts[0] > 0) {\n\t\t// Minimum value is positive\n\t\t// zero-line is off the chart: below\n\t\tlet min = yPts[0];\n\t\tzeroIndex = (-1) * min / interval;\n\t} else {\n\t\t// Maximum value is negative\n\t\t// zero-line is off the chart: above\n\t\tlet max = yPts[yPts.length - 1];\n\t\tzeroIndex = (-1) * max / interval + (yPts.length - 1);\n\t}\n\treturn zeroIndex;\n}\n\nexport function getRealIntervals(max, noOfIntervals, min = 0, asc = 1) {\n\tlet range = max - min;\n\tlet part = range * 1.0 / noOfIntervals;\n\tlet intervals = [];\n\n\tfor(var i = 0; i <= noOfIntervals; i++) {\n\t\tintervals.push(min + part * i);\n\t}\n\n\treturn asc ? intervals : intervals.reverse();\n}\n\nexport function getIntervalSize(orderedArray) {\n\treturn orderedArray[1] - orderedArray[0];\n}\n\nexport function getValueRange(orderedArray) {\n\treturn orderedArray[orderedArray.length-1] - orderedArray[0];\n}\n\nexport function scale(val, yAxis) {\n\treturn floatTwo(yAxis.zeroLine - val * yAxis.scaleMultiplier);\n}\n\nexport function isInRange(val, min, max) {\n\treturn val > min && val < max;\n}\n\nexport function isInRange2D(coord, minCoord, maxCoord) {\n\treturn isInRange(coord[0], minCoord[0], maxCoord[0])\n\t\t&& isInRange(coord[1], minCoord[1], maxCoord[1]);\n}\n\nexport function getClosestInArray(goal, arr, index = false) {\n\tlet closest = arr.reduce(function(prev, curr) {\n\t\treturn (Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev);\n\t}, []);\n\n\treturn index ? arr.indexOf(closest) : closest;\n}\n\nexport function calcDistribution(values, distributionSize) {\n\t// Assume non-negative values,\n\t// implying distribution minimum at zero\n\n\tlet dataMaxValue = Math.max(...values);\n\n\tlet distributionStep = 1 / (distributionSize - 1);\n\tlet distribution = [];\n\n\tfor(var i = 0; i < distributionSize; i++) {\n\t\tlet checkpoint = dataMaxValue * (distributionStep * i);\n\t\tdistribution.push(checkpoint);\n\t}\n\n\treturn distribution;\n}\n\nexport function getMaxCheckpoint(value, distribution) {\n\treturn distribution.filter(d => d < value).length;\n}\n","import { fillArray } from '../utils/helpers';\nimport { DEFAULT_AXIS_CHART_TYPE, AXIS_DATASET_CHART_TYPES, DEFAULT_CHAR_WIDTH } from '../utils/constants';\n\nexport function dataPrep(data, type) {\n\tdata.labels = data.labels || [];\n\n\tlet datasetLength = data.labels.length;\n\n\t// Datasets\n\tlet datasets = data.datasets;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\tif(!datasets) {\n\t\t// default\n\t\tdatasets = [{\n\t\t\tvalues: zeroArray\n\t\t}];\n\t}\n\n\tdatasets.map(d=> {\n\t\t// Set values\n\t\tif(!d.values) {\n\t\t\td.values = zeroArray;\n\t\t} else {\n\t\t\t// Check for non values\n\t\t\tlet vals = d.values;\n\t\t\tvals = vals.map(val => (!isNaN(val) ? val : 0));\n\n\t\t\t// Trim or extend\n\t\t\tif(vals.length > datasetLength) {\n\t\t\t\tvals = vals.slice(0, datasetLength);\n\t\t\t} else {\n\t\t\t\tvals = fillArray(vals, datasetLength - vals.length, 0);\n\t\t\t}\n\t\t\td.values = vals;\n\t\t}\n\n\t\t// Set type\n\t\tif(!d.chartType ) {\n\t\t\tif(!AXIS_DATASET_CHART_TYPES.includes(type)) type === DEFAULT_AXIS_CHART_TYPE;\n\t\t\td.chartType = type;\n\t\t}\n\n\t});\n\n\t// Markers\n\n\t// Regions\n\t// data.yRegions = data.yRegions || [];\n\tif(data.yRegions) {\n\t\tdata.yRegions.map(d => {\n\t\t\tif(d.end < d.start) {\n\t\t\t\t[d.start, d.end] = [d.end, d.start];\n\t\t\t}\n\t\t});\n\t}\n\n\treturn data;\n}\n\nexport function zeroDataPrep(realData) {\n\tlet datasetLength = realData.labels.length;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\n    let zeroData = {\n        labels: realData.labels.slice(0, -1),\n        datasets: realData.datasets.map((d) => {\n            const { axisID } = d;\n            return {\n                axisID,\n                name: '',\n                values: zeroArray.slice(0, -1),\n                chartType: d.chartType\n            };\n        })\n    };\n\n\tif(realData.yMarkers) {\n\t\tzeroData.yMarkers = [\n\t\t\t{\n\t\t\t\tvalue: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\tif(realData.yRegions) {\n\t\tzeroData.yRegions = [\n\t\t\t{\n\t\t\t\tstart: 0,\n\t\t\t\tend: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\treturn zeroData;\n}\n\nexport function getShortenedLabels(chartWidth, labels=[], isSeries=true) {\n\tlet allowedSpace = chartWidth / labels.length;\n\tif(allowedSpace <= 0) allowedSpace = 1;\n\tlet allowedLetters = allowedSpace / DEFAULT_CHAR_WIDTH;\n\n\tlet seriesMultiple;\n\tif(isSeries) {\n\t\t// Find the maximum label length for spacing calculations\n\t\tlet maxLabelLength = Math.max(...labels.map(label => label.length));\n\t\tseriesMultiple = Math.ceil(maxLabelLength/allowedLetters);\n\t}\n\n\tlet calcLabels = labels.map((label, i) => {\n\t\tlabel += \"\";\n\t\tif(label.length > allowedLetters) {\n\n\t\t\tif(!isSeries) {\n\t\t\t\tif(allowedLetters-3 > 0) {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters-3) + \" ...\";\n\t\t\t\t} else {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters) + '..';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif(i % seriesMultiple !== 0) {\n\t\t\t\t\tlabel = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn label;\n\t});\n\n\treturn calcLabels;\n}\n","import '../css/charts.scss';\n\n// import MultiAxisChart from './charts/MultiAxisChart';\nimport PercentageChart from './charts/PercentageChart';\nimport PieChart from './charts/PieChart';\nimport Heatmap from './charts/Heatmap';\nimport AxisChart from './charts/AxisChart';\nimport DonutChart from './charts/DonutChart';\n\nconst chartTypes = {\n\tbar: AxisChart,\n\tline: AxisChart,\n\t// multiaxis: MultiAxisChart,\n\tpercentage: PercentageChart,\n\theatmap: Heatmap,\n\tpie: PieChart,\n\tdonut: DonutChart,\n};\n\nfunction getChartByType(chartType = 'line', parent, options) {\n\tif (chartType === 'axis-mixed') {\n\t\toptions.type = 'line';\n\t\treturn new AxisChart(parent, options);\n\t}\n\n\tif (!chartTypes[chartType]) {\n\t\tconsole.error(\"Undefined chart type: \" + chartType);\n\t\treturn;\n\t}\n\n\treturn new chartTypes[chartType](parent, options);\n}\n\nclass Chart {\n\tconstructor(parent, options) {\n\t\treturn getChartByType(options.type, parent, options);\n\t}\n}\n\nexport { Chart, PercentageChart, PieChart, Heatmap, AxisChart };","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { $ } from '../utils/dom';\nimport { TOOLTIP_POINTER_TRIANGLE_HEIGHT } from '../utils/constants';\n\nexport default class SvgTip {\n\tconstructor({\n\t\tparent = null,\n\t\tcolors = []\n\t}) {\n\t\tthis.parent = parent;\n\t\tthis.colors = colors;\n\t\tthis.titleName = '';\n\t\tthis.titleValue = '';\n\t\tthis.listValues = [];\n\t\tthis.titleValueFirst = 0;\n\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\n\t\tthis.top = 0;\n\t\tthis.left = 0;\n\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tthis.makeTooltip();\n\t}\n\n\trefresh() {\n\t\tthis.fill();\n\t\tthis.calcPosition();\n\t}\n\n\tmakeTooltip() {\n\t\tthis.container = $.create('div', {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'graph-svg-tip comparison',\n\t\t\tinnerHTML: `<span class=\"title\"></span>\n\t\t\t\t<ul class=\"data-point-list\"></ul>\n\t\t\t\t<div class=\"svg-pointer\"></div>`\n\t\t});\n\t\tthis.hideTip();\n\n\t\tthis.title = this.container.querySelector('.title');\n\t\tthis.dataPointList = this.container.querySelector('.data-point-list');\n\n\t\tthis.parent.addEventListener('mouseleave', () => {\n\t\t\tthis.hideTip();\n\t\t});\n\t}\n\n\tfill() {\n\t\tlet title;\n\t\tif(this.index) {\n\t\t\tthis.container.setAttribute('data-point-index', this.index);\n\t\t}\n\t\tif(this.titleValueFirst) {\n\t\t\ttitle = `<strong>${this.titleValue}</strong>${this.titleName}`;\n\t\t} else {\n\t\t\ttitle = `${this.titleName}<strong>${this.titleValue}</strong>`;\n\t\t}\n\t\tthis.title.innerHTML = title;\n\t\tthis.dataPointList.innerHTML = '';\n\n\t\tthis.listValues.map((set, i) => {\n\t\t\tconst color = this.colors[i] || 'black';\n\t\t\tlet value = set.formatted === 0 || set.formatted ? set.formatted : set.value;\n\n\t\t\tlet li = $.create('li', {\n\t\t\t\tstyles: {\n\t\t\t\t\t'border-top': `3px solid ${color}`\n\t\t\t\t},\n\t\t\t\tinnerHTML: `<strong style=\"display: block;\">${ value === 0 || value ? value : '' }</strong>\n\t\t\t\t\t${set.title ? set.title : '' }`\n\t\t\t});\n\n\t\t\tthis.dataPointList.appendChild(li);\n\t\t});\n\t}\n\n\tcalcPosition() {\n\t\tlet width = this.container.offsetWidth;\n\n\t\tthis.top = this.y - this.container.offsetHeight\n\t\t\t- TOOLTIP_POINTER_TRIANGLE_HEIGHT;\n\t\tthis.left = this.x - width/2;\n\t\tlet maxLeft = this.parent.offsetWidth - width;\n\n\t\tlet pointer = this.container.querySelector('.svg-pointer');\n\n\t\tif(this.left < 0) {\n\t\t\tpointer.style.left = `calc(50% - ${-1 * this.left}px)`;\n\t\t\tthis.left = 0;\n\t\t} else if(this.left > maxLeft) {\n\t\t\tlet delta = this.left - maxLeft;\n\t\t\tlet pointerOffset = `calc(50% + ${delta}px)`;\n\t\t\tpointer.style.left = pointerOffset;\n\n\t\t\tthis.left = maxLeft;\n\t\t} else {\n\t\t\tpointer.style.left = `50%`;\n\t\t}\n\t}\n\n\tsetValues(x, y, title = {}, listValues = [], index = -1) {\n\t\tthis.titleName = title.name;\n\t\tthis.titleValue = title.value;\n\t\tthis.listValues = listValues;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.titleValueFirst = title.valueFirst || 0;\n\t\tthis.index = index;\n\t\tthis.refresh();\n\t}\n\n\thideTip() {\n\t\tthis.container.style.top = '0px';\n\t\tthis.container.style.left = '0px';\n\t\tthis.container.style.opacity = '0';\n\t}\n\n\tshowTip() {\n\t\tthis.container.style.top = this.top + 'px';\n\t\tthis.container.style.left = this.left + 'px';\n\t\tthis.container.style.opacity = '1';\n\t}\n}\n","export const CSSTEXT = \".chart-container{position:relative;font-family:-apple-system,BlinkMacSystemFont,'Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue',sans-serif}.chart-container .axis,.chart-container .chart-label{fill:#555b51}.chart-container .axis line,.chart-container .chart-label line{stroke:#dadada}.chart-container .dataset-units circle{stroke:#fff;stroke-width:2}.chart-container .dataset-units path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container .dataset-path{stroke-width:2px}.chart-container .path-group path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container line.dashed{stroke-dasharray:5,3}.chart-container .axis-line .specific-value{text-anchor:start}.chart-container .axis-line .y-line{text-anchor:end}.chart-container .axis-line .x-line{text-anchor:middle}.chart-container .legend-dataset-text{fill:#6c7680;font-weight:600}.graph-svg-tip{position:absolute;z-index:99999;padding:10px;font-size:12px;color:#959da5;text-align:center;background:rgba(0,0,0,.8);border-radius:3px}.graph-svg-tip ul{padding-left:0;display:flex}.graph-svg-tip ol{padding-left:0;display:flex}.graph-svg-tip ul.data-point-list li{min-width:90px;flex:1;font-weight:600}.graph-svg-tip strong{color:#dfe2e5;font-weight:600}.graph-svg-tip .svg-pointer{position:absolute;height:5px;margin:0 0 0 -5px;content:' ';border:5px solid transparent;border-top-color:rgba(0,0,0,.8)}.graph-svg-tip.comparison{padding:0;text-align:left;pointer-events:none}.graph-svg-tip.comparison .title{display:block;padding:10px;margin:0;font-weight:600;line-height:1;pointer-events:none}.graph-svg-tip.comparison ul{margin:0;white-space:nowrap;list-style:none}.graph-svg-tip.comparison li{display:inline-block;padding:5px 10px}\";","import SvgTip from '../objects/SvgTip';\nimport { $, isElementInViewport, getElementContentWidth, isHidden } from '../utils/dom';\nimport { makeSVGContainer, makeSVGDefs, makeSVGGroup, makeText } from '../utils/draw';\nimport { BASE_MEASURES, getExtraHeight, getExtraWidth, getTopOffset, getLeftOffset,\n\tINIT_CHART_UPDATE_TIMEOUT, CHART_POST_ANIMATE_TIMEOUT, DEFAULT_COLORS} from '../utils/constants';\nimport { getColor, isValidColor } from '../utils/colors';\nimport { runSMILAnimation } from '../utils/animation';\nimport { downloadFile, prepareForExport } from '../utils/export';\nimport { deepClone } from  '../utils/helpers';\n\nexport default class BaseChart {\n\tconstructor(parent, options) {\n\t\t// deepclone options to avoid making changes to orignal object\n\t\toptions = deepClone(options);\n\n\t\tthis.parent = typeof parent === 'string'\n\t\t\t? document.querySelector(parent)\n\t\t\t: parent;\n\n\t\tif (!(this.parent instanceof HTMLElement)) {\n\t\t\tthrow new Error('No `parent` element to render on was provided.');\n\t\t}\n\n\t\tthis.rawChartArgs = options;\n\n\t\tthis.title = options.title || '';\n\t\tthis.type = options.type || '';\n\n\t\tthis.realData = this.prepareData(options.data);\n\t\tthis.data = this.prepareFirstData(this.realData);\n\n\t\tthis.colors = this.validateColors(options.colors, this.type);\n\n\t\tthis.config = {\n\t\t\tshowTooltip: 1, // calculate\n\t\t\tshowLegend: 1, // calculate\n\t\t\tisNavigable: options.isNavigable || 0,\n\t\t\tanimate: (typeof options.animate !== 'undefined') ? options.animate : 1,\n\t\t\ttruncateLegends: options.truncateLegends || 1\n\t\t};\n\n\t\tthis.measures = JSON.parse(JSON.stringify(BASE_MEASURES));\n\t\tlet m = this.measures;\n\t\tthis.setMeasures(options);\n\t\tif(!this.title.length) { m.titleHeight = 0; }\n\t\tif(!this.config.showLegend) m.legendHeight = 0;\n\t\tthis.argHeight = options.height || m.baseHeight;\n\n\t\tthis.state = {};\n\t\tthis.options = {};\n\n\t\tthis.initTimeout = INIT_CHART_UPDATE_TIMEOUT;\n\n\t\tif(this.config.isNavigable) {\n\t\t\tthis.overlays = [];\n\t\t}\n\n\t\tthis.configure(options);\n\t}\n\n\tprepareData(data) {\n\t\treturn data;\n\t}\n\n\tprepareFirstData(data) {\n\t\treturn data;\n\t}\n\n\tvalidateColors(colors, type) {\n\t\tconst validColors = [];\n\t\tcolors = (colors || []).concat(DEFAULT_COLORS[type]);\n\t\tcolors.forEach((string) => {\n\t\t\tconst color = getColor(string);\n\t\t\tif(!isValidColor(color)) {\n\t\t\t\tconsole.warn('\"' + string + '\" is not a valid color.');\n\t\t\t} else {\n\t\t\t\tvalidColors.push(color);\n\t\t\t}\n\t\t});\n\t\treturn validColors;\n\t}\n\n\tsetMeasures() {\n\t\t// Override measures, including those for title and legend\n\t\t// set config for legend and title\n\t}\n\n\tconfigure() {\n\t\tlet height = this.argHeight;\n\t\tthis.baseHeight = height;\n\t\tthis.height = height - getExtraHeight(this.measures);\n\n\t\t// Bind window events\n\t\tthis.boundDrawFn = () => this.draw(true);\n\t\tif (ResizeObserver) {\n\t\t\tthis.resizeObserver = new ResizeObserver(this.boundDrawFn);\n\t\t\tthis.resizeObserver.observe(this.parent);\n\t\t}\n\t\twindow.addEventListener('resize', this.boundDrawFn);\n\t\twindow.addEventListener('orientationchange', this.boundDrawFn);\n\t}\n\n\tdestroy() {\n\t\tif (this.resizeObserver) this.resizeObserver.disconnect();\n\t\twindow.removeEventListener('resize', this.boundDrawFn);\n\t\twindow.removeEventListener('orientationchange', this.boundDrawFn);\n\t}\n\n\t// Has to be called manually\n\tsetup() {\n\t\tthis.makeContainer();\n\t\tthis.updateWidth();\n\t\tthis.makeTooltip();\n\n\t\tthis.draw(false, true);\n\t}\n\n\tmakeContainer() {\n\t\t// Chart needs a dedicated parent element\n\t\tthis.parent.innerHTML = '';\n\n\t\tlet args = {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'chart-container'\n\t\t};\n\n\t\tif(this.independentWidth) {\n\t\t\targs.styles = { width: this.independentWidth + 'px' };\n\t\t}\n\n\t\tthis.container = $.create('div', args);\n\t}\n\n\tmakeTooltip() {\n\t\tthis.tip = new SvgTip({\n\t\t\tparent: this.container,\n\t\t\tcolors: this.colors\n\t\t});\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {}\n\n\tdraw(onlyWidthChange=false, init=false) {\n\t\tif (onlyWidthChange && isHidden(this.parent)) {\n\t\t\t// Don't update anything if the chart is hidden\n\t\t\treturn;\n\t\t}\n\t\tthis.updateWidth();\n\n\t\tthis.calc(onlyWidthChange);\n\t\tthis.makeChartArea();\n\t\tthis.setupComponents();\n\n\t\tthis.components.forEach(c => c.setup(this.drawArea));\n\t\t// this.components.forEach(c => c.make());\n\t\tthis.render(this.components, false);\n\n\t\tif(init) {\n\t\t\tthis.data = this.realData;\n\t\t\tsetTimeout(() => {this.update(this.data);}, this.initTimeout);\n\t\t}\n\n\t\tthis.renderLegend();\n\n\t\tthis.setupNavigation(init);\n\t}\n\n\tcalc() {} // builds state\n\n\tupdateWidth() {\n\t\tthis.baseWidth = getElementContentWidth(this.parent);\n\t\tthis.width = this.baseWidth - getExtraWidth(this.measures);\n\t}\n\n\tmakeChartArea() {\n\t\tif(this.svg) {\n\t\t\tthis.container.removeChild(this.svg);\n\t\t}\n\t\tlet m = this.measures;\n\n\t\tthis.svg = makeSVGContainer(\n\t\t\tthis.container,\n\t\t\t'frappe-chart chart',\n\t\t\tthis.baseWidth,\n\t\t\tthis.baseHeight\n\t\t);\n\t\tthis.svgDefs = makeSVGDefs(this.svg);\n\n\t\tif(this.title.length) {\n\t\t\tthis.titleEL = makeText(\n\t\t\t\t'title',\n\t\t\t\tm.margins.left,\n\t\t\t\tm.margins.top,\n\t\t\t\tthis.title,\n\t\t\t\t{\n\t\t\t\t\tfontSize: m.titleFontSize,\n\t\t\t\t\tfill: '#666666',\n\t\t\t\t\tdy: m.titleFontSize\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tlet top = getTopOffset(m);\n\t\tthis.drawArea = makeSVGGroup(\n\t\t\tthis.type + '-chart chart-draw-area',\n\t\t\t`translate(${getLeftOffset(m)}, ${top})`\n\t\t);\n\n\t\tif(this.config.showLegend) {\n\t\t\ttop += this.height + m.paddings.bottom;\n\t\t\tthis.legendArea = makeSVGGroup(\n\t\t\t\t'chart-legend',\n\t\t\t\t`translate(${getLeftOffset(m)}, ${top})`\n\t\t\t);\n\t\t}\n\n\t\tif(this.title.length) { this.svg.appendChild(this.titleEL); }\n\t\tthis.svg.appendChild(this.drawArea);\n\t\tif(this.config.showLegend) { this.svg.appendChild(this.legendArea); }\n\n\t\tthis.updateTipOffset(getLeftOffset(m), getTopOffset(m));\n\t}\n\n\tupdateTipOffset(x, y) {\n\t\tthis.tip.offset = {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tsetupComponents() { this.components = new Map(); }\n\n\tupdate(data) {\n\t\tif(!data) {\n\t\t\tconsole.error('No data to update.');\n\t\t}\n\t\tthis.data = this.prepareData(data);\n\t\tthis.calc(); // builds state\n\t\tthis.render(this.components, this.config.animate);\n\t\tthis.renderLegend();\n\t}\n\n\trender(components=this.components, animate=true) {\n\t\tif(this.config.isNavigable) {\n\t\t\t// Remove all existing overlays\n\t\t\tthis.overlays.map(o => o.parentNode.removeChild(o));\n\t\t\t// ref.parentNode.insertBefore(element, ref);\n\t\t}\n\t\tlet elementsToAnimate = [];\n\t\t// Can decouple to this.refreshComponents() first to save animation timeout\n\t\tcomponents.forEach(c => {\n\t\t\telementsToAnimate = elementsToAnimate.concat(c.update(animate));\n\t\t});\n\t\tif(elementsToAnimate.length > 0) {\n\t\t\trunSMILAnimation(this.container, this.svg, elementsToAnimate);\n\t\t\tsetTimeout(() => {\n\t\t\t\tcomponents.forEach(c => c.make());\n\t\t\t\tthis.updateNav();\n\t\t\t}, CHART_POST_ANIMATE_TIMEOUT);\n\t\t} else {\n\t\t\tcomponents.forEach(c => c.make());\n\t\t\tthis.updateNav();\n\t\t}\n\t}\n\n\tupdateNav() {\n\t\tif(this.config.isNavigable) {\n\t\t\tthis.makeOverlay();\n\t\t\tthis.bindUnits();\n\t\t}\n\t}\n\n\trenderLegend() {}\n\n\tsetupNavigation(init=false) {\n\t\tif(!this.config.isNavigable) return;\n\n\t\tif(init) {\n\t\t\tthis.bindOverlay();\n\n\t\t\tthis.keyActions = {\n\t\t\t\t'13': this.onEnterKey.bind(this),\n\t\t\t\t'37': this.onLeftArrow.bind(this),\n\t\t\t\t'38': this.onUpArrow.bind(this),\n\t\t\t\t'39': this.onRightArrow.bind(this),\n\t\t\t\t'40': this.onDownArrow.bind(this),\n\t\t\t};\n\n\t\t\tdocument.addEventListener('keydown', (e) => {\n\t\t\t\tif(isElementInViewport(this.container)) {\n\t\t\t\t\te = e || window.event;\n\t\t\t\t\tif(this.keyActions[e.keyCode]) {\n\t\t\t\t\t\tthis.keyActions[e.keyCode]();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tmakeOverlay() {}\n\tupdateOverlay() {}\n\tbindOverlay() {}\n\tbindUnits() {}\n\n\tonLeftArrow() {}\n\tonRightArrow() {}\n\tonUpArrow() {}\n\tonDownArrow() {}\n\tonEnterKey() {}\n\n\taddDataPoint() {}\n\tremoveDataPoint() {}\n\n\tgetDataPoint() {}\n\tsetCurrentDataPoint() {}\n\n\tupdateDataset() {}\n\n\texport() {\n\t\tlet chartSvg = prepareForExport(this.svg);\n\t\tdownloadFile(this.title || 'Chart', [chartSvg]);\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { truncateString } from '../utils/draw-utils';\nimport { legendDot } from '../utils/draw';\nimport { round } from '../utils/helpers';\nimport { getExtraWidth } from '../utils/constants';\n\nexport default class AggregationChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\n\t\tthis.config.formatTooltipY = (args.tooltipOptions || {}).formatTooltipY;\n\t\tthis.config.maxSlices = args.maxSlices || 20;\n\t\tthis.config.maxLegendPoints = args.maxLegendPoints || 20;\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\t\tlet maxSlices = this.config.maxSlices;\n\t\ts.sliceTotals = [];\n\n\t\tlet allTotals = this.data.labels.map((label, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, label];\n\t\t}).filter(d => { return d[0] >= 0; }); // keep only positive results\n\n\t\tlet totals = allTotals;\n\t\tif(allTotals.length > maxSlices) {\n\t\t\t// Prune and keep a grey area for rest as per maxSlices\n\t\t\tallTotals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = allTotals.slice(0, maxSlices-1);\n\t\t\tlet remaining = allTotals.slice(maxSlices-1);\n\n\t\t\tlet sumOfRemaining = 0;\n\t\t\tremaining.map(d => {sumOfRemaining += d[0];});\n\t\t\ttotals.push([sumOfRemaining, 'Rest']);\n\t\t\tthis.colors[maxSlices-1] = 'grey';\n\t\t}\n\n\t\ts.labels = [];\n\t\ttotals.map(d => {\n\t\t\ts.sliceTotals.push(round(d[0]));\n\t\t\ts.labels.push(d[1]);\n\t\t});\n\n\t\ts.grandTotal = s.sliceTotals.reduce((a, b) => a + b, 0);\n\n\t\tthis.center = {\n\t\t\tx: this.width / 2,\n\t\t\ty: this.height / 2\n\t\t};\n\t}\n\n\trenderLegend() {\n\t\tlet s = this.state;\n\t\tthis.legendArea.textContent = '';\n\t\tthis.legendTotals = s.sliceTotals.slice(0, this.config.maxLegendPoints);\n\n\t\tlet count = 0;\n\t\tlet y = 0;\n\t\tthis.legendTotals.map((d, i) => {\n\t\t\tlet barWidth = 150;\n\t\t\tlet divisor = Math.floor(\n\t\t\t\t(this.width - getExtraWidth(this.measures))/barWidth\n\t\t\t);\n\t\t\tif (this.legendTotals.length < divisor) {\n\t\t\t\tbarWidth = this.width/this.legendTotals.length;\n\t\t\t}\n\t\t\tif(count > divisor) {\n\t\t\t\tcount = 0;\n\t\t\t\ty += 20;\n\t\t\t}\n\t\t\tlet x = barWidth * count + 5;\n\t\t\tlet label = this.config.truncateLegends ? truncateString(s.labels[i], barWidth/10) : s.labels[i];\n\t\t\tlet formatted = this.config.formatTooltipY ? this.config.formatTooltipY(d) : d;\n\t\t\tlet dot = legendDot(\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t\t5,\n\t\t\t\tthis.colors[i],\n\t\t\t\t`${label}: ${formatted}`,\n\t\t\t\tfalse\n\t\t\t);\n\t\t\tthis.legendArea.appendChild(dot);\n\t\t\tcount++;\n\t\t});\n\t}\n}\n","import AggregationChart from './AggregationChart';\nimport { getOffset } from '../utils/dom';\nimport { getComponent } from '../objects/ChartComponents';\nimport { PERCENTAGE_BAR_DEFAULT_HEIGHT, PERCENTAGE_BAR_DEFAULT_DEPTH } from '../utils/constants';\n\nexport default class PercentageChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'percentage';\n\t\tthis.setup();\n\t}\n\n\tsetMeasures(options) {\n\t\tlet m = this.measures;\n\t\tthis.barOptions = options.barOptions || {};\n\n\t\tlet b = this.barOptions;\n\t\tb.height = b.height || PERCENTAGE_BAR_DEFAULT_HEIGHT;\n\t\tb.depth = b.depth || PERCENTAGE_BAR_DEFAULT_DEPTH;\n\n\t\tm.paddings.right = 30;\n\t\tm.legendHeight = 60;\n\t\tm.baseHeight = (b.height + b.depth * 0.5) * 8;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'percentageBars',\n\t\t\t\t{\n\t\t\t\t\tbarHeight: this.barOptions.height,\n\t\t\t\t\tbarDepth: this.barOptions.depth,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: s.xPositions,\n\t\t\t\t\t\twidths: s.widths,\n\t\t\t\t\t\tcolors: this.colors\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\n\t\ts.xPositions = [];\n\t\ts.widths = [];\n\n\t\tlet xPos = 0;\n\t\ts.sliceTotals.map((value) => {\n\t\t\tlet width = this.width * value / s.grandTotal;\n\t\t\ts.widths.push(width);\n\t\t\ts.xPositions.push(xPos);\n\t\t\txPos += width;\n\t\t});\n\t}\n\n\tmakeDataByIndex() { }\n\n\tbindTooltip() {\n\t\tlet s = this.state;\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tlet bars = this.components.get('percentageBars').store;\n\t\t\tlet bar = e.target;\n\t\t\tif(bars.includes(bar)) {\n\n\t\t\t\tlet i = bars.indexOf(bar);\n\t\t\t\tlet gOff = getOffset(this.container), pOff = getOffset(bar);\n\n\t\t\t\tlet x = pOff.left - gOff.left + parseInt(bar.getAttribute('width'))/2;\n\t\t\t\tlet y = pOff.top - gOff.top;\n\t\t\t\tlet title = (this.formattedLabels && this.formattedLabels.length>0\n\t\t\t\t\t? this.formattedLabels[i] : this.state.labels[i]) + ': ';\n\t\t\t\tlet fraction = s.sliceTotals[i]/s.grandTotal;\n\n\t\t\t\tthis.tip.setValues(x, y, {name: title, value: (fraction*100).toFixed(1) + \"%\"});\n\t\t\t\tthis.tip.showTip();\n\t\t\t}\n\t\t});\n\t}\n}\n","import AggregationChart from './AggregationChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset } from '../utils/dom';\nimport { getPositionByAngle } from '../utils/helpers';\nimport { makeArcPathStr, makeCircleStr } from '../utils/draw';\nimport { lightenDarkenColor } from '../utils/colors';\nimport { transform } from '../utils/animation';\nimport { FULL_ANGLE } from '../utils/constants';\n\nexport default class PieChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'pie';\n\t\tthis.initTimeout = 0;\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.config.startAngle = args.startAngle || 0;\n\n\t\tthis.clockWise = args.clockWise || false;\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\t\tthis.radius = (this.height > this.width ? this.center.x : this.center.y);\n\n\t\tconst { radius, clockWise } = this;\n\n\t\tconst prevSlicesProperties = s.slicesProperties || [];\n\t\ts.sliceStrings = [];\n\t\ts.slicesProperties = [];\n\t\tlet curAngle = 180 - this.config.startAngle;\n\t\ts.sliceTotals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / s.grandTotal) * FULL_ANGLE;\n\t\t\tconst largeArc = originDiffAngle > 180 ? 1: 0;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = getPositionByAngle(startAngle, radius);\n\t\t\tconst endPosition = getPositionByAngle(endAngle, radius);\n\n\t\t\tconst prevProperty = this.init && prevSlicesProperties[i];\n\n\t\t\tlet curStart,curEnd;\n\t\t\tif(this.init) {\n\t\t\t\tcurStart = prevProperty ? prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty ? prevProperty.endPosition : startPosition;\n\t\t\t} else {\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath =\n\t\t\t\toriginDiffAngle === 360\n\t\t\t\t\t? makeCircleStr(curStart, curEnd, this.center, this.radius, clockWise, largeArc)\n\t\t\t\t\t: makeArcPathStr(curStart, curEnd, this.center, this.radius, clockWise, largeArc);\n\n\t\t\ts.sliceStrings.push(curPath);\n\t\t\ts.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: s.grandTotal,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle: diffAngle\n\t\t\t});\n\n\t\t});\n\t\tthis.init = 0;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'pieSlices',\n\t\t\t\t{ },\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsliceStrings: s.sliceStrings,\n\t\t\t\t\t\tcolors: this.colors\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalTranslateByAngle(property){\n\t\tconst{radius,hoverRadio} = this;\n\t\tconst position = getPositionByAngle(property.startAngle+(property.angle / 2),radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\n\thoverSlice(path,i,flag,e){\n\t\tif(!path) return;\n\t\tconst color = this.colors[i];\n\t\tif(flag) {\n\t\t\ttransform(path, this.calTranslateByAngle(this.state.slicesProperties[i]));\n\t\t\tpath.style.fill = lightenDarkenColor(color, 50);\n\t\t\tlet g_off = getOffset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t\t? this.formatted_labels[i] : this.state.labels[i]) + ': ';\n\t\t\tlet percent = (this.state.sliceTotals[i] * 100 / this.state.grandTotal).toFixed(1);\n\t\t\tthis.tip.setValues(x, y, {name: title, value: percent + \"%\"});\n\t\t\tthis.tip.showTip();\n\t\t} else {\n\t\t\ttransform(path,'translate3d(0,0,0)');\n\t\t\tthis.tip.hideTip();\n\t\t\tpath.style.fill = color;\n\t\t}\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', this.mouseMove);\n\t\tthis.container.addEventListener('mouseleave', this.mouseLeave);\n\t}\n\n\tmouseMove(e){\n\t\tconst target = e.target;\n\t\tlet slices = this.components.get('pieSlices').store;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevAcitve = this.curActiveSlice;\n\t\tif(slices.includes(target)) {\n\t\t\tlet i = slices.indexOf(target);\n\t\t\tthis.hoverSlice(prevAcitve, prevIndex,false);\n\t\t\tthis.curActiveSlice = target;\n\t\t\tthis.curActiveSliceIndex = i;\n\t\t\tthis.hoverSlice(target, i, true, e);\n\t\t} else {\n\t\t\tthis.mouseLeave();\n\t\t}\n\t}\n\n\tmouseLeave(){\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { makeText, heatSquare } from '../utils/draw';\nimport { DAY_NAMES_SHORT, addDays, areInSameMonth, getLastDateInMonth, setDayToSunday, getYyyyMmDd, getWeeksBetween, getMonthName, clone,\n\tNO_OF_MILLIS, NO_OF_YEAR_MONTHS, NO_OF_DAYS_IN_WEEK } from '../utils/date-utils';\nimport { calcDistribution, getMaxCheckpoint } from '../utils/intervals';\nimport { getExtraHeight, getExtraWidth, HEATMAP_DISTRIBUTION_SIZE, HEATMAP_SQUARE_SIZE,\n\tHEATMAP_GUTTER_SIZE } from '../utils/constants';\n\nconst COL_WIDTH = HEATMAP_SQUARE_SIZE + HEATMAP_GUTTER_SIZE;\nconst ROW_HEIGHT = COL_WIDTH;\n// const DAY_INCR = 1;\n\nexport default class Heatmap extends BaseChart {\n\tconstructor(parent, options) {\n\t\tsuper(parent, options);\n\t\tthis.type = 'heatmap';\n\n\t\tthis.countLabel = options.countLabel || '';\n\n\t\tlet validStarts = ['Sunday', 'Monday'];\n\t\tlet startSubDomain = validStarts.includes(options.startSubDomain)\n\t\t\t? options.startSubDomain : 'Sunday';\n\t\tthis.startSubDomainIndex = validStarts.indexOf(startSubDomain);\n\n\t\tthis.setup();\n\t}\n\n\tsetMeasures(options) {\n\t\tlet m = this.measures;\n\t\tthis.discreteDomains = options.discreteDomains === 0 ? 0 : 1;\n\n\t\tm.paddings.top = ROW_HEIGHT * 3;\n\t\tm.paddings.bottom = 0;\n\t\tm.legendHeight = ROW_HEIGHT * 2;\n\t\tm.baseHeight = ROW_HEIGHT * NO_OF_DAYS_IN_WEEK\n\t\t\t+ getExtraHeight(m);\n\n\t\tlet d = this.data;\n\t\tlet spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\n\t\tthis.independentWidth = (getWeeksBetween(d.start, d.end)\n\t\t\t+ spacing) * COL_WIDTH + getExtraWidth(m);\n\t}\n\n\tupdateWidth() {\n\t\tlet spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\n\t\tlet noOfWeeks = this.state.noOfWeeks ? this.state.noOfWeeks : 52;\n\t\tthis.baseWidth = (noOfWeeks + spacing) * COL_WIDTH\n\t\t\t+ getExtraWidth(this.measures);\n\t}\n\n\tprepareData(data=this.data) {\n\t\tif(data.start && data.end && data.start > data.end) {\n\t\t\tthrow new Error('Start date cannot be greater than end date.');\n\t\t}\n\n\t\tif(!data.start) {\n\t\t\tdata.start = new Date();\n\t\t\tdata.start.setFullYear( data.start.getFullYear() - 1 );\n\t\t}\n\t\tif(!data.end) { data.end = new Date(); }\n\t\tdata.dataPoints = data.dataPoints || {};\n\n\t\tif(parseInt(Object.keys(data.dataPoints)[0]) > 100000) {\n\t\t\tlet points = {};\n\t\t\tObject.keys(data.dataPoints).forEach(timestampSec => {\n\t\t\t\tlet date = new Date(timestampSec * NO_OF_MILLIS);\n\t\t\t\tpoints[getYyyyMmDd(date)] = data.dataPoints[timestampSec];\n\t\t\t});\n\t\t\tdata.dataPoints = points;\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\n\t\ts.start = clone(this.data.start);\n\t\ts.end = clone(this.data.end);\n\n\t\ts.firstWeekStart = clone(s.start);\n\t\ts.noOfWeeks = getWeeksBetween(s.start, s.end);\n\t\ts.distribution = calcDistribution(\n\t\t\tObject.values(this.data.dataPoints), HEATMAP_DISTRIBUTION_SIZE);\n\n\t\ts.domainConfigs = this.getDomains();\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\t\tlet lessCol = this.discreteDomains ? 0 : 1;\n\n\t\tlet componentConfigs = s.domainConfigs.map((config, i) => [\n\t\t\t'heatDomain',\n\t\t\t{\n\t\t\t\tindex: config.index,\n\t\t\t\tcolWidth: COL_WIDTH,\n\t\t\t\trowHeight: ROW_HEIGHT,\n\t\t\t\tsquareSize: HEATMAP_SQUARE_SIZE,\n\t\t\t\tradius: this.rawChartArgs.radius || 0,\n\t\t\t\txTranslate: s.domainConfigs\n\t\t\t\t\t.filter((config, j) => j < i)\n\t\t\t\t\t.map(config => config.cols.length - lessCol)\n\t\t\t\t\t.reduce((a, b) => a + b, 0)\n\t\t\t\t\t* COL_WIDTH\n\t\t\t},\n\t\t\tfunction() {\n\t\t\t\treturn s.domainConfigs[i];\n\t\t\t}.bind(this)\n\n\t\t]);\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map((args, i) => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0] + '-' + i, component];\n\t\t\t})\n\t\t);\n\n\t\tlet y = 0;\n\t\tDAY_NAMES_SHORT.forEach((dayName, i) => {\n\t\t\tif([1, 3, 5].includes(i)) {\n\t\t\t\tlet dayText = makeText('subdomain-name', -COL_WIDTH/2, y, dayName,\n\t\t\t\t\t{\n\t\t\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE,\n\t\t\t\t\t\tdy: 8,\n\t\t\t\t\t\ttextAnchor: 'end'\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tthis.drawArea.appendChild(dayText);\n\t\t\t}\n\t\t\ty += ROW_HEIGHT;\n\t\t});\n\t}\n\n\tupdate(data) {\n\t\tif(!data) {\n\t\t\tconsole.error('No data to update.');\n\t\t}\n\n\t\tthis.data = this.prepareData(data);\n\t\tthis.draw();\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tthis.components.forEach(comp => {\n\t\t\t\tlet daySquares = comp.store;\n\t\t\t\tlet daySquare = e.target;\n\t\t\t\tif(daySquares.includes(daySquare)) {\n\n\t\t\t\t\tlet count = daySquare.getAttribute('data-value');\n\t\t\t\t\tlet dateParts = daySquare.getAttribute('data-date').split('-');\n\n\t\t\t\t\tlet month = getMonthName(parseInt(dateParts[1])-1, true);\n\n\t\t\t\t\tlet gOff = this.container.getBoundingClientRect(), pOff = daySquare.getBoundingClientRect();\n\n\t\t\t\t\tlet width = parseInt(e.target.getAttribute('width'));\n\t\t\t\t\tlet x = pOff.left - gOff.left + width/2;\n\t\t\t\t\tlet y = pOff.top - gOff.top;\n\t\t\t\t\tlet value = count + ' ' + this.countLabel;\n\t\t\t\t\tlet name = ' on ' + month + ' ' + dateParts[0] + ', ' + dateParts[2];\n\n\t\t\t\t\tthis.tip.setValues(x, y, {name: name, value: value, valueFirst: 1}, []);\n\t\t\t\t\tthis.tip.showTip();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\trenderLegend() {\n\t\tthis.legendArea.textContent = '';\n\t\tlet x = 0;\n\t\tlet y = ROW_HEIGHT;\n\t\tlet radius = this.rawChartArgs.radius || 0;\n\n\t\tlet lessText = makeText('subdomain-name', x, y, 'Less',\n\t\t\t{\n\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE + 1,\n\t\t\t\tdy: 9\n\t\t\t}\n\t\t);\n\t\tx = (COL_WIDTH * 2) + COL_WIDTH/2;\n\t\tthis.legendArea.appendChild(lessText);\n\n\t\tthis.colors.slice(0, HEATMAP_DISTRIBUTION_SIZE).map((color, i) => {\n\t\t\tconst square = heatSquare('heatmap-legend-unit', x + (COL_WIDTH + 3) * i,\n\t\t\t\ty, HEATMAP_SQUARE_SIZE, radius, color);\n\t\t\tthis.legendArea.appendChild(square);\n\t\t});\n\n\t\tlet moreTextX = x + HEATMAP_DISTRIBUTION_SIZE * (COL_WIDTH + 3) + COL_WIDTH/4;\n\t\tlet moreText = makeText('subdomain-name', moreTextX, y, 'More',\n\t\t\t{\n\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE + 1,\n\t\t\t\tdy: 9\n\t\t\t}\n\t\t);\n\t\tthis.legendArea.appendChild(moreText);\n\t}\n\n\tgetDomains() {\n\t\tlet s = this.state;\n\t\tconst [startMonth, startYear] = [s.start.getMonth(), s.start.getFullYear()];\n\t\tconst [endMonth, endYear] = [s.end.getMonth(), s.end.getFullYear()];\n\n\t\tconst noOfMonths = (endMonth - startMonth + 1) + (endYear - startYear) * 12;\n\n\t\tlet domainConfigs = [];\n\n\t\tlet startOfMonth = clone(s.start);\n\t\tfor(var i = 0; i < noOfMonths; i++) {\n\t\t\tlet endDate = s.end;\n\t\t\tif(!areInSameMonth(startOfMonth, s.end)) {\n\t\t\t\tlet [month, year] = [startOfMonth.getMonth(), startOfMonth.getFullYear()];\n\t\t\t\tendDate = getLastDateInMonth(month, year);\n\t\t\t}\n\t\t\tdomainConfigs.push(this.getDomainConfig(startOfMonth, endDate));\n\n\t\t\taddDays(endDate, 1);\n\t\t\tstartOfMonth = endDate;\n\t\t}\n\n\t\treturn domainConfigs;\n\t}\n\n\tgetDomainConfig(startDate, endDate='') {\n\t\tlet [month, year] = [startDate.getMonth(), startDate.getFullYear()];\n\t\tlet startOfWeek = setDayToSunday(startDate); // TODO: Monday as well\n\t\tendDate = clone(endDate) || getLastDateInMonth(month, year);\n\n\t\tlet domainConfig = {\n\t\t\tindex: month,\n\t\t\tcols: []\n\t\t};\n\n\t\taddDays(endDate, 1);\n\t\tlet noOfMonthWeeks = getWeeksBetween(startOfWeek, endDate);\n\n\t\tlet cols = [], col;\n\t\tfor(var i = 0; i < noOfMonthWeeks; i++) {\n\t\t\tcol = this.getCol(startOfWeek, month);\n\t\t\tcols.push(col);\n\n\t\t\tstartOfWeek = new Date(col[NO_OF_DAYS_IN_WEEK - 1].yyyyMmDd);\n\t\t\taddDays(startOfWeek, 1);\n\t\t}\n\n\t\tif(col[NO_OF_DAYS_IN_WEEK - 1].dataValue !== undefined) {\n\t\t\taddDays(startOfWeek, 1);\n\t\t\tcols.push(this.getCol(startOfWeek, month, true));\n\t\t}\n\n\t\tdomainConfig.cols = cols;\n\n\t\treturn domainConfig;\n\t}\n\n\tgetCol(startDate, month, empty = false) {\n\t\tlet s = this.state;\n\n\t\t// startDate is the start of week\n\t\tlet currentDate = clone(startDate);\n\t\tlet col = [];\n\n\t\tfor(var i = 0; i < NO_OF_DAYS_IN_WEEK; i++, addDays(currentDate, 1)) {\n\t\t\tlet config = {};\n\n\t\t\t// Non-generic adjustment for entire heatmap, needs state\n\t\t\tlet currentDateWithinData = currentDate >= s.start && currentDate <= s.end;\n\n\t\t\tif(empty || currentDate.getMonth() !== month || !currentDateWithinData) {\n\t\t\t\tconfig.yyyyMmDd = getYyyyMmDd(currentDate);\n\t\t\t} else {\n\t\t\t\tconfig = this.getSubDomainConfig(currentDate);\n\t\t\t}\n\t\t\tcol.push(config);\n\t\t}\n\n\t\treturn col;\n\t}\n\n\tgetSubDomainConfig(date) {\n\t\tlet yyyyMmDd = getYyyyMmDd(date);\n\t\tlet dataValue = this.data.dataPoints[yyyyMmDd];\n\t\tlet config = {\n\t\t\tyyyyMmDd: yyyyMmDd,\n\t\t\tdataValue: dataValue || 0,\n\t\t\tfill: this.colors[getMaxCheckpoint(dataValue, this.state.distribution)]\n\t\t};\n\t\treturn config;\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { dataPrep, zeroDataPrep, getShortenedLabels } from '../utils/axis-chart-utils';\nimport { AXIS_LEGEND_BAR_SIZE } from '../utils/constants';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset, fire } from '../utils/dom';\nimport { calcChartIntervals, getIntervalSize, getValueRange, getZeroIndex, scale, getClosestInArray } from '../utils/intervals';\nimport { floatTwo } from '../utils/helpers';\nimport { makeOverlay, updateOverlay, legendBar } from '../utils/draw';\nimport { getTopOffset, getLeftOffset, MIN_BAR_PERCENT_HEIGHT, BAR_CHART_SPACE_RATIO,\n\tLINE_CHART_DOT_SIZE } from '../utils/constants';\n\nexport default class AxisChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\n\t\tthis.barOptions = args.barOptions || {};\n\t\tthis.lineOptions = args.lineOptions || {};\n\n\t\tthis.type = args.type || 'line';\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tsetMeasures() {\n\t\tif(this.data.datasets.length <= 1) {\n\t\t\tthis.config.showLegend = 0;\n\t\t\tthis.measures.paddings.bottom = 30;\n\t\t}\n\t}\n\n\tconfigure(options) {\n        super.configure(options);\n        const { axisOptions = {} } = options;\n        const { xAxis, yAxis } = axisOptions || {};\n\n        options.tooltipOptions = options.tooltipOptions || {};\n\n        this.config.xAxisMode = xAxis ? xAxis.xAxisMode : axisOptions.xAxisMode || 'span';\n\n        // this will pass an array\n        // lets determine if we need two yAxis based on if there is length\n        // to the yAxis array\n        if (yAxis && yAxis.length) {\n            this.config.yAxisConfig = yAxis.map((item) => {\n                return {\n                    yAxisMode: item.yAxisMode,\n                    id: item.id,\n                    position: item.position,\n                    title: item.title\n                };\n            });\n        } else {\n            this.config.yAxisMode = axisOptions.yAxisMode || 'span';\n        }\n\n        this.config.xIsSeries = axisOptions.xIsSeries || 0;\n        this.config.shortenYAxisNumbers = axisOptions.shortenYAxisNumbers || 0;\n\n        this.config.formatTooltipX = options.tooltipOptions.formatTooltipX;\n        this.config.formatTooltipY = options.tooltipOptions.formatTooltipY;\n\n        this.config.valuesOverPoints = options.valuesOverPoints;\n\t}\n\n\tprepareData(data=this.data) {\n\t\treturn dataPrep(data, this.type);\n\t}\n\n\tprepareFirstData(data=this.data) {\n\t\treturn zeroDataPrep(data);\n\t}\n\n\tcalc(onlyWidthChange = false) {\n\t\tthis.calcXPositions();\n\t\tif(!onlyWidthChange) {\n\t\t\tthis.calcYAxisParameters(this.getAllYValues(), this.type === 'line');\n\t\t}\n\t\tthis.makeDataByIndex();\n\t}\n\n\tcalcXPositions() {\n\t\tlet s = this.state;\n\t\tlet labels = this.data.labels;\n\t\ts.datasetLength = labels.length;\n\n\t\ts.unitWidth = this.width/(s.datasetLength);\n\t\t// Default, as per bar, and mixed. Only line will be a special case\n\t\ts.xOffset = s.unitWidth/2;\n\n\t\t// // For a pure Line Chart\n\t\t// s.unitWidth = this.width/(s.datasetLength - 1);\n\t\t// s.xOffset = 0;\n\n\t\ts.xAxis = {\n\t\t\tlabels: labels,\n\t\t\tpositions: labels.map((d, i) =>\n\t\t\t\tfloatTwo(s.xOffset + i * s.unitWidth)\n\t\t\t)\n\t\t};\n\t}\n\n\n    calcYAxisParameters(dataValues, withMinimum = 'false') {\n        let yPts, scaleMultiplier, intervalHeight, zeroLine, positions;\n\n        // if we have an object we have multiple yAxisParameters.\n        if (dataValues instanceof Array) {\n            yPts = calcChartIntervals(dataValues, withMinimum);\n            scaleMultiplier = this.height / getValueRange(yPts);\n            intervalHeight = getIntervalSize(yPts) * scaleMultiplier;\n            zeroLine = this.height - getZeroIndex(yPts) * intervalHeight;\n            this.state.yAxis = {\n                labels: yPts,\n                positions: yPts.map((d) => zeroLine - d * scaleMultiplier),\n                scaleMultiplier: scaleMultiplier,\n                zeroLine: zeroLine\n            };\n        } else {\n            this.state.yAxis = [];\n            for (let key in dataValues) {\n                const dataValue = dataValues[key];\n                yPts = calcChartIntervals(dataValue, withMinimum);\n                scaleMultiplier = this.height / getValueRange(yPts);\n                intervalHeight = getIntervalSize(yPts) * scaleMultiplier;\n                zeroLine = this.height - getZeroIndex(yPts) * intervalHeight;\n                positions = yPts.map((d) => zeroLine - d * scaleMultiplier);\n\n                const yAxisConfigObject =\n                    this.config.yAxisConfig.find((item) => key === item.id) || [];\n                const yAxisAlignment = yAxisConfigObject\n                    ? yAxisConfigObject.position\n                    : 'right';\n\n                if (this.state.yAxis.length) {\n                    const yPtsArray = [];\n                    const firstArr = this.state.yAxis[0];\n                    // we need to loop through original positions.\n                    firstArr.positions.forEach((pos) => {\n                        yPtsArray.push(Math.ceil(pos / scaleMultiplier));\n                    });\n                    yPts = yPtsArray.reverse();\n                    zeroLine = this.height - getZeroIndex(yPts) * intervalHeight;\n                    positions = firstArr.positions;\n                }\n\n                this.state.yAxis.push({\n                    axisID: key || 'left-axis',\n                    labels: yPts,\n                    title: yAxisConfigObject.title,\n                    pos: yAxisAlignment,\n                    scaleMultiplier,\n                    zeroLine,\n                    positions\n                });\n            }\n        }\n\n        // Dependent if above changes\n        this.calcDatasetPoints();\n        this.calcYExtremes();\n        this.calcYRegions();\n    }\n\n    calcDatasetPoints() {\n        let s = this.state;\n        let scaleAll = (values, id) => {\n            return values.map((val) => {\n                let { yAxis } = s;\n\n                if (yAxis instanceof Array) {\n\t\t\t\t\tyAxis = yAxis.length > 1 ? yAxis.find((axis) => id === axis.axisID) : s.yAxis[0];\n                }\n\n                return scale(val, yAxis);\n            });\n        };\n\n        s.barChartIndex = 1;\n        s.datasets = this.data.datasets.map((d, i) => {\n            let values = d.values;\n            let cumulativeYs = d.cumulativeYs || [];\n\n            return {\n                name:\n                    d.name &&\n                    d.name.replace(/<|>|&/g, (char) =>\n                        char == '&' ? '&amp;' : char == '<' ? '&lt;' : '&gt;'\n                    ),\n                index: i,\n                barIndex: d.chartType === 'bar' ? s.barChartIndex++ : s.barChartIndex,\n                chartType: d.chartType,\n\n                values: values,\n                yPositions: scaleAll(values, d.axisID),\n                id: d.axisID,\n\n                cumulativeYs: cumulativeYs,\n                cumulativeYPos: scaleAll(cumulativeYs, d.axisID)\n            };\n        });\n    }\n\n\tcalcYExtremes() {\n\t\tlet s = this.state;\n\t\tif(this.barOptions.stacked) {\n\t\t\ts.yExtremes = s.datasets[s.datasets.length - 1].cumulativeYPos;\n\t\t\treturn;\n\t\t}\n\t\ts.yExtremes = new Array(s.datasetLength).fill(9999);\n\t\ts.datasets.map(d => {\n\t\t\td.yPositions.map((pos, j) => {\n\t\t\t\tif(pos < s.yExtremes[j]) {\n\t\t\t\t\ts.yExtremes[j] = pos;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tcalcYRegions() {\n\t\tlet s = this.state;\n\t\tif(this.data.yMarkers) {\n\t\t\tthis.state.yMarkers = this.data.yMarkers.map(d => {\n\t\t\t\td.position = scale(d.value, s.yAxis);\n\t\t\t\tif(!d.options) d.options = {};\n\t\t\t\t// if(!d.label.includes(':')) {\n\t\t\t\t// \td.label += ': ' + d.value;\n\t\t\t\t// }\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t\tif(this.data.yRegions) {\n\t\t\tthis.state.yRegions = this.data.yRegions.map(d => {\n\t\t\t\td.startPos = scale(d.start, s.yAxis);\n\t\t\t\td.endPos = scale(d.end, s.yAxis);\n\t\t\t\tif(!d.options) d.options = {};\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t}\n\n    getAllYValues() {\n        let key = 'values';\n        let multiAxis = this.config.yAxisConfig ? true : false;\n        let allValueLists = multiAxis ? {} : [];\n\n        let groupBy = (arr, property) => {\n            return arr.reduce((acc, cur) => {\n                acc[cur[property]] = [...(acc[cur[property]] || []), cur];\n                return acc;\n            }, {});\n        };\n\n        let generateCumulative = (arr) => {\n            let cumulative = new Array(this.state.datasetLength).fill(0);\n            arr.forEach((d, i) => {\n                let values = arr[i].values;\n                d[key] = cumulative = cumulative.map((c, i) => {\n                    return c + values[i];\n                });\n            });\n        };\n\n        if (this.barOptions.stacked) {\n            key = 'cumulativeYs';\n            // we need to filter out the different yAxis ID's here.\n            if (multiAxis) {\n                const groupedDataSets = groupBy(this.data.datasets, 'axisID');\n                // const dataSetsByAxis = this.data.dd\n                for (var axisID in groupedDataSets) {\n                    generateCumulative(groupedDataSets[axisID]);\n                }\n            } else {\n                generateCumulative(this.data.datasets);\n            }\n        }\n\n        // this is the trouble maker, we don't want to merge all\n        // datasets since we are trying to run two yAxis.\n        if (multiAxis) {\n            this.data.datasets.forEach((d) => {\n                // if the array exists already just push more data into it.\n                // otherwise create a new array into the object.\n                allValueLists[d.axisID || key]\n                    ? allValueLists[d.axisID || key].push(...d[key])\n                    : (allValueLists[d.axisID || key] = [...d[key]]);\n            });\n        } else {\n            allValueLists = this.data.datasets.map((d) => {\n                return d[key];\n            });\n        }\n\n        if (this.data.yMarkers && !multiAxis) {\n            allValueLists.push(this.data.yMarkers.map((d) => d.value));\n        }\n\n        if (this.data.yRegions && !multiAxis) {\n            this.data.yRegions.map((d) => {\n                allValueLists.push([d.end, d.start]);\n            });\n        }\n\n        return multiAxis ? allValueLists : [].concat(...allValueLists);\n    }\n\n\tsetupComponents() {\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'xAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.config.xAxisMode,\n\t\t\t\t\theight: this.height,\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\ts.xAxis.calcLabels = getShortenedLabels(this.width,\n\t\t\t\t\t\ts.xAxis.labels, this.config.xIsSeries);\n\n\t\t\t\t\treturn s.xAxis;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'yRegions',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yRegions;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\t\t];\n\n        // if we have multiple yAxisConfigs we need to update the yAxisDefault\n        // components to multiple yAxis components.\n        if (this.config.yAxisConfig && this.config.yAxisConfig.length) {\n            this.config.yAxisConfig.forEach((yAxis) => {\n                componentConfigs.push([\n                    'yAxis',\n                    {\n                        mode: this.config.yAxisMode,\n                        width: this.width,\n                        shortenNumbers: this.config.shortenYAxisNumbers,\n                        pos: yAxis.position || 'left'\n                    },\n                    function () {\n                        return this.state.yAxis;\n                    }.bind(this)\n                ]);\n            });\n        } else {\n            componentConfigs.push([\n                'yAxis',\n                {\n                    mode: this.config.yAxisMode,\n                    width: this.width,\n                    shortenNumbers: this.config.shortenYAxisNumbers\n                },\n                function () {\n                    return this.state.yAxis;\n                }.bind(this)\n            ]);\n        }\n\n\t\tlet barDatasets = this.state.datasets.filter(d => d.chartType === 'bar');\n\t\tlet lineDatasets = this.state.datasets.filter(d => d.chartType === 'line');\n\n\t\tlet barsConfigs = barDatasets.map(d => {\n            let index = d.index;\n            let barIndex = d.barIndex || index;\n\t\t\treturn [\n\t\t\t\t'barGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tstacked: this.barOptions.stacked,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\n\t\t\t\t\tminHeight: this.height * MIN_BAR_PERCENT_HEIGHT,\n\t\t\t\t},\n\t\t\t\tfunction() {\n                    let s = this.state;\n                    let { yAxis } = s;\n                    let d = s.datasets[index];\n                    let { id = 'left-axis' } = d;\n                    let stacked = this.barOptions.stacked;\n\n                    let spaceRatio = this.barOptions.spaceRatio || BAR_CHART_SPACE_RATIO;\n                    let barsWidth = s.unitWidth * (1 - spaceRatio);\n                    let barWidth = barsWidth / (stacked ? 1 : barDatasets.length);\n\n                    // if there are multiple yAxis we need to return the yAxis with the\n                    // proper ID.\n\t\t\t\t\tif (yAxis instanceof Array) {\n\t\t\t\t\t\t// if the person only configured one yAxis in the array return the first.\n\t\t\t\t\t\tyAxis = yAxis.length > 1 ? yAxis.find((axis) => id === axis.axisID) : s.yAxis[0];\n\t\t\t\t\t}\n\n\n                    let xPositions = s.xAxis.positions.map((x) => x - barsWidth / 2);\n\n                    if (!stacked) {\n                        xPositions = xPositions.map((p) => {\n                            return p + barWidth * barIndex - barWidth;\n                        });\n                    }\n\n                    let labels = new Array(s.datasetLength).fill('');\n                    if (this.config.valuesOverPoints) {\n                        if (stacked && d.index === s.datasets.length - 1) {\n                            labels = d.cumulativeYs;\n                        } else {\n                            labels = d.values;\n                        }\n                    }\n                    let offsets = new Array(s.datasetLength).fill(0);\n                    if (stacked) {\n                        offsets = d.yPositions.map((y, j) => y - d.cumulativeYPos[j]);\n                    }\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: xPositions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\t\t\t\t\t\toffsets: offsets,\n\t\t\t\t\t\t// values: d.values,\n\t\t\t\t\t\tlabels: labels,\n\n\t\t\t\t\t\tzeroLine: yAxis.zeroLine,\n\t\t\t\t\t\tbarsWidth: barsWidth,\n\t\t\t\t\t\tbarWidth: barWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n        let lineConfigs = lineDatasets.map((d) => {\n            let index = d.index;\n            return [\n                'lineGraph' + '-' + d.index,\n                {\n                    index: index,\n                    color: this.colors[index],\n                    svgDefs: this.svgDefs,\n                    heatline: this.lineOptions.heatline,\n                    regionFill: this.lineOptions.regionFill,\n                    spline: this.lineOptions.spline,\n                    hideDots: this.lineOptions.hideDots,\n                    hideLine: this.lineOptions.hideLine,\n\n                    // same for all datasets\n                    valuesOverPoints: this.config.valuesOverPoints\n                },\n                function () {\n                    let s = this.state;\n                    let d = s.datasets[index];\n\n                    // if we have more than one yindex lets map the values\n                    const yAxis = s.yAxis.length\n                        ? s.yAxis.find((axis) => d.id === axis.axisID) || s.yAxis[0]\n                        : s.yAxis;\n\n                    let minLine =\n                        yAxis.positions[0] < yAxis.zeroLine\n                            ? yAxis.positions[0]\n                            : yAxis.zeroLine;\n\n                    return {\n                        xPositions: s.xAxis.positions,\n                        yPositions: d.yPositions,\n\n                        values: d.values,\n\n                        zeroLine: minLine,\n                        radius: this.lineOptions.dotSize || LINE_CHART_DOT_SIZE\n                    };\n                }.bind(this)\n            ];\n        });\n\n\t\tlet markerConfigs = [\n\t\t\t[\n\t\t\t\t'yMarkers',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yMarkers;\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tcomponentConfigs = componentConfigs.concat(barsConfigs, lineConfigs, markerConfigs);\n\n\t\tlet optionals = ['yMarkers', 'yRegions'];\n\t\tthis.dataUnitComponents = [];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.filter(args => !optionals.includes(args[0]) || this.state[args[0]])\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\tif(args[0].includes('lineGraph') || args[0].includes('barGraph')) {\n\t\t\t\t\tthis.dataUnitComponents.push(component);\n\t\t\t\t}\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tmakeDataByIndex() {\n\t\tthis.dataByIndex = {};\n\n\t\tlet s = this.state;\n\t\tlet formatX = this.config.formatTooltipX;\n\t\tlet formatY = this.config.formatTooltipY;\n\t\tlet titles = s.xAxis.labels;\n\n\t\ttitles.map((label, index) => {\n\t\t\tlet values = this.state.datasets.map((set, i) => {\n\t\t\t\tlet value = set.values[index];\n\t\t\t\treturn {\n\t\t\t\t\ttitle: set.name,\n\t\t\t\t\tvalue: value,\n\t\t\t\t\tyPos: set.yPositions[index],\n\t\t\t\t\tcolor: this.colors[i],\n\t\t\t\t\tformatted: formatY ? formatY(value) : value,\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tthis.dataByIndex[index] = {\n\t\t\t\tlabel: label,\n\t\t\t\tformattedLabel: formatX ? formatX(label) : label,\n\t\t\t\txPos: s.xAxis.positions[index],\n\t\t\t\tvalues: values,\n\t\t\t\tyExtreme: s.yExtremes[index],\n\t\t\t};\n\t\t});\n\t}\n\n\tbindTooltip() {\n\t\t// NOTE: could be in tooltip itself, as it is a given functionality for its parent\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tlet m = this.measures;\n\t\t\tlet o = getOffset(this.container);\n\t\t\tlet relX = e.pageX - o.left - getLeftOffset(m);\n\t\t\tlet relY = e.pageY - o.top;\n\n\t\t\tif(relY < this.height + getTopOffset(m)\n\t\t\t\t&& relY >  getTopOffset(m)) {\n\t\t\t\tthis.mapTooltipXPosition(relX);\n\t\t\t} else {\n\t\t\t\tthis.tip.hideTip();\n\t\t\t}\n\t\t});\n\t}\n\n\tmapTooltipXPosition(relX) {\n\t\tlet s = this.state;\n\t\tif(!s.yExtremes) return;\n\n\t\tlet index = getClosestInArray(relX, s.xAxis.positions, true);\n\t\tif (index >= 0) {\n\t\t\tlet dbi = this.dataByIndex[index];\n\n\t\t\tthis.tip.setValues(\n\t\t\t\tdbi.xPos + this.tip.offset.x,\n\t\t\t\tdbi.yExtreme + this.tip.offset.y,\n\t\t\t\t{name: dbi.formattedLabel, value: ''},\n\t\t\t\tdbi.values,\n\t\t\t\tindex\n\t\t\t);\n\n\t\t\tthis.tip.showTip();\n\t\t}\n\t}\n\n\trenderLegend() {\n\t\tlet s = this.data;\n\t\tif(s.datasets.length > 1) {\n\t\t\tthis.legendArea.textContent = '';\n\t\t\ts.datasets.map((d, i) => {\n\t\t\t\tlet barWidth = AXIS_LEGEND_BAR_SIZE;\n\t\t\t\t// let rightEndPoint = this.baseWidth - this.measures.margins.left - this.measures.margins.right;\n\t\t\t\t// let multiplier = s.datasets.length - i;\n\t\t\t\tlet rect = legendBar(\n\t\t\t\t\t// rightEndPoint - multiplier * barWidth,\t// To right align\n\t\t\t\t\tbarWidth * i,\n\t\t\t\t\t'0',\n\t\t\t\t\tbarWidth,\n\t\t\t\t\tthis.colors[i],\n\t\t\t\t\td.name,\n\t\t\t\t\tthis.config.truncateLegends);\n\t\t\t\tthis.legendArea.appendChild(rect);\n\t\t\t});\n\t\t}\n\t}\n\n\n\n\t// Overlay\n\tmakeOverlay() {\n\t\tif(this.init) {\n\t\t\tthis.init = 0;\n\t\t\treturn;\n\t\t}\n\t\tif(this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\n\t\tthis.overlayGuides = this.dataUnitComponents.map(c => {\n\t\t\treturn {\n\t\t\t\ttype: c.unitType,\n\t\t\t\toverlay: undefined,\n\t\t\t\tunits: c.units,\n\t\t\t};\n\t\t});\n\n\t\tif(this.state.currentIndex === undefined) {\n\t\t\tthis.state.currentIndex = this.state.datasetLength - 1;\n\t\t}\n\n\t\t// Render overlays\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\n\t\t\td.overlay = makeOverlay[d.type](currentUnit);\n\t\t\tthis.drawArea.appendChild(d.overlay);\n\t\t});\n\t}\n\n\tupdateOverlayGuides() {\n\t\tif(this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\t}\n\n\tbindOverlay() {\n\t\tthis.parent.addEventListener('data-select', () => {\n\t\t\tthis.updateOverlay();\n\t\t});\n\t}\n\n\tbindUnits() {\n\t\tthis.dataUnitComponents.map(c => {\n\t\t\tc.units.map(unit => {\n\t\t\t\tunit.addEventListener('click', () => {\n\t\t\t\t\tlet index = unit.getAttribute('data-point-index');\n\t\t\t\t\tthis.setCurrentDataPoint(index);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\t// Note: Doesn't work as tooltip is absolutely positioned\n\t\tthis.tip.container.addEventListener('click', () => {\n\t\t\tlet index = this.tip.container.getAttribute('data-point-index');\n\t\t\tthis.setCurrentDataPoint(index);\n\t\t});\n\t}\n\n\tupdateOverlay() {\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\t\t\tupdateOverlay[d.type](currentUnit, d.overlay);\n\t\t});\n\t}\n\n\tonLeftArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex - 1);\n\t}\n\n\tonRightArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex + 1);\n\t}\n\n\tgetDataPoint(index=this.state.currentIndex) {\n\t\tlet s = this.state;\n\t\tlet data_point = {\n\t\t\tindex: index,\n\t\t\tlabel: s.xAxis.labels[index],\n\t\t\tvalues: s.datasets.map(d => d.values[index])\n\t\t};\n\t\treturn data_point;\n\t}\n\n\tsetCurrentDataPoint(index) {\n\t\tlet s = this.state;\n\t\tindex = parseInt(index);\n\t\tif(index < 0) index = 0;\n\t\tif(index >= s.xAxis.labels.length) index = s.xAxis.labels.length - 1;\n\t\tif(index === s.currentIndex) return;\n\t\ts.currentIndex = index;\n\t\tfire(this.parent, \"data-select\", this.getDataPoint());\n\t}\n\n\n\n\t// API\n\taddDataPoint(label, datasetValues, index=this.state.datasetLength) {\n\t\tsuper.addDataPoint(label, datasetValues, index);\n\t\tthis.data.labels.splice(index, 0, label);\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\td.values.splice(index, 0, datasetValues[i]);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tremoveDataPoint(index = this.state.datasetLength-1) {\n\t\tif (this.data.labels.length <= 1) {\n\t\t\treturn;\n\t\t}\n\t\tsuper.removeDataPoint(index);\n\t\tthis.data.labels.splice(index, 1);\n\t\tthis.data.datasets.map(d => {\n\t\t\td.values.splice(index, 1);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tupdateDataset(datasetValues, index=0) {\n\t\tthis.data.datasets[index].values = datasetValues;\n\t\tthis.update(this.data);\n\t}\n\t// addDataset(dataset, index) {}\n\t// removeDataset(index = 0) {}\n\n\tupdateDatasets(datasets) {\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\tif(datasets[i]) {\n\t\t\t\td.values = datasets[i];\n\t\t\t}\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\t// updateDataPoint(dataPoint, index = 0) {}\n\t// addDataPoint(dataPoint, index = 0) {}\n\t// removeDataPoint(index = 0) {}\n}\n","import AggregationChart from './AggregationChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset } from '../utils/dom';\nimport { getPositionByAngle } from '../utils/helpers';\nimport { makeArcStrokePathStr, makeStrokeCircleStr } from '../utils/draw';\nimport { lightenDarkenColor } from '../utils/colors';\nimport { transform } from '../utils/animation';\nimport { FULL_ANGLE } from '../utils/constants';\n\nexport default class DonutChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'donut';\n\t\tthis.initTimeout = 0;\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.config.startAngle = args.startAngle || 0;\n\n\t\tthis.clockWise = args.clockWise || false;\n\t\tthis.strokeWidth = args.strokeWidth || 30;\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\t\tthis.radius =\n\t\t\tthis.height > this.width\n\t\t\t\t? this.center.x - this.strokeWidth / 2\n\t\t\t\t: this.center.y - this.strokeWidth / 2;\n\n\t\tconst { radius, clockWise } = this;\n\n\t\tconst prevSlicesProperties = s.slicesProperties || [];\n\t\ts.sliceStrings = [];\n\t\ts.slicesProperties = [];\n\t\tlet curAngle = 180 - this.config.startAngle;\n\n\t\ts.sliceTotals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / s.grandTotal) * FULL_ANGLE;\n\t\t\tconst largeArc = originDiffAngle > 180 ? 1: 0;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = getPositionByAngle(startAngle, radius);\n\t\t\tconst endPosition = getPositionByAngle(endAngle, radius);\n\n\t\t\tconst prevProperty = this.init && prevSlicesProperties[i];\n\n\t\t\tlet curStart,curEnd;\n\t\t\tif(this.init) {\n\t\t\t\tcurStart = prevProperty ? prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty ? prevProperty.endPosition : startPosition;\n\t\t\t} else {\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath =\n\t\t\t\toriginDiffAngle === 360\n\t\t\t\t\t? makeStrokeCircleStr(curStart, curEnd, this.center, this.radius, this.clockWise, largeArc)\n\t\t\t\t\t: makeArcStrokePathStr(curStart, curEnd, this.center, this.radius, this.clockWise, largeArc);\n\n\t\t\ts.sliceStrings.push(curPath);\n\t\t\ts.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: s.grandTotal,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle: diffAngle\n\t\t\t});\n\n\t\t});\n\t\tthis.init = 0;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'donutSlices',\n\t\t\t\t{ },\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsliceStrings: s.sliceStrings,\n\t\t\t\t\t\tcolors: this.colors,\n\t\t\t\t\t\tstrokeWidth: this.strokeWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalTranslateByAngle(property){\n\t\tconst{ radius, hoverRadio } = this;\n\t\tconst position = getPositionByAngle(property.startAngle+(property.angle / 2),radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\n\thoverSlice(path,i,flag,e){\n\t\tif(!path) return;\n\t\tconst color = this.colors[i];\n\t\tif(flag) {\n\t\t\ttransform(path, this.calTranslateByAngle(this.state.slicesProperties[i]));\n\t\t\tpath.style.stroke = lightenDarkenColor(color, 50);\n\t\t\tlet g_off = getOffset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t\t? this.formatted_labels[i] : this.state.labels[i]) + ': ';\n\t\t\tlet percent = (this.state.sliceTotals[i] * 100 / this.state.grandTotal).toFixed(1);\n\t\t\tthis.tip.setValues(x, y, {name: title, value: percent + \"%\"});\n\t\t\tthis.tip.showTip();\n\t\t} else {\n\t\t\ttransform(path,'translate3d(0,0,0)');\n\t\t\tthis.tip.hideTip();\n\t\t\tpath.style.stroke = color;\n\t\t}\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', this.mouseMove);\n\t\tthis.container.addEventListener('mouseleave', this.mouseLeave);\n\t}\n\n\tmouseMove(e){\n\t\tconst target = e.target;\n\t\tlet slices = this.components.get('donutSlices').store;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevAcitve = this.curActiveSlice;\n\t\tif(slices.includes(target)) {\n\t\t\tlet i = slices.indexOf(target);\n\t\t\tthis.hoverSlice(prevAcitve, prevIndex,false);\n\t\t\tthis.curActiveSlice = target;\n\t\t\tthis.curActiveSliceIndex = i;\n\t\t\tthis.hoverSlice(target, i, true, e);\n\t\t} else {\n\t\t\tthis.mouseLeave();\n\t\t}\n\t}\n\n\tmouseLeave(){\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\n\t}\n}\n","import * as Charts from './chart';\n\nlet frappe     = { };\n\nfrappe.NAME    = 'Frappe Charts';\nfrappe.VERSION = '1.6.2';\n\nfrappe         = Object.assign({ }, frappe, Charts);\n\nexport default frappe;"],"names":["expr","con","document","querySelector","getOffset","element","rect","getBoundingClientRect","top","documentElement","scrollTop","body","left","scrollLeft","isHidden","el","offsetParent","isElementInViewport","bottom","window","innerHeight","clientHeight","right","innerWidth","clientWidth","getElementContentWidth","styles","getComputedStyle","padding","parseFloat","paddingLeft","paddingRight","fire","target","type","properties","evt","createEvent","initEvent","j","dispatchEvent","getTopOffset","m","titleHeight","margins","paddings","getLeftOffset","getExtraHeight","legendHeight","getExtraWidth","floatTwo","d","toFixed","fillArray","array","count","start","length","fillerArray","Array","Math","abs","fill","concat","getStringWidth","string","charWidth","getPositionByAngle","angle","radius","sin","ANGLE_RATIO","cos","isValidNumber","candidate","nonNegative","Number","isNaN","undefined","isFinite","round","deepClone","cloned","value","key","Date","getTime","isArray","getBarHeightAndYAttr","yTop","zeroLine","height","y","equilizeNoOfElements","array1","array2","extraCount","truncateString","txt","len","slice","shortenLargeNumber","label","number","p","floor","log10","l","shortened","pow","getSplineCurvePointsStr","xList","yList","points","i","push","line","pointA","pointB","lengthX","lengthY","sqrt","atan2","controlPoint","current","previous","next","reverse","o","PI","command","reduce","acc","point","a","cps","cpe","limitColor","r","lightenDarkenColor","color","amt","col","getColor","usePound","num","parseInt","b","g","toString","isValidColor","RGB_RE","test","$","createSVG","tag","createElementNS","val","appendChild","ref","parentNode","insertBefore","keys","map","prop","style","setAttribute","renderVerticalGradient","svgDefElem","gradientId","setGradientStop","gradElem","offset","opacity","makeSVGContainer","parent","className","width","makeSVGDefs","svgContainer","makeSVGGroup","transform","args","inside","makePath","pathStr","makeArcPathStr","startPosition","endPosition","center","clockWise","largeArc","arcStartX","x","arcStartY","arcEndX","arcEndY","makeCircleStr","midArc","makeArcStrokePathStr","makeStrokeCircleStr","makeGradient","lighter","gradientDef","opacities","percentageBar","depth","PERCENTAGE_BAR_DEFAULT_DEPTH","heatSquare","size","data","legendBar","LABEL_MAX_CHARS","text","FONT_SIZE","FONT_FILL","group","legendDot","makeText","content","options","fontSize","dy","textAnchor","makeVertLine","y1","y2","stroke","BASE_LINE_COLOR","LABEL_MARGIN","makeHoriLine","x1","x2","lineType","alignment","shortenNumbers","generateAxisLabel","title","position","rotation","yLine","pos","mode","AXIS_TICK_LENGTH","xLine","yMarker","labelPos","labelSvg","yRegion","region","datasetBar","index","meta","minHeight","datasetDot","dot","getPaths","pointsStr","join","spline","path","heatline","gradient_id","svgDefs","paths","regionFill","gradient_id_region","translate","unit","oldCoord","newCoord","duration","old","STD_EASING","translateVertLine","newX","oldX","MARKER_LINE_ANIM_DUR","translateHoriLine","newY","oldY","animateRegion","rectGroup","newY1","newY2","oldY2","newHeight","childNodes","stroke-dasharray","getAttribute","animateBar","bar","nodeName","UNIT_ANIM_DUR","split","animateDot","cx","cy","animatePath","newXList","newYList","pathComponents","animPath","PATH_ANIM_DUR","regStartPt","regEndPt","animRegion","animatePathStr","oldPath","animateSVGElement","props","dur","easingType","oldValues","animElement","cloneNode","newElement","attributeName","animateElement","currentValue","animAttr","EASING","webkitTransform","msTransform","mozTransform","oTransform","animateSVG","elements","newElements","animElements","replaceChild","animSvg","runSMILAnimation","svgElement","elementsToAnimate","animSvgElement","removeChild","REPLACE_ALL_NEW_DUR","downloadFile","filename","createElement","blob","Blob","url","URL","createObjectURL","href","download","click","revokeObjectURL","prepareForExport","svg","clone","classList","add","styleEl","create","CSSTEXT","firstChild","container","innerHTML","treatAsUtc","date","result","setMinutes","getMinutes","getTimezoneOffset","getYyyyMmDd","dd","getDate","mm","getMonth","getFullYear","getWeeksBetween","startDate","endDate","weekStartDate","setDayToSunday","ceil","getDaysBetween","NO_OF_DAYS_IN_WEEK","millisecondsPerDay","SEC_IN_DAY","NO_OF_MILLIS","areInSameMonth","getMonthName","short","monthName","MONTH_NAMES","getLastDateInMonth","month","year","newDate","day","getDay","addDays","numberOfDays","setDate","getComponent","name","constants","getData","Object","componentConfigs","filter","includes","k","config","assign","ChartComponent","normalize","mantissa","exponent","sig","exp","getChartRangeIntervals","max","min","upperBound","lowerBound","range","noOfParts","partSize","intervals","getChartIntervals","maxValue","minValue","normalMaxValue","normalMinValue","calcChartIntervals","values","getPositiveFirstIntervals","absMinValue","intervalSize","unshift","withMinimum","pseudoMaxValue","pseudoMinValue","getZeroIndex","yPts","interval","getIntervalSize","indexOf","orderedArray","getValueRange","scale","yAxis","scaleMultiplier","getClosestInArray","goal","arr","closest","prev","curr","calcDistribution","distributionSize","dataMaxValue","distributionStep","distribution","checkpoint","getMaxCheckpoint","dataPrep","labels","datasetLength","datasets","zeroArray","vals","chartType","AXIS_DATASET_CHART_TYPES","yRegions","end","zeroDataPrep","realData","zeroData","axisID","yMarkers","getShortenedLabels","chartWidth","isSeries","allowedSpace","allowedLetters","DEFAULT_CHAR_WIDTH","seriesMultiple","maxLabelLength","getChartByType","AxisChart","chartTypes","error","css","insertAt","head","getElementsByTagName","styleSheet","cssText","createTextNode","BASE_MEASURES","INIT_CHART_UPDATE_TIMEOUT","DEFAULT_CHART_COLORS","DEFAULT_COLORS","SvgTip","colors","titleName","titleValue","listValues","titleValueFirst","setup","makeTooltip","calcPosition","this","hideTip","dataPointList","addEventListener","set","_this2","formatted","li","offsetWidth","offsetHeight","maxLeft","pointer","pointerOffset","valueFirst","refresh","PRESET_COLOR_MAP","exec","c","ch","makeOverlay","transformValue","overlay","updateOverlay","attributes","attr","specified","nodeValue","BaseChart","HTMLElement","Error","rawChartArgs","prepareData","prepareFirstData","validateColors","isNavigable","animate","truncateLegends","measures","JSON","parse","stringify","setMeasures","showLegend","argHeight","baseHeight","state","initTimeout","overlays","configure","validColors","forEach","warn","boundDrawFn","_this","draw","ResizeObserver","resizeObserver","observe","disconnect","removeEventListener","makeContainer","updateWidth","independentWidth","tip","bindTooltip","onlyWidthChange","init","calc","makeChartArea","setupComponents","components","drawArea","render","update","renderLegend","setupNavigation","baseWidth","titleEL","titleFontSize","legendArea","updateTipOffset","Map","make","updateNav","bindUnits","bindOverlay","keyActions","onEnterKey","bind","onLeftArrow","onUpArrow","onRightArrow","onDownArrow","e","_this4","event","keyCode","chartSvg","AggregationChart","formatTooltipY","tooltipOptions","maxSlices","maxLegendPoints","s","sliceTotals","allTotals","total","totals","sort","sumOfRemaining","grandTotal","textContent","legendTotals","barWidth","divisor","_this3","DAY_NAMES_SHORT","layerClass","layerTransform","makeElements","animateElements","store","layer","oldData","sliceStrings","strokeWidth","transition","newData","xPositions","widths","barHeight","barDepth","item","positions","animateMultipleElements","newPos","newLabels","oldPos","oldLabels","calcLabels","_this5","_this6","newOptions","startPos","endPos","_this7","newStarts","oldStarts","colWidth","rowHeight","squareSize","xTranslate","serializedSubDomains","cols","week","weekNo","toUpperCase","yyyyMmDd","dataValue","square","unitType","units","yPositions","offsets","barsWidth","newXPos","newYPos","newOffsets","oldXPos","oldYPos","oldOffsets","hideLine","hideDots","valuesOverPoints","newValues","PercentageChart","barOptions","component","xPos","bars","get","gOff","pOff","formattedLabels","fraction","setValues","showTip","PieChart","mouseMove","mouseLeave","hoverRadio","startAngle","prevSlicesProperties","slicesProperties","curAngle","originDiffAngle","diffAngle","endAngle","prevProperty","curStart","curEnd","curPath","property","flag","calTranslateByAngle","g_off","pageX","pageY","formatted_labels","percent","slices","prevIndex","curActiveSliceIndex","prevAcitve","curActiveSlice","hoverSlice","Heatmap","countLabel","validStarts","startSubDomain","startSubDomainIndex","discreteDomains","ROW_HEIGHT","HEATMAP_SQUARE_SIZE","spacing","noOfWeeks","setFullYear","dataPoints","timestampSec","firstWeekStart","domainConfigs","getDomains","lessCol","dayName","dayText","daySquares","comp","daySquare","dateParts","lessText","COL_WIDTH","moreText","HEATMAP_DISTRIBUTION_SIZE","startMonth","startYear","noOfMonths","startOfMonth","getDomainConfig","startOfWeek","domainConfig","noOfMonthWeeks","getCol","empty","currentDate","currentDateWithinData","getSubDomainConfig","lineOptions","axisOptions","xAxis","xAxisMode","yAxisConfig","yAxisMode","id","xIsSeries","shortenYAxisNumbers","formatTooltipX","calcXPositions","calcYAxisParameters","getAllYValues","makeDataByIndex","unitWidth","xOffset","dataValues","intervalHeight","yAxisConfigObject","find","yAxisAlignment","yPtsArray","firstArr","calcDatasetPoints","calcYExtremes","calcYRegions","scaleAll","axis","barChartIndex","cumulativeYs","replace","char","stacked","yExtremes","cumulativeYPos","multiAxis","allValueLists","generateCumulative","cumulative","groupedDataSets","cur","barDatasets","lineDatasets","barsConfigs","barIndex","spaceRatio","lineConfigs","minLine","dotSize","markerConfigs","optionals","dataUnitComponents","dataByIndex","formatX","formatY","relX","relY","mapTooltipXPosition","dbi","yExtreme","formattedLabel","overlayGuides","currentIndex","currentUnit","_this8","setCurrentDataPoint","_this10","_this11","getDataPoint","datasetValues","splice","DonutChart","Chart","frappe","NAME","VERSION","Charts"],"mappings":"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"}