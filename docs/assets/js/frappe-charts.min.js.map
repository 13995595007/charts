{"version":3,"file":"frappe-charts.min.js","sources":["../../../src/js/utils/dom.js","../../../src/js/utils/helpers.js","../../../src/js/utils/draw-utils.js","../../../src/js/utils/animate.js","../../../src/js/utils/draw.js","../../../src/js/utils/colors.js","../../../src/js/config.js","../../../src/js/utils/animation.js","../../../src/js/charts/axis-chart-utils.js","../../../src/js/objects/ChartComponents.js","../../../src/js/objects/AxisChartControllers.js","../../../src/js/utils/intervals.js","../../../src/js/utils/date-utils.js","../../../src/js/chart.js","../../../src/js/objects/SvgTip.js","../../../src/js/charts/BaseChart.js","../../../src/js/utils/constants.js","../../../src/js/charts/AxisChart.js","../../../src/js/charts/ScatterChart.js","../../../src/js/charts/LineChart.js","../../../src/js/charts/MultiAxisChart.js","../../../src/js/charts/PercentageChart.js","../../../src/js/charts/PieChart.js","../../../src/js/charts/Heatmap.js"],"sourcesContent":["export function $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function findNodeIndex(node)\n{\n\tvar i = 0;\n\twhile (node.previousSibling) {\n\t\tnode = node.previousSibling;\n\t\ti++;\n\t}\n\treturn i;\n}\n\n$.create = (tag, o) => {\n\tvar element = document.createElement(tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (i in element ) {\n\t\t\telement[i] = val;\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(i, val);\n\t\t}\n\t}\n\n\treturn element;\n};\n\nexport function getOffset(element) {\n\tlet rect = element.getBoundingClientRect();\n\treturn {\n\t\t// https://stackoverflow.com/a/7436602/6495043\n\t\t// rect.top varies with scroll, so we add whatever has been\n\t\t// scrolled to it to get absolute distance from actual page top\n\t\ttop: rect.top + (document.documentElement.scrollTop || document.body.scrollTop),\n\t\tleft: rect.left + (document.documentElement.scrollLeft || document.body.scrollLeft)\n\t};\n}\n\nexport function isElementInViewport(el) {\n\t// Although straightforward: https://stackoverflow.com/a/7557433/6495043\n\tvar rect = el.getBoundingClientRect();\n\n\treturn (\n\t\trect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\n\t);\n}\n\nexport function getElementContentWidth(element) {\n\tvar styles = window.getComputedStyle(element);\n\tvar padding = parseFloat(styles.paddingLeft) +\n\t\tparseFloat(styles.paddingRight);\n\n\treturn element.clientWidth - padding;\n}\n\nexport function bind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function (event) {\n\t\t\t\telement.addEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function unbind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function(event) {\n\t\t\t\telement.removeEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function fire(target, type, properties) {\n\tvar evt = document.createEvent(\"HTMLEvents\");\n\n\tevt.initEvent(type, true, true );\n\n\tfor (var j in properties) {\n\t\tevt[j] = properties[j];\n\t}\n\n\treturn target.dispatchEvent(evt);\n}\n","/**\n * Returns the value of a number upto 2 decimal places.\n * @param {Number} d Any number\n */\nexport function floatTwo(d) {\n\treturn parseFloat(d.toFixed(2));\n}\n\n/**\n * Returns whether or not two given arrays are equal.\n * @param {Array} arr1 First array\n * @param {Array} arr2 Second array\n */\nexport function arraysEqual(arr1, arr2) {\n\tif(arr1.length !== arr2.length) return false;\n\tlet areEqual = true;\n\tarr1.map((d, i) => {\n\t\tif(arr2[i] !== d) areEqual = false;\n\t});\n\treturn areEqual;\n}\n\n/**\n * Shuffles array in place. ES6 version\n * @param {Array} array An array containing the items.\n */\nexport function shuffle(array) {\n\t// Awesomeness: https://bost.ocks.org/mike/shuffle/\n\t// https://stackoverflow.com/a/2450976/6495043\n\t// https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array?noredirect=1&lq=1\n\n\tfor (let i = array.length - 1; i > 0; i--) {\n\t\tlet j = Math.floor(Math.random() * (i + 1));\n\t\t[array[i], array[j]] = [array[j], array[i]];\n\t}\n\n\treturn array;\n}\n\n/**\n * Fill an array with extra points\n * @param {Array} array Array\n * @param {Number} count number of filler elements\n * @param {Object} element element to fill with\n * @param {Boolean} start fill at start?\n */\nexport function fillArray(array, count, element, start=false) {\n\tif(!element) {\n\t\telement = start ? array[0] : array[array.length - 1];\n\t}\n\tlet fillerArray = new Array(Math.abs(count)).fill(element);\n\tarray = start ? fillerArray.concat(array) : array.concat(fillerArray);\n\treturn array;\n}\n\n/**\n * Returns pixel width of string.\n * @param {String} string\n * @param {Number} charWidth Width of single char in pixels\n */\nexport function getStringWidth(string, charWidth) {\n\treturn (string+\"\").length * charWidth;\n}\n\n\n\nfunction observe(obj, componentNames) {\n\tlet components = this.components.get(name);\n\n\tfn = function() {\n\t\tcomponents.map();\n\t}\n\tbindChange(obj, fn)\n}\n\n// observe(s.yAxis, ['yAxis', 'barGraph'])\n\nexport function bindChange(obj, fn) {\n\tvar proxied = new Proxy(obj, {\n\t\tset: function(target, prop, value) {\n\t\t\tfn();\n\t\t\treturn Reflect.set(target, prop, value);\n\t\t}\n\t});\n\n\t// proxied.bar = 2;\n\t// ==> {type: 'set', target: <obj>, prop: 'bar', value: 2}\n}\n","import { fillArray } from './helpers';\n\nexport function getBarHeightAndYAttr(yTop, zeroLine) {\n\tlet height, y;\n\tif (yTop <= zeroLine) {\n\t\theight = zeroLine - yTop;\n\t\ty = yTop;\n\n\t\t// In case of invisible bars\n\t\tif(height === 0) {\n\t\t\theight = totalHeight * MIN_BAR_PERCENT_HEIGHT;\n\t\t\ty -= height;\n\t\t}\n\t} else {\n\t\theight = yTop - zeroLine;\n\t\ty = zeroLine;\n\t}\n\n\treturn [height, y];\n}\n\nexport function equilizeNoOfElements(array1, array2,\n\textra_count=array2.length - array1.length) {\n\n\tif(extra_count > 0) {\n\t\tarray1 = fillArray(array1, extra_count);\n\t} else {\n\t\tarray2 = fillArray(array2, extra_count);\n\t}\n\treturn [array1, array2];\n}\n\n// let char_width = 8;\n// let allowed_space = avgUnitWidth * 1.5;\n// let allowed_letters = allowed_space / 8;\n\n// return values.map((value, i) => {\n// \tlet space_taken = getStringWidth(value, char_width) + 2;\n// \tif(space_taken > allowed_space) {\n// \t\tif(isSeries) {\n// \t\t\t// Skip some axis lines if X axis is a series\n// \t\t\tlet skips = 1;\n// \t\t\twhile((space_taken/skips)*2 > allowed_space) {\n// \t\t\t\tskips++;\n// \t\t\t}\n// \t\t\tif(i % skips !== 0) {\n// \t\t\t\treturn;\n// \t\t\t}\n// \t\t} else {\n// \t\t\tvalue = value.slice(0, allowed_letters-3) + \" ...\";\n// \t\t}\n// \t}\n","import { getBarHeightAndYAttr } from './draw-utils';\n\nexport const UNIT_ANIM_DUR = 350;\nexport const PATH_ANIM_DUR = 350;\nexport const MARKER_LINE_ANIM_DUR = UNIT_ANIM_DUR;\nexport const REPLACE_ALL_NEW_DUR = 250;\n\nexport const STD_EASING = 'easein';\n\nexport function translate(unit, oldCoord, newCoord, duration) {\n\treturn [\n\t\tunit,\n\t\t{transform: newCoord.join(', ')},\n\t\tduration,\n\t\tSTD_EASING,\n\t\t\"translate\",\n\t\t{transform: oldCoord.join(', ')}\n\t];\n}\n\nexport function translateVertLine(xLine, newX, oldX) {\n\treturn translate(xLine, [oldX, 0], [newX, 0], MARKER_LINE_ANIM_DUR);\n}\n\nexport function translateHoriLine(yLine, newY, oldY) {\n\treturn translate(yLine, [0, oldY], [0, newY], MARKER_LINE_ANIM_DUR);\n}\n\nexport function animateRegion(rectGroup, newY1, newY2, oldY2) {\n\tlet newHeight = newY1 - newY2;\n\tlet rect = rectGroup.childNodes[0];\n\tlet width = rect.getAttribute(\"width\");\n\tlet rectAnim = [\n\t\trect,\n\t\t{ height: newHeight, 'stroke-dasharray': `${width}, ${newHeight}` },\n\t\tMARKER_LINE_ANIM_DUR,\n\t\tSTD_EASING\n\t]\n\n\tlet groupAnim = translate(rectGroup, [0, oldY2], [0, newY2], MARKER_LINE_ANIM_DUR);\n\treturn [rectAnim, groupAnim];\n}\n\nexport var Animator = (function() {\n\tvar Animator = function(totalHeight, totalWidth, zeroLine, avgUnitWidth) {\n\t\t// constants\n\t\tthis.totalHeight = totalHeight;\n\t\tthis.totalWidth = totalWidth;\n\n\t\t// changeables\n\t\tthis.avgUnitWidth = avgUnitWidth;\n\t\tthis.zeroLine = zeroLine;\n\t};\n\n\tAnimator.prototype = {\n\t\tbar: function(barObj, x, yTop, index, noOfDatasets) {\n\t\t\tlet start = x - this.avgUnitWidth/4;\n\t\t\tlet width = (this.avgUnitWidth/2)/noOfDatasets;\n\t\t\tlet [height, y] = getBarHeightAndYAttr(yTop, this.zeroLine, this.totalHeight);\n\n\t\t\tx = start + (width * index);\n\n\t\t\treturn [barObj, {width: width, height: height, x: x, y: y}, UNIT_ANIM_DUR, STD_EASING];\n\t\t\t// bar.animate({height: args.newHeight, y: yTop}, UNIT_ANIM_DUR, mina.easein);\n\t\t},\n\n\t\tdot: function(dotObj, x, yTop) {\n\t\t\treturn [dotObj, {cx: x, cy: yTop}, UNIT_ANIM_DUR, STD_EASING];\n\t\t\t// dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\n\t\t},\n\n\t\tpath: function(d, pathStr) {\n\t\t\tlet pathComponents = [];\n\t\t\tconst animPath = [{unit: d.path, object: d, key: 'path'}, {d:\"M\"+pathStr}, PATH_ANIM_DUR, STD_EASING];\n\t\t\tpathComponents.push(animPath);\n\n\t\t\tif(d.regionPath) {\n\t\t\t\tlet regStartPt = `0,${this.zeroLine}L`;\n\t\t\t\tlet regEndPt = `L${this.totalWidth}, ${this.zeroLine}`;\n\n\t\t\t\tconst animRegion = [\n\t\t\t\t\t{unit: d.regionPath, object: d, key: 'regionPath'},\n\t\t\t\t\t{d:\"M\" + regStartPt + pathStr + regEndPt},\n\t\t\t\t\tPATH_ANIM_DUR,\n\t\t\t\t\tSTD_EASING\n\t\t\t\t];\n\t\t\t\tpathComponents.push(animRegion);\n\t\t\t}\n\n\t\t\treturn pathComponents;\n\t\t}\n\t};\n\n\treturn Animator;\n})();\n\n\n","import { getBarHeightAndYAttr } from './draw-utils';\nimport { getStringWidth } from './helpers';\nimport { STD_EASING, UNIT_ANIM_DUR, MARKER_LINE_ANIM_DUR, PATH_ANIM_DUR } from './animate';\n\n/*\n\n<filter id=\"glow\" x=\"-10%\" y=\"-10%\" width=\"120%\" height=\"120%\">\n\t<feGaussianBlur stdDeviation=\"0.5 0.5\" result=\"glow\"></feGaussianBlur>\n\t<feMerge>\n\t\t<feMergeNode in=\"glow\"></feMergeNode>\n\t\t<feMergeNode in=\"glow\"></feMergeNode>\n\t\t<feMergeNode in=\"glow\"></feMergeNode>\n\t</feMerge>\n</filter>\n\n    filter: url(#glow);\n    fill: #fff;\n\n*/\n\nconst AXIS_TICK_LENGTH = 6;\nconst LABEL_MARGIN = 4;\nexport const FONT_SIZE = 10;\nconst BASE_LINE_COLOR = '#dadada';\nconst BASE_BG_COLOR = '#F7FAFC';\n\nfunction $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function createSVG(tag, o) {\n\tvar element = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif(i === \"className\") { i = \"class\"; }\n\t\t\tif(i === \"innerHTML\") {\n\t\t\t\telement['textContent'] = val;\n\t\t\t} else {\n\t\t\t\telement.setAttribute(i, val);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn element;\n}\n\nfunction renderVerticalGradient(svgDefElem, gradientId) {\n\treturn createSVG('linearGradient', {\n\t\tinside: svgDefElem,\n\t\tid: gradientId,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: 0,\n\t\ty2: 1\n\t});\n}\n\nfunction setGradientStop(gradElem, offset, color, opacity) {\n\treturn createSVG('stop', {\n\t\t'inside': gradElem,\n\t\t'style': `stop-color: ${color}`,\n\t\t'offset': offset,\n\t\t'stop-opacity': opacity\n\t});\n}\n\nexport function makeSVGContainer(parent, className, width, height) {\n\treturn createSVG('svg', {\n\t\tclassName: className,\n\t\tinside: parent,\n\t\twidth: width,\n\t\theight: height\n\t});\n}\n\nexport function makeSVGDefs(svgContainer) {\n\treturn createSVG('defs', {\n\t\tinside: svgContainer,\n\t});\n}\n\nexport function makeSVGGroup(parent, className, transform='') {\n\treturn createSVG('g', {\n\t\tclassName: className,\n\t\tinside: parent,\n\t\ttransform: transform\n\t});\n}\n\nexport function wrapInSVGGroup(elements, className='') {\n\tlet g = createSVG('g', {\n\t\tclassName: className\n\t});\n\telements.forEach(e => g.appendChild(e));\n\treturn g;\n}\n\nexport function makePath(pathStr, className='', stroke='none', fill='none') {\n\treturn createSVG('path', {\n\t\tclassName: className,\n\t\td: pathStr,\n\t\tstyles: {\n\t\t\tstroke: stroke,\n\t\t\tfill: fill\n\t\t}\n\t});\n}\n\nexport function makeGradient(svgDefElem, color, lighter = false) {\n\tlet gradientId ='path-fill-gradient' + '-' + color;\n\tlet gradientDef = renderVerticalGradient(svgDefElem, gradientId);\n\tlet opacities = [1, 0.6, 0.2];\n\tif(lighter) {\n\t\topacities = [0.4, 0.2, 0];\n\t}\n\n\tsetGradientStop(gradientDef, \"0%\", color, opacities[0]);\n\tsetGradientStop(gradientDef, \"50%\", color, opacities[1]);\n\tsetGradientStop(gradientDef, \"100%\", color, opacities[2]);\n\n\treturn gradientId;\n}\n\nexport function makeHeatSquare(className, x, y, size, fill='none', data={}) {\n\tlet args = {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: size,\n\t\theight: size,\n\t\tfill: 1\n\t};\n\n\tObject.keys(data).map(key => {\n\t\targs[key] = data[key];\n\t});\n\n\treturn createSVG(\"rect\", args);\n}\n\nexport function makeText(className, x, y, content) {\n\treturn createSVG('text', {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\tdy: (FONT_SIZE / 2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\tinnerHTML: content\n\t});\n}\n\nfunction makeVertLine(x, label, y1, y2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tlet l = createSVG('line', {\n\t\tclassName: 'line-vertical ' + options.className,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: y1,\n\t\ty2: y2,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: 0,\n\t\ty: y1 > y2 ? y1 + LABEL_MARGIN : y1 - LABEL_MARGIN - FONT_SIZE,\n\t\tdy: FONT_SIZE + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'middle',\n\t\tinnerHTML: label\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(${ x }, 0)`\n\t});\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nfunction makeHoriLine(y, label, x1, x2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.lineType) options.lineType = '';\n\tlet className = 'line-horizontal ' + options.className +\n\t\t(options.lineType === \"dashed\" ? \"dashed\": \"\");\n\n\tlet l = createSVG('line', {\n\t\tclassName: className,\n\t\tx1: x1,\n\t\tx2: x2,\n\t\ty1: 0,\n\t\ty2: 0,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: x1 < x2 ? x1 - LABEL_MARGIN : x1 + LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / 2 - 2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': x1 < x2 ? 'end' : 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(0, ${y})`,\n\t\t'stroke-opacity': 1\n\t});\n\n\tif(text === 0 || text === '0') {\n\t\tline.style.stroke = \"rgba(27, 31, 35, 0.6)\";\n\t}\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nexport function yLine(y, label, width, options={}) {\n\tif(!options.pos) options.pos = 'left';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\tlet x1 = -1 * AXIS_TICK_LENGTH;\n\tlet x2 = options.mode === 'span' ? width + AXIS_TICK_LENGTH : 0;\n\n\tif(options.mode === 'tick' && options.pos === 'right') {\n\t\tx1 = width + AXIS_TICK_LENGTH\n\t\tx2 = width;\n\t}\n\n\tlet offset = options.pos === 'left' ? -1 * options.offset : options.offset;\n\n\tx1 += options.offset;\n\tx2 += options.offset;\n\n\treturn makeHoriLine(y, label, x1, x2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType\n\t});\n}\n\nexport function xLine(x, label, height, options={}) {\n\tif(!options.pos) options.pos = 'bottom';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\t// Draw X axis line in span/tick mode with optional label\n\t//                        \ty2(span)\n\t// \t\t\t\t\t\t|\n\t// \t\t\t\t\t\t|\n\t//\t\t\t\tx line\t|\n\t//\t\t\t\t\t\t|\n\t// \t\t\t\t\t   \t|\n\t// ---------------------+-- y2(tick)\n\t//\t\t\t\t\t\t|\n\t//\t\t\t\t\t\t\ty1\n\n\tlet y1 = height + AXIS_TICK_LENGTH;\n\tlet y2 = options.mode === 'span' ? -1 * AXIS_TICK_LENGTH : height;\n\n\tif(options.mode === 'tick' && options.pos === 'top') {\n\t\t// top axis ticks\n\t\ty1 = -1 * AXIS_TICK_LENGTH;\n\t\ty2 = 0;\n\t}\n\n\treturn makeVertLine(x, label, y1, y2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType\n\t});\n}\n\nexport function yMarker(y, label, width, options={}) {\n\t// console.log(y - FONT_SIZE - 2, );\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: width - getStringWidth(label, 5) - LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = makeHoriLine(y, '', 0, width, {\n\t\tstroke: options.stroke || BASE_LINE_COLOR,\n\t\tclassName: options.className || '',\n\t\tlineType: options.lineType\n\t});\n\n\tline.appendChild(labelSvg);\n\n\treturn line;\n}\n\nexport function yRegion(y1, y2, width, label) {\n\t// return a group\n\tlet height = y1 - y2;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`, // remove class\n\t\tstyles: {\n\t\t\tfill: `rgba(228, 234, 239, 0.49)`,\n\t\t\tstroke: BASE_LINE_COLOR,\n\t\t\t'stroke-dasharray': `${width}, ${height}`\n\t\t},\n\t\t// 'data-point-index': index,\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: width,\n\t\theight: height\n\t});\n\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: width - getStringWidth(label, 4.5) - LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet region = createSVG('g', {\n\t\ttransform: `translate(0, ${y2})`\n\t});\n\n\tregion.appendChild(rect);\n\tregion.appendChild(labelSvg);\n\n\treturn region;\n}\n\nexport class AxisChartRenderer {\n\tconstructor(state) {\n\t\tthis.refreshState(state);\n\t}\n\n\trefreshState(state) {\n\t\tthis.totalHeight = state.totalHeight;\n\t\tthis.totalWidth = state.totalWidth;\n\t\tthis.zeroLine = state.zeroLine;\n\t\tthis.unitWidth = state.unitWidth;\n\t\tthis.xAxisMode = state.xAxisMode;\n\t\tthis.yAxisMode = state.yAxisMode;\n\t}\n\n\tsetZeroline(zeroLine) {\n\t\tthis.zeroLine = zeroLine;\n\t}\n\n\txMarker() {}\n\n\n\txRegion() {\n\t\treturn createSVG('rect', {\n\t\t\tclassName: `bar mini`, // remove class\n\t\t\tstyle: `fill: rgba(228, 234, 239, 0.49)`,\n\t\t\t// 'data-point-index': index,\n\t\t\tx: 0,\n\t\t\ty: y2,\n\t\t\twidth: this.totalWidth,\n\t\t\theight: y1 - y2\n\t\t});\n\n\t\treturn region;\n\t}\n\n\tanimatebar(bar, x, yTop, index, noOfDatasets) {\n\t\tlet start = x - this.avgUnitWidth/4;\n\t\tlet width = (this.avgUnitWidth/2)/noOfDatasets;\n\t\tlet [height, y] = getBarHeightAndYAttr(yTop, this.zeroLine, this.totalHeight);\n\n\t\tx = start + (width * index);\n\n\t\treturn [bar, {width: width, height: height, x: x, y: y}, UNIT_ANIM_DUR, STD_EASING];\n\t\t// bar.animate({height: args.newHeight, y: yTop}, UNIT_ANIM_DUR, mina.easein);\n\t}\n\n\tanimatedot(dot, x, yTop) {\n\t\treturn [dot, {cx: x, cy: yTop}, UNIT_ANIM_DUR, STD_EASING];\n\t\t// dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\n\t}\n\n\tanimatepath(paths, pathStr) {\n\t\tlet pathComponents = [];\n\t\tconst animPath = [paths[0], {d:\"M\"+pathStr}, PATH_ANIM_DUR, STD_EASING];\n\t\tpathComponents.push(animPath);\n\n\t\tif(paths[1]) {\n\t\t\tlet regStartPt = `0,${this.zeroLine}L`;\n\t\t\tlet regEndPt = `L${this.totalWidth}, ${this.zeroLine}`;\n\n\t\t\tconst animRegion = [\n\t\t\t\tpaths[1],\n\t\t\t\t{d:\"M\" + regStartPt + pathStr + regEndPt},\n\t\t\t\tPATH_ANIM_DUR,\n\t\t\t\tSTD_EASING\n\t\t\t];\n\t\t\tpathComponents.push(animRegion);\n\t\t}\n\n\t\treturn pathComponents;\n\t}\n}\n","const PRESET_COLOR_MAP = {\n\t'light-blue': '#7cd6fd',\n\t'blue': '#5e64ff',\n\t'violet': '#743ee2',\n\t'red': '#ff5858',\n\t'orange': '#ffa00a',\n\t'yellow': '#feef72',\n\t'green': '#28a745',\n\t'light-green': '#98d85b',\n\t'purple': '#b554ff',\n\t'magenta': '#ffa3ef',\n\t'black': '#36114C',\n\t'grey': '#bdd3e6',\n\t'light-grey': '#f0f4f7',\n\t'dark-grey': '#b8c2cc'\n};\n\nexport const DEFAULT_COLORS = ['light-blue', 'blue', 'violet', 'red', 'orange',\n\t'yellow', 'green', 'light-green', 'purple', 'magenta'];\n\nfunction limitColor(r){\n\tif (r > 255) return 255;\n\telse if (r < 0) return 0;\n\treturn r;\n}\n\nexport function lightenDarkenColor(color, amt) {\n\tlet col = getColor(color);\n\tlet usePound = false;\n\tif (col[0] == \"#\") {\n\t\tcol = col.slice(1);\n\t\tusePound = true;\n\t}\n\tlet num = parseInt(col,16);\n\tlet r = limitColor((num >> 16) + amt);\n\tlet b = limitColor(((num >> 8) & 0x00FF) + amt);\n\tlet g = limitColor((num & 0x0000FF) + amt);\n\treturn (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\nexport function isValidColor(string) {\n\t// https://stackoverflow.com/a/8027444/6495043\n\treturn /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(string);\n}\n\nexport const getColor = (color) => {\n\treturn PRESET_COLOR_MAP[color] || color;\n};\n","import Chart from './chart';\n\nconst ALL_CHART_TYPES = ['line', 'scatter', 'bar', 'percentage', 'heatmap', 'pie'];\n\nconst COMPATIBLE_CHARTS = {\n\tbar: ['line', 'scatter', 'percentage', 'pie'],\n\tline: ['scatter', 'bar', 'percentage', 'pie'],\n\tpie: ['line', 'scatter', 'percentage', 'bar'],\n\tscatter: ['line', 'bar', 'percentage', 'pie'],\n\tpercentage: ['bar', 'line', 'scatter', 'pie'],\n\theatmap: []\n};\n\n// Needs structure as per only labels/datasets\nconst COLOR_COMPATIBLE_CHARTS = {\n\tbar: ['line', 'scatter'],\n\tline: ['scatter', 'bar'],\n\tpie: ['percentage'],\n\tscatter: ['line', 'bar'],\n\tpercentage: ['pie'],\n\theatmap: []\n};\n\nexport function getDifferentChart(type, current_type, args) {\n\tif(type === current_type) return;\n\n\tif(!ALL_CHART_TYPES.includes(type)) {\n\t\tconsole.error(`'${type}' is not a valid chart type.`);\n\t}\n\n\tif(!COMPATIBLE_CHARTS[current_type].includes(type)) {\n\t\tconsole.error(`'${current_type}' chart cannot be converted to a '${type}' chart.`);\n\t}\n\n\t// whether the new chart can use the existing colors\n\tconst useColor = COLOR_COMPATIBLE_CHARTS[current_type].includes(type);\n\n\t// Okay, this is anticlimactic\n\t// this function will need to actually be 'changeChartType(type)'\n\t// that will update only the required elements, but for now ...\n\treturn new Chart({\n\t\tparent: args.parent,\n\t\ttitle: args.title,\n\t\tdata: args.data,\n\t\ttype: type,\n\t\theight: args.height,\n\t\tcolors: useColor ? args.colors : undefined\n\t});\n}","// Leveraging SMIL Animations\n\nimport { REPLACE_ALL_NEW_DUR } from './animate';\n\nconst EASING = {\n\tease: \"0.25 0.1 0.25 1\",\n\tlinear: \"0 0 1 1\",\n\t// easein: \"0.42 0 1 1\",\n\teasein: \"0.1 0.8 0.2 1\",\n\teaseout: \"0 0 0.58 1\",\n\teaseinout: \"0.42 0 0.58 1\"\n};\n\nfunction animateSVGElement(element, props, dur, easingType=\"linear\", type=undefined, oldValues={}) {\n\n\tlet animElement = element.cloneNode(true);\n\tlet newElement = element.cloneNode(true);\n\n\tfor(var attributeName in props) {\n\t\tlet animateElement;\n\t\tif(attributeName === 'transform') {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animateTransform\");\n\t\t} else {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animate\");\n\t\t}\n\t\tlet currentValue = oldValues[attributeName] || element.getAttribute(attributeName);\n\t\tlet value = props[attributeName];\n\n\t\tlet animAttr = {\n\t\t\tattributeName: attributeName,\n\t\t\tfrom: currentValue,\n\t\t\tto: value,\n\t\t\tbegin: \"0s\",\n\t\t\tdur: dur/1000 + \"s\",\n\t\t\tvalues: currentValue + \";\" + value,\n\t\t\tkeySplines: EASING[easingType],\n\t\t\tkeyTimes: \"0;1\",\n\t\t\tcalcMode: \"spline\",\n\t\t\tfill: 'freeze'\n\t\t};\n\n\t\tif(type) {\n\t\t\tanimAttr[\"type\"] = type;\n\t\t}\n\n\t\tfor (var i in animAttr) {\n\t\t\tanimateElement.setAttribute(i, animAttr[i]);\n\t\t}\n\n\t\tanimElement.appendChild(animateElement);\n\n\t\tif(type) {\n\t\t\tnewElement.setAttribute(attributeName, `translate(${value})`);\n\t\t} else {\n\t\t\tnewElement.setAttribute(attributeName, value);\n\t\t}\n\t}\n\n\treturn [animElement, newElement];\n}\n\nexport function transform(element, style) { // eslint-disable-line no-unused-vars\n\telement.style.transform = style;\n\telement.style.webkitTransform = style;\n\telement.style.msTransform = style;\n\telement.style.mozTransform = style;\n\telement.style.oTransform = style;\n}\n\nfunction animateSVG(svgContainer, elements) {\n\tlet newElements = [];\n\tlet animElements = [];\n\n\telements.map(element => {\n\t\tlet unit = element[0];\n\t\tlet parent = unit.parentNode;\n\n\t\tlet animElement, newElement;\n\n\t\telement[0] = unit;\n\t\t[animElement, newElement] = animateSVGElement(...element);\n\n\t\tnewElements.push(newElement);\n\t\tanimElements.push([animElement, parent]);\n\n\t\tparent.replaceChild(animElement, unit);\n\t});\n\n\tlet animSvg = svgContainer.cloneNode(true);\n\n\tanimElements.map((animElement, i) => {\n\t\tanimElement[1].replaceChild(newElements[i], animElement[0]);\n\t\telements[i][0] = newElements[i];\n\t});\n\n\treturn animSvg;\n}\n\nexport function runSMILAnimation(parent, svgElement, elementsToAnimate) {\n\tif(elementsToAnimate.length === 0) return;\n\n\tlet animSvgElement = animateSVG(svgElement, elementsToAnimate);\n\tif(svgElement.parentNode == parent) {\n\t\tparent.removeChild(svgElement);\n\t\tparent.appendChild(animSvgElement);\n\n\t}\n\n\t// Replace the new svgElement (data has already been replaced)\n\tsetTimeout(() => {\n\t\tif(animSvgElement.parentNode == parent) {\n\t\t\tparent.removeChild(animSvgElement);\n\t\t\tparent.appendChild(svgElement);\n\t\t}\n\t}, REPLACE_ALL_NEW_DUR);\n}\n","import { floatTwo, fillArray } from '../utils/helpers';\nimport { DEFAULT_AXIS_CHART_TYPE } from '../utils/constants';\n\nexport function dataPrep(data, type) {\n\tdata.labels = data.labels || [];\n\n\tlet datasetLength = data.labels.length;\n\n\t// Datasets\n\tlet datasets = data.datasets;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\tif(!datasets) {\n\t\t// default\n\t\tdatasets = [{\n\t\t\tvalues: zeroArray\n\t\t}];\n\t}\n\n\tdatasets.map((d, i)=> {\n\t\t// Set values\n\t\tif(!d.values) {\n\t\t\td.values = zeroArray;\n\t\t} else {\n\t\t\t// Check for non values\n\t\t\tlet vals = d.values;\n\t\t\tvals = vals.map(val => (!isNaN(val) ? val : 0));\n\n\t\t\t// Trim or extend\n\t\t\tif(vals.length > datasetLength) {\n\t\t\t\tvals = vals.slice(0, datasetLength);\n\t\t\t} else {\n\t\t\t\tvals = fillArray(vals, datasetLength - vals.length, 0);\n\t\t\t}\n\t\t}\n\n\t\t// Set index\n\t\td.index = i;\n\n\t\t// Set type\n\t\tif(!d.chartType ) {\n\t\t\td.chartType = type || DEFAULT_AXIS_CHART_TYPE;\n\t\t}\n\t});\n\n\t// Markers\n\t// Regions\n\n\treturn data;\n}","import { makeSVGGroup } from '../utils/draw';\nimport { xLine, yLine, yMarker, yRegion } from '../utils/draw';\nimport { equilizeNoOfElements } from '../utils/draw-utils';\nimport { Animator, translateHoriLine, translateVertLine, animateRegion } from '../utils/animate';\n\nclass ChartComponent {\n\tconstructor({\n\t\tlayerClass = '',\n\t\tlayerTransform = '',\n\t\tparent,\n\t\tconstants,\n\t\tdata,\n\n\t\t// called on update\n\t\tmakeElements,\n\t\tpostMake,\n\t\tgetData,\n\t\tanimateElements\n\t}) {\n\t\tthis.parent = parent;\n\t\tthis.layerTransform = layerTransform;\n\t\tthis.constants = constants;\n\n\t\tthis.makeElements = makeElements;\n\t\tthis.postMake = postMake;\n\t\tthis.getData = getData;\n\n\t\tthis.animateElements = animateElements;\n\n\t\tthis.store = [];\n\n\t\tlayerClass = typeof(layerClass) === 'function'\n\t\t\t? layerClass() : layerClass;\n\n\t\tthis.layer = makeSVGGroup(this.parent, layerClass, this.layerTransform);\n\n\t\tthis.data = data;\n\n\t\tthis.make();\n\t}\n\n\trefresh(data) {\n\t\tthis.data = data || this.getData();\n\t}\n\n\tmake() {\n\t\tthis.preMake && this.preMake();\n\t\tthis.render(this.data);\n\t\tthis.postMake && this.postMake();\n\t\tthis.oldData = this.data;\n\t}\n\n\trender(data) {\n\t\tthis.store = this.makeElements(data);\n\n\t\tthis.layer.textContent = '';\n\t\tthis.store.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t}\n\n\tupdate(animate = true) {\n\t\tthis.refresh();\n\t\tlet animateElements = []\n\t\tif(animate) {\n\t\t\tanimateElements = this.animateElements(this.data);\n\t\t}\n\t\t// TODO: Can we remove this?\n\t\tsetTimeout(() => {\n\t\t\tthis.make();\n\t\t}, 1400);\n\t\treturn animateElements;\n\t}\n}\n\nlet componentConfigs = {\n\tyAxis: {\n\t\tlayerClass: 'y axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\tyLine(position, data.labels[i], this.constants.width,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos =  newData.positions;\n\t\t\tlet newLabels =  newData.labels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tlabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\txAxis: {\n\t\tlayerClass: 'x axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\txLine(position, data.labels[i], this.constants.height,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos =  newData.positions;\n\t\t\tlet newLabels =  newData.labels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tlabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateVertLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyMarkers: {\n\t\tlayerClass: 'y-markers',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(marker =>\n\t\t\t\tyMarker(marker.position, marker.label, this.constants.width,\n\t\t\t\t\t{pos:'right', mode: 'span', lineType: 'dashed'})\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos =  newData.map(d => d.position);\n\t\t\tlet newLabels =  newData.map(d => d.label);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.position);\n\t\t\tlet oldLabels = this.oldData.map(d => d.label);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tposition: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i]\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyRegions: {\n\t\tlayerClass: 'y-regions',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(region =>\n\t\t\t\tyRegion(region.start, region.end, this.constants.width,\n\t\t\t\t\tregion.label)\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos =  newData.map(d => d.end);\n\t\t\tlet newLabels =  newData.map(d => d.label);\n\t\t\tlet newStarts =  newData.map(d => d.start);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.end);\n\t\t\tlet oldLabels = this.oldData.map(d => d.label);\n\t\t\tlet oldStarts = this.oldData.map(d => d.start);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tstart: oldStarts[i],\n\t\t\t\t\tend: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i]\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((rectGroup, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateRegion(\n\t\t\t\t\trectGroup, newStarts[i], newPos[i], oldPos[i]\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\tbarGraph: {\n\t\t// opt:[\n\t\t// \t'barGraph',\n\t\t// \tthis.drawArea,\n\t\t// \t{\n\t\t// \t\tcontroller: barController,\n\t\t// \t\tindex: index,\n\t\t// \t\tcolor: this.colors[index],\n\t\t// \t\tvaluesOverPoints: this.valuesOverPoints,\n\t\t// \t\tstacked: this.barOptions && this.barOptions.stacked,\n\t\t// \t\tspaceRatio: 0.5,\n\t\t// \t\tminHeight: this.height * MIN_BAR_PERCENT_HEIGHT\n\t\t// \t},\n\t\t// \t{\n\t\t// \t\tbarsWidth: this.state.unitWidth * (1 - spaceRatio),\n\t\t// \t\tbarWidth: barsWidth/(stacked ? 1 : this.state.noOfDatasets),\n\n\t\t// \t},\n\t\t// \tfunction() {\n\t\t// \t\tlet s = this.state;\n\t\t// \t\treturn {\n\t\t// \t\t\tbarsWidth: this.state.unitWidth * (1 - spaceRatio),\n\t\t// \t\t\tbarWidth: barsWidth/(stacked ? 1 : this.state.noOfDatasets),\n\t\t// \t\t\tpositions: s.xAxisPositions,\n\t\t// \t\t\tlabels: s.xAxisLabels,\n\t\t// \t\t}\n\t\t// \t}.bind(this)\n\t\t// ],\n\t\tlayerClass() { return 'y-regions' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\treturn data.yPositions.map((y, j) =>\n\t\t\t\tbarController.draw(\n\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\ty,\n\t\t\t\t\tcolor,\n\t\t\t\t\t(c.valuesOverPoints ? (c.stacked ? data.cumulativeYs[j] : data.values[j]) : ''),\n\t\t\t\t\tj,\n\t\t\t\t\ty - (data.cumulativePositions ? data.cumulativePositions[j] : y)\n\t\t\t\t)\n\t\t\t);\n\t\t},\n\t\tpostMake() {\n\t\t\tif((!this.constants.stacked)) {\n\t\t\t\tthis.layer.setAttribute('transform',\n\t\t\t\t\t`translate(${unitRenderer.consts.width * index}, 0)`);\n\t\t\t}\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos =  newData.map(d => d.end);\n\t\t\tlet newLabels =  newData.map(d => d.label);\n\t\t\tlet newStarts =  newData.map(d => d.start);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.end);\n\t\t\tlet oldLabels = this.oldData.map(d => d.label);\n\t\t\tlet oldStarts = this.oldData.map(d => d.start);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tstart: oldStarts[i],\n\t\t\t\t\tend: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i]\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((rectGroup, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateRegion(\n\t\t\t\t\trectGroup, newStarts[i], newPos[i], oldPos[i]\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\tlineGraph: {\n\n\t}\n}\n\nexport function getComponent(name, parent, constants, initData, getData) {\n\tlet config = componentConfigs[name];\n\tObject.assign(config, {\n\t\tparent: parent,\n\t\tconstants: constants,\n\t\tdata: initData,\n\t\tgetData: getData\n\t})\n\treturn new ChartComponent(config);\n}\n","import { getBarHeightAndYAttr } from '../utils/draw-utils';\nimport { createSVG, makePath, makeGradient, wrapInSVGGroup, FONT_SIZE } from '../utils/draw';\nimport { STD_EASING, UNIT_ANIM_DUR, MARKER_LINE_ANIM_DUR, PATH_ANIM_DUR } from '../utils/animate';\n\nclass AxisChartController {\n\tconstructor(meta) {\n\t\t// TODO: make configurable passing args\n\t\tthis.meta = meta || {};\n\t\tthis.setupArgs();\n\t}\n\n\tsetupArgs() {\n\t\tthis.consts = {};\n\t}\n\n\tsetup() {}\n\n\trefreshMeta(meta) {\n\t\tthis.meta = Object.assign((this.meta || {}), meta);\n\t}\n\n\tdraw() {}\n\tanimate() {}\n}\n\nexport class AxisController extends AxisChartController {\n\tconstructor(meta) {\n\t\tsuper(meta);\n\t}\n\n\tdraw(x, y, color, index) {\n\t\treturn createSVG('circle', {\n\t\t\tstyle: `fill: ${color}`,\n\t\t\t'data-point-index': index,\n\t\t\tcx: x,\n\t\t\tcy: y,\n\t\t\tr: this.consts.radius\n\t\t});\n\t}\n\n\tanimate(dot, x, yTop) {\n\t\treturn [dot, {cx: x, cy: yTop}, UNIT_ANIM_DUR, STD_EASING];\n\t\t// dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\n\t}\n}\n\nexport class BarChartController extends AxisChartController {\n\tconstructor(meta) {\n\t\tsuper(meta);\n\t}\n\n\tsetupArgs() {\n\t\tthis.consts = {\n\t\t\tspaceRatio: 0.5,\n\t\t\tminHeight: this.meta.totalHeight * MIN_BAR_PERCENT_HEIGHT\n\t\t};\n\t}\n\n\trefreshMeta(meta) {\n\t\tif(meta) {\n\t\t\tsuper.refreshMeta(meta);\n\t\t}\n\t\tlet m = this.meta;\n\t\tthis.consts.barsWidth = m.unitWidth - m.unitWidth * this.consts.spaceRatio;\n\n\t\tthis.consts.width = this.consts.barsWidth / (m.options && m.options.stacked\n\t\t\t? m.options.stacked : m.noOfDatasets);\n\t}\n\n\tdraw(x, yTop, color, label='', index=0, offset=0) {\n\t\tlet [height, y] = getBarHeightAndYAttr(yTop, this.meta.zeroLine);\n\n\t\tlet rect = createSVG('rect', {\n\t\t\tclassName: `bar mini`,\n\t\t\tstyle: `fill: ${color}`,\n\t\t\t'data-point-index': index,\n\t\t\tx: x - this.consts.barsWidth/2,\n\t\t\ty: y - offset,\n\t\t\twidth: this.consts.width,\n\t\t\theight: height || this.consts.minHeight\n\t\t});\n\n\t\tif(!label && !label.length) {\n\t\t\treturn rect;\n\t\t} else {\n\t\t\tlet text = createSVG('text', {\n\t\t\t\tclassName: 'data-point-value',\n\t\t\t\tx: x,\n\t\t\t\ty: y - offset,\n\t\t\t\tdy: (FONT_SIZE / 2 * -1) + 'px',\n\t\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t\t'text-anchor': 'middle',\n\t\t\t\tinnerHTML: label\n\t\t\t});\n\n\t\t\treturn wrapInSVGGroup([rect, text]);\n\t\t}\n\t}\n\n\tanimate(bar, x, yTop, index, noOfDatasets) {\n\t\tlet start = x - this.meta.unitWidth/4;\n\t\tlet width = (this.meta.unitWidth/2)/noOfDatasets;\n\t\tlet [height, y] = getBarHeightAndYAttr(yTop, this.meta.zeroLine, this.meta.totalHeight);\n\n\t\tx = start + (width * index);\n\n\t\treturn [bar, {width: width, height: height, x: x, y: y}, UNIT_ANIM_DUR, STD_EASING];\n\t\t// bar.animate({height: args.newHeight, y: yTop}, UNIT_ANIM_DUR, mina.easein);\n\t}\n}\n\nexport class LineChartController extends AxisChartController {\n\tconstructor(meta) {\n\t\tsuper(meta);\n\t}\n\n\tsetupArgs() {\n\t\tthis.consts = {\n\t\t\tradius: this.meta.dotSize || 4\n\t\t};\n\t}\n\n\tdraw(x, y, color, label='', index=0) {\n\t\tlet dot = createSVG('circle', {\n\t\t\tstyle: `fill: ${color}`,\n\t\t\t'data-point-index': index,\n\t\t\tcx: x,\n\t\t\tcy: y,\n\t\t\tr: this.consts.radius\n\t\t});\n\n\t\tif(!label && !label.length) {\n\t\t\treturn dot;\n\t\t} else {\n\t\t\tlet text = createSVG('text', {\n\t\t\t\tclassName: 'data-point-value',\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tdy: (FONT_SIZE / 2 * -1 - this.consts.radius) + 'px',\n\t\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t\t'text-anchor': 'middle',\n\t\t\t\tinnerHTML: label\n\t\t\t});\n\n\t\t\treturn wrapInSVGGroup([dot, text]);\n\t\t}\n\t}\n\n\tanimate(dot, x, yTop) {\n\t\treturn [dot, {cx: x, cy: yTop}, UNIT_ANIM_DUR, STD_EASING];\n\t\t// dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\n\t}\n}\n\nexport function getPaths(yList, xList, color, heatline=false, regionFill=false) {\n\tlet pointsList = yList.map((y, i) => (xList[i] + ',' + y));\n\tlet pointsStr = pointsList.join(\"L\");\n\tlet path = makePath(\"M\"+pointsStr, 'line-graph-path', color);\n\n\t// HeatLine\n\tif(heatline) {\n\t\tlet gradient_id = makeGradient(this.svgDefs, color);\n\t\tpath.style.stroke = `url(#${gradient_id})`;\n\t}\n\n\tlet components = [path];\n\n\t// Region\n\tif(regionFill) {\n\t\tlet gradient_id_region = makeGradient(this.svgDefs, color, true);\n\n\t\tlet zeroLine = this.state.yAxis.zeroLine;\n\t\t// TODO: use zeroLine OR minimum\n\t\tlet pathStr = \"M\" + `0,${zeroLine}L` + pointsStr + `L${this.width},${zeroLine}`;\n\t\tcomponents.push(makePath(pathStr, `region-fill`, 'none', `url(#${gradient_id_region})`));\n\t}\n\n\treturn components;\n}\n\n// class BarChart extends AxisChart {\n// \tconstructor(args) {\n// \t\tsuper(args);\n// \t\tthis.type = 'bar';\n// \t\tthis.setup();\n// \t}\n\n// \tconfigure(args) {\n// \t\tsuper.configure(args);\n// \t\tthis.config.xAxisMode = args.xAxisMode || 'tick';\n// \t\tthis.config.yAxisMode = args.yAxisMode || 'span';\n// \t}\n\n// \t// =================================\n\n// \tmakeOverlay() {\n// \t\t// Just make one out of the first element\n// \t\tlet index = this.xAxisLabels.length - 1;\n// \t\tlet unit = this.y[0].svg_units[index];\n// \t\tthis.setCurrentDataPoint(index);\n\n// \t\tif(this.overlay) {\n// \t\t\tthis.overlay.parentNode.removeChild(this.overlay);\n// \t\t}\n// \t\tthis.overlay = unit.cloneNode();\n// \t\tthis.overlay.style.fill = '#000000';\n// \t\tthis.overlay.style.opacity = '0.4';\n// \t\tthis.drawArea.appendChild(this.overlay);\n// \t}\n\n// \tbindOverlay() {\n// \t\t// on event, update overlay\n// \t\tthis.parent.addEventListener('data-select', (e) => {\n// \t\t\tthis.update_overlay(e.svg_unit);\n// \t\t});\n// \t}\n\n// \tbind_units(units_array) {\n// \t\tunits_array.map(unit => {\n// \t\t\tunit.addEventListener('click', () => {\n// \t\t\t\tlet index = unit.getAttribute('data-point-index');\n// \t\t\t\tthis.setCurrentDataPoint(index);\n// \t\t\t});\n// \t\t});\n// \t}\n\n// \tupdate_overlay(unit) {\n// \t\tlet attributes = [];\n// \t\tObject.keys(unit.attributes).map(index => {\n// \t\t\tattributes.push(unit.attributes[index]);\n// \t\t});\n\n// \t\tattributes.filter(attr => attr.specified).map(attr => {\n// \t\t\tthis.overlay.setAttribute(attr.name, attr.nodeValue);\n// \t\t});\n\n// \t\tthis.overlay.style.fill = '#000000';\n// \t\tthis.overlay.style.opacity = '0.4';\n// \t}\n\n// \tonLeftArrow() {\n// \t\tthis.setCurrentDataPoint(this.currentIndex - 1);\n// \t}\n\n// \tonRightArrow() {\n// \t\tthis.setCurrentDataPoint(this.currentIndex + 1);\n// \t}\n// }\n\n","function normalize(x) {\n\t// Calculates mantissa and exponent of a number\n\t// Returns normalized number and exponent\n\t// https://stackoverflow.com/q/9383593/6495043\n\n\tif(x===0) {\n\t\treturn [0, 0];\n\t}\n\tif(isNaN(x)) {\n\t\treturn {mantissa: -6755399441055744, exponent: 972};\n\t}\n\tvar sig = x > 0 ? 1 : -1;\n\tif(!isFinite(x)) {\n\t\treturn {mantissa: sig * 4503599627370496, exponent: 972};\n\t}\n\n\tx = Math.abs(x);\n\tvar exp = Math.floor(Math.log10(x));\n\tvar man = x/Math.pow(10, exp);\n\n\treturn [sig * man, exp];\n}\n\nfunction getChartRangeIntervals(max, min=0) {\n\tlet upperBound = Math.ceil(max);\n\tlet lowerBound = Math.floor(min);\n\tlet range = upperBound - lowerBound;\n\n\tlet noOfParts = range;\n\tlet partSize = 1;\n\n\t// To avoid too many partitions\n\tif(range > 5) {\n\t\tif(range % 2 !== 0) {\n\t\t\tupperBound++;\n\t\t\t// Recalc range\n\t\t\trange = upperBound - lowerBound;\n\t\t}\n\t\tnoOfParts = range/2;\n\t\tpartSize = 2;\n\t}\n\n\t// Special case: 1 and 2\n\tif(range <= 2) {\n\t\tnoOfParts = 4;\n\t\tpartSize = range/noOfParts;\n\t}\n\n\t// Special case: 0\n\tif(range === 0) {\n\t\tnoOfParts = 5;\n\t\tpartSize = 1;\n\t}\n\n\tlet intervals = [];\n\tfor(var i = 0; i <= noOfParts; i++){\n\t\tintervals.push(lowerBound + partSize * i);\n\t}\n\treturn intervals;\n}\n\nfunction getChartIntervals(maxValue, minValue=0) {\n\tlet [normalMaxValue, exponent] = normalize(maxValue);\n\tlet normalMinValue = minValue ? minValue/Math.pow(10, exponent): 0;\n\n\t// Allow only 7 significant digits\n\tnormalMaxValue = normalMaxValue.toFixed(6);\n\n\tlet intervals = getChartRangeIntervals(normalMaxValue, normalMinValue);\n\tintervals = intervals.map(value => value * Math.pow(10, exponent));\n\treturn intervals;\n}\n\nexport function calcChartIntervals(values, withMinimum=false) {\n\t//*** Where the magic happens ***\n\n\t// Calculates best-fit y intervals from given values\n\t// and returns the interval array\n\n\tlet maxValue = Math.max(...values);\n\tlet minValue = Math.min(...values);\n\n\t// Exponent to be used for pretty print\n\tlet exponent = 0, intervals = []; // eslint-disable-line no-unused-vars\n\n\tfunction getPositiveFirstIntervals(maxValue, absMinValue) {\n\t\tlet intervals = getChartIntervals(maxValue);\n\n\t\tlet intervalSize = intervals[1] - intervals[0];\n\n\t\t// Then unshift the negative values\n\t\tlet value = 0;\n\t\tfor(var i = 1; value < absMinValue; i++) {\n\t\t\tvalue += intervalSize;\n\t\t\tintervals.unshift((-1) * value);\n\t\t}\n\t\treturn intervals;\n\t}\n\n\t// CASE I: Both non-negative\n\n\tif(maxValue >= 0 && minValue >= 0) {\n\t\texponent = normalize(maxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(maxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(maxValue, minValue);\n\t\t}\n\t}\n\n\t// CASE II: Only minValue negative\n\n\telse if(maxValue > 0 && minValue < 0) {\n\t\t// `withMinimum` irrelevant in this case,\n\t\t// We'll be handling both sides of zero separately\n\t\t// (both starting from zero)\n\t\t// Because ceil() and floor() behave differently\n\t\t// in those two regions\n\n\t\tlet absMinValue = Math.abs(minValue);\n\n\t\tif(maxValue >= absMinValue) {\n\t\t\texponent = normalize(maxValue)[1];\n\t\t\tintervals = getPositiveFirstIntervals(maxValue, absMinValue);\n\t\t} else {\n\t\t\t// Mirror: maxValue => absMinValue, then change sign\n\t\t\texponent = normalize(absMinValue)[1];\n\t\t\tlet posIntervals = getPositiveFirstIntervals(absMinValue, maxValue);\n\t\t\tintervals = posIntervals.map(d => d * (-1));\n\t\t}\n\n\t}\n\n\t// CASE III: Both non-positive\n\n\telse if(maxValue <= 0 && minValue <= 0) {\n\t\t// Mirrored Case I:\n\t\t// Work with positives, then reverse the sign and array\n\n\t\tlet pseudoMaxValue = Math.abs(minValue);\n\t\tlet pseudoMinValue = Math.abs(maxValue);\n\n\t\texponent = normalize(pseudoMaxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue, pseudoMinValue);\n\t\t}\n\n\t\tintervals = intervals.reverse().map(d => d * (-1));\n\t}\n\n\treturn intervals;\n}\n\nexport function getZeroIndex(yPts) {\n\tlet zeroIndex;\n\tlet interval = getIntervalSize(yPts);\n\tif(yPts.indexOf(0) >= 0) {\n\t\t// the range has a given zero\n\t\t// zero-line on the chart\n\t\tzeroIndex = yPts.indexOf(0);\n\t} else if(yPts[0] > 0) {\n\t\t// Minimum value is positive\n\t\t// zero-line is off the chart: below\n\t\tlet min = yPts[0];\n\t\tzeroIndex = (-1) * min / interval;\n\t} else {\n\t\t// Maximum value is negative\n\t\t// zero-line is off the chart: above\n\t\tlet max = yPts[yPts.length - 1];\n\t\tzeroIndex = (-1) * max / interval + (yPts.length - 1);\n\t}\n\treturn zeroIndex;\n}\n\nexport function getRealIntervals(max, noOfIntervals, min = 0, asc = 1) {\n\tlet range = max - min;\n\tlet part = range * 1.0 / noOfIntervals;\n\tlet intervals = [];\n\n\tfor(var i = 0; i <= noOfIntervals; i++) {\n\t\tintervals.push(min + part * i);\n\t}\n\n\treturn asc ? intervals : intervals.reverse();\n}\n\nexport function getIntervalSize(orderedArray) {\n\treturn orderedArray[1] - orderedArray[0];\n}\n\nexport function getValueRange(orderedArray) {\n\treturn orderedArray[orderedArray.length-1] - orderedArray[0];\n}\n\nexport function calcDistribution(values, distributionSize) {\n\t// Assume non-negative values,\n\t// implying distribution minimum at zero\n\n\tlet dataMaxValue = Math.max(...values);\n\n\tlet distributionStep = 1 / (distributionSize - 1);\n\tlet distribution = [];\n\n\tfor(var i = 0; i < distributionSize; i++) {\n\t\tlet checkpoint = dataMaxValue * (distributionStep * i);\n\t\tdistribution.push(checkpoint);\n\t}\n\n\treturn distribution;\n}\n\nexport function getMaxCheckpoint(value, distribution) {\n\treturn distribution.filter(d => d < value).length;\n}\n","// Playing around with dates\n\n// https://stackoverflow.com/a/11252167/6495043\nfunction treatAsUtc(dateStr) {\n\tlet result = new Date(dateStr);\n\tresult.setMinutes(result.getMinutes() - result.getTimezoneOffset());\n\treturn result;\n}\n\nexport function getDdMmYyyy(date) {\n\tlet dd = date.getDate();\n\tlet mm = date.getMonth() + 1; // getMonth() is zero-based\n\treturn [\n\t\t(dd>9 ? '' : '0') + dd,\n\t\t(mm>9 ? '' : '0') + mm,\n\t\tdate.getFullYear()\n\t].join('-');\n}\n\nexport function getWeeksBetween(startDateStr, endDateStr) {\n\treturn Math.ceil(getDaysBetween(startDateStr, endDateStr) / 7);\n}\n\nexport function getDaysBetween(startDateStr, endDateStr) {\n\tlet millisecondsPerDay = 24 * 60 * 60 * 1000;\n\treturn (treatAsUtc(endDateStr) - treatAsUtc(startDateStr)) / millisecondsPerDay;\n}\n\n// mutates\nexport function addDays(date, numberOfDays) {\n\tdate.setDate(date.getDate() + numberOfDays);\n}\n\n// export function getMonthName() {}\n","import '../scss/charts.scss';\n\nimport ScatterChart from './charts/ScatterChart';\nimport MultiAxisChart from './charts/MultiAxisChart';\nimport PercentageChart from './charts/PercentageChart';\nimport PieChart from './charts/PieChart';\nimport Heatmap from './charts/Heatmap';\nimport AxisChart from './charts/AxisChart';\n\n// if (ENV !== 'production') {\n// \t// Enable LiveReload\n// \tdocument.write(\n// \t\t'<script src=\"http://' + (location.host || 'localhost').split(':')[0] +\n// \t\t':35729/livereload.js?snipver=1\"></' + 'script>'\n// \t);\n// }\n\n// If type is bar\n\n\n\n\nconst chartTypes = {\n\tmixed: AxisChart,\n\tmultiaxis: MultiAxisChart,\n\tscatter: ScatterChart,\n\tpercentage: PercentageChart,\n\theatmap: Heatmap,\n\tpie: PieChart\n};\n\nfunction getChartByType(chartType = 'line', options) {\n\tdebugger;\n\tif(chartType === 'line') {\n\t\toptions.type = 'line';\n\t\treturn new AxisChart(options);\n\t} else if (chartType === 'bar') {\n\t\toptions.type = 'bar';\n\t\treturn new AxisChart(options);\n\t}\n\n\tif (!chartTypes[chartType]) {\n\t\tconsole.error(\"Undefined chart type: \" + chartType);\n\t\treturn;\n\t}\n\n\treturn new chartTypes[chartType](options);\n}\n\nexport default class Chart {\n\tconstructor(args) {\n\t\treturn getChartByType(args.type, arguments[0]);\n\t}\n}\n","import { $ } from '../utils/dom';\n\nexport default class SvgTip {\n\tconstructor({\n\t\tparent = null,\n\t\tcolors = []\n\t}) {\n\t\tthis.parent = parent;\n\t\tthis.colors = colors;\n\t\tthis.title_name = '';\n\t\tthis.title_value = '';\n\t\tthis.list_values = [];\n\t\tthis.title_value_first = 0;\n\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\n\t\tthis.top = 0;\n\t\tthis.left = 0;\n\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tthis.make_tooltip();\n\t}\n\n\trefresh() {\n\t\tthis.fill();\n\t\tthis.calc_position();\n\t\t// this.show_tip();\n\t}\n\n\tmake_tooltip() {\n\t\tthis.container = $.create('div', {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'graph-svg-tip comparison',\n\t\t\tinnerHTML: `<span class=\"title\"></span>\n\t\t\t\t<ul class=\"data-point-list\"></ul>\n\t\t\t\t<div class=\"svg-pointer\"></div>`\n\t\t});\n\t\tthis.hide_tip();\n\n\t\tthis.title = this.container.querySelector('.title');\n\t\tthis.data_point_list = this.container.querySelector('.data-point-list');\n\n\t\tthis.parent.addEventListener('mouseleave', () => {\n\t\t\tthis.hide_tip();\n\t\t});\n\t}\n\n\tfill() {\n\t\tlet title;\n\t\tif(this.title_value_first) {\n\t\t\ttitle = `<strong>${this.title_value}</strong>${this.title_name}`;\n\t\t} else {\n\t\t\ttitle = `${this.title_name}<strong>${this.title_value}</strong>`;\n\t\t}\n\t\tthis.title.innerHTML = title;\n\t\tthis.data_point_list.innerHTML = '';\n\n\t\tthis.list_values.map((set, i) => {\n\t\t\tconst color = this.colors[i] || 'black';\n\n\t\t\tlet li = $.create('li', {\n\t\t\t\tstyles: {\n\t\t\t\t\t'border-top': `3px solid ${color}`\n\t\t\t\t},\n\t\t\t\tinnerHTML: `<strong style=\"display: block;\">${ set.value === 0 || set.value ? set.value : '' }</strong>\n\t\t\t\t\t${set.title ? set.title : '' }`\n\t\t\t});\n\n\t\t\tthis.data_point_list.appendChild(li);\n\t\t});\n\t}\n\n\tcalc_position() {\n\t\tlet width = this.container.offsetWidth;\n\n\t\tthis.top = this.y - this.container.offsetHeight;\n\t\tthis.left = this.x - width/2;\n\t\tlet max_left = this.parent.offsetWidth - width;\n\n\t\tlet pointer = this.container.querySelector('.svg-pointer');\n\n\t\tif(this.left < 0) {\n\t\t\tpointer.style.left = `calc(50% - ${-1 * this.left}px)`;\n\t\t\tthis.left = 0;\n\t\t} else if(this.left > max_left) {\n\t\t\tlet delta = this.left - max_left;\n\t\t\tlet pointer_offset = `calc(50% + ${delta}px)`;\n\t\t\tpointer.style.left = pointer_offset;\n\n\t\t\tthis.left = max_left;\n\t\t} else {\n\t\t\tpointer.style.left = `50%`;\n\t\t}\n\t}\n\n\tset_values(x, y, title_name = '', title_value = '', list_values = [], title_value_first = 0) {\n\t\tthis.title_name = title_name;\n\t\tthis.title_value = title_value;\n\t\tthis.list_values = list_values;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.title_value_first = title_value_first;\n\t\tthis.refresh();\n\t}\n\n\thide_tip() {\n\t\tthis.container.style.top = '0px';\n\t\tthis.container.style.left = '0px';\n\t\tthis.container.style.opacity = '0';\n\t}\n\n\tshow_tip() {\n\t\tthis.container.style.top = this.top + 'px';\n\t\tthis.container.style.left = this.left + 'px';\n\t\tthis.container.style.opacity = '1';\n\t}\n}\n","import SvgTip from '../objects/SvgTip';\nimport { $, isElementInViewport, getElementContentWidth } from '../utils/dom';\nimport { makeSVGContainer, makeSVGDefs, makeSVGGroup } from '../utils/draw';\nimport { getStringWidth } from '../utils/helpers';\nimport { getColor, DEFAULT_COLORS } from '../utils/colors';\nimport { getDifferentChart } from '../config';\nimport { runSMILAnimation } from '../utils/animation';\n\nexport default class BaseChart {\n\tconstructor({\n\t\theight = 240,\n\n\t\ttitle = '',\n\t\tsubtitle = '',\n\t\tcolors = [],\n\n\t\tisNavigable = 0,\n\t\tshowLegend = 1,\n\n\t\ttype = '',\n\n\t\tparent,\n\t\tdata\n\t}) {\n\t\tthis.rawChartArgs = arguments[0];\n\n\t\tthis.parent = typeof parent === 'string' ? document.querySelector(parent) : parent;\n\t\tthis.title = title;\n\t\tthis.subtitle = subtitle;\n\t\tthis.argHeight = height;\n\n\t\tthis.isNavigable = isNavigable;\n\t\tif(this.isNavigable) {\n\t\t\tthis.currentIndex = 0;\n\t\t}\n\n\t\tthis.data = this.prepareData(data);;\n\t\tthis.colors = [];\n\t\tthis.config = {};\n\t\tthis.state = {};\n\t\tthis.options = {};\n\n\t\tthis.configure(arguments[0]);\n\t}\n\n\tconfigure(args) {\n\t\tthis.setColors();\n\t\tthis.config = {\n\t\t\tshowTooltip: 1, // calculate\n\t\t\tshowLegend: 1,\n\t\t\tisNavigable: 0,\n\t\t\tanimate: 1\n\t\t};\n\n\t\tthis.setMargins();\n\n\t\t// Bind window events\n\t\twindow.addEventListener('resize', () => this.draw());\n\t\twindow.addEventListener('orientationchange', () => this.draw());\n\t}\n\n\tsetColors() {\n\t\tlet args = this.rawChartArgs;\n\n\t\t// Needs structure as per only labels/datasets, from config\n\t\tconst list = args.type === 'percentage' || args.type === 'pie'\n\t\t\t? args.data.labels\n\t\t\t: args.data.datasets;\n\n\t\tif(!args.colors || (list && args.colors.length < list.length)) {\n\t\t\tthis.colors = DEFAULT_COLORS;\n\t\t} else {\n\t\t\tthis.colors = args.colors;\n\t\t}\n\n\t\tthis.colors = this.colors.map(color => getColor(color));\n\t}\n\n\tsetMargins() {\n\t\t// TODO: think for all\n\t\tlet height = this.argHeight;\n\t\tthis.baseHeight = height;\n\t\tthis.height = height - 40; // change\n\t\tthis.translateY = 20;\n\n\t\t// Horizontal margins\n\t\tthis.translateXLeft = 60;\n\t\tthis.translateXRight = 40;\n\t}\n\n\tvalidate(){\n\t\tlet args = this.rawChartArgs;\n\t\t// Now yo have the args, set this stuff only after validating\n\t\tif(!this.parent) {\n\t\t\tconsole.error(\"No parent element to render on was provided.\");\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tsetup() {\n\t\tif(this.validate()) {\n\t\t\tthis._setup();\n\t\t}\n\t}\n\n\t_setup() {\n\t\tthis.makeContainer();\n\t\tthis.makeTooltip(); // without binding\n\n\t\tthis.draw(true);\n\t}\n\n\tinitComponents() {}\n\n\tsetupComponents() {\n\t\tthis.components = [];\n\t}\n\n\tmakeContainer() {\n\t\tthis.container = $.create('div', {\n\t\t\tclassName: 'chart-container',\n\t\t\tinnerHTML: `<h6 class=\"title\">${this.title}</h6>\n\t\t\t\t<h6 class=\"sub-title uppercase\">${this.subtitle}</h6>\n\t\t\t\t<div class=\"frappe-chart graphics\"></div>\n\t\t\t\t<div class=\"graph-stats-container\"></div>`\n\t\t});\n\n\t\t// Chart needs a dedicated parent element\n\t\tthis.parent.innerHTML = '';\n\t\tthis.parent.appendChild(this.container);\n\n\t\tthis.chartWrapper = this.container.querySelector('.frappe-chart');\n\t\tthis.statsWrapper = this.container.querySelector('.graph-stats-container');\n\t}\n\n\tmakeTooltip() {\n\t\tthis.tip = new SvgTip({\n\t\t\tparent: this.chartWrapper,\n\t\t\tcolors: this.colors\n\t\t});\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {}\n\n\tdraw(init=false) {\n\t\tthis.calcWidth();\n\t\tthis.makeChartArea();\n\n\t\tthis.initComponents(); // Only depend on the drawArea made in makeChartArea\n\n\t\tthis.setupComponents();\n\n\t\tthis.components.forEach(c => c.make()); // or c.build()\n\t\tthis.renderLegend();\n\n\t\tthis.setupNavigation(init);\n\n\t\t// TODO: remove timeout and decrease post animate time in chart component\n\t\tif(init) {\n\t\t\tsetTimeout(() => {this.update();}, 1000);\n\t\t}\n\t}\n\n\tcalcWidth() {\n\t\tlet outerAnnotationsWidth = 0;\n\t\t// let charWidth = 8;\n\t\t// this.specificValues.map(val => {\n\t\t// \tlet strWidth = getStringWidth((val.title + \"\"), charWidth);\n\t\t// \tif(strWidth > outerAnnotationsWidth) {\n\t\t// \t\touterAnnotationsWidth = strWidth - 40;\n\t\t// \t}\n\t\t// });\n\t\tthis.baseWidth = getElementContentWidth(this.parent) - outerAnnotationsWidth;\n\t\tthis.width = this.baseWidth - (this.translateXLeft + this.translateXRight);\n\t}\n\n\tupdate(data=this.data) {\n\t\tthis.data = this.prepareData(data);\n\t\tthis.calc(); // builds state\n\t\tthis.render();\n\t}\n\n\tprepareData() {}\n\n\tcalc() {} // builds state\n\n\trender(animate=true) {\n\t\t// Can decouple to this.refreshComponents() first to save animation timeout\n\t\tthis.elementsToAnimate = [].concat.apply([],\n\t\t\tthis.components.map(c => c.update(animate)));\n\t\tif(this.elementsToAnimate) {\n\t\t\trunSMILAnimation(this.chartWrapper, this.svg, this.elementsToAnimate);\n\t\t}\n\n\t\t// TODO: rebind new units\n\t\t// if(this.isNavigable) {\n\t\t// \tthis.bind_units(units_array);\n\t\t// }\n\t}\n\n\tmakeChartArea() {\n\t\tif(this.svg) {\n\t\t\tthis.chartWrapper.removeChild(this.svg);\n\t\t}\n\t\tthis.svg = makeSVGContainer(\n\t\t\tthis.chartWrapper,\n\t\t\t'chart',\n\t\t\tthis.baseWidth,\n\t\t\tthis.baseHeight\n\t\t);\n\t\tthis.svgDefs = makeSVGDefs(this.svg);\n\n\t\t// I WISH !!!\n\t\t// this.svg = makeSVGGroup(\n\t\t// \tsvgContainer,\n\t\t// \t'flipped-coord-system',\n\t\t// \t`translate(0, ${this.baseHeight}) scale(1, -1)`\n\t\t// );\n\n\t\tthis.drawArea = makeSVGGroup(\n\t\t\tthis.svg,\n\t\t\tthis.type + '-chart',\n\t\t\t`translate(${this.translateXLeft}, ${this.translateY})`\n\t\t);\n\t}\n\n\trenderLegend() {}\n\n\tsetupNavigation(init=false) {\n\t\tif(this.isNavigable) return;\n\n\t\tthis.makeOverlay();\n\n\t\tif(init) {\n\t\t\tthis.bindOverlay();\n\n\t\t\tdocument.addEventListener('keydown', (e) => {\n\t\t\t\tif(isElementInViewport(this.chartWrapper)) {\n\t\t\t\t\te = e || window.event;\n\n\t\t\t\t\tif (e.keyCode == '37') {\n\t\t\t\t\t\tthis.onLeftArrow();\n\t\t\t\t\t} else if (e.keyCode == '39') {\n\t\t\t\t\t\tthis.onRightArrow();\n\t\t\t\t\t} else if (e.keyCode == '38') {\n\t\t\t\t\t\tthis.onUpArrow();\n\t\t\t\t\t} else if (e.keyCode == '40') {\n\t\t\t\t\t\tthis.onDownArrow();\n\t\t\t\t\t} else if (e.keyCode == '13') {\n\t\t\t\t\t\tthis.onEnterKey();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tmakeOverlay() {}\n\tbindOverlay() {}\n\tbind_units() {}\n\n\tonLeftArrow() {}\n\tonRightArrow() {}\n\tonUpArrow() {}\n\tonDownArrow() {}\n\tonEnterKey() {}\n\n\t// ????????????\n\t// Update the data here, then do relevant updates\n\t// and drawing in child classes by overriding\n\t// The Child chart will only know what a particular update means\n\t// and what components are affected,\n\t// BaseChart shouldn't be doing the animating\n\n\tgetDataPoint(index = 0) {}\n\tsetCurrentDataPoint(point) {}\n\n\tupdateDataset(dataset, index) {}\n\taddDataset(dataset, index) {}\n\tremoveDataset(index = 0) {}\n\n\tupdateDatasets(datasets) {}\n\n\tupdateDataPoint(dataPoint, index = 0) {}\n\taddDataPoint(dataPoint, index = 0) {}\n\tremoveDataPoint(index = 0) {}\n\n\tgetDifferentChart(type) {\n\t\treturn getDifferentChart(type, this.type, this.rawChartArgs);\n\t}\n}\n","export const Y_AXIS_MARGIN = 60;\n\nexport const MIN_BAR_PERCENT_HEIGHT = 0.01;\nexport const DEFAULT_AXIS_CHART_TYPE = 'line';","import BaseChart from './BaseChart';\nimport { dataPrep } from './axis-chart-utils';\nimport { Y_AXIS_MARGIN } from '../utils/constants';\nimport { getComponent } from '../objects/ChartComponents';\nimport { BarChartController, LineChartController, getPaths } from '../objects/AxisChartControllers';\nimport { AxisChartRenderer } from '../utils/draw';\nimport { getOffset, fire } from '../utils/dom';\nimport { equilizeNoOfElements } from '../utils/draw-utils';\nimport { Animator, translateHoriLine } from '../utils/animate';\nimport { runSMILAnimation } from '../utils/animation';\nimport { getRealIntervals, calcChartIntervals, getIntervalSize, getValueRange, getZeroIndex } from '../utils/intervals';\nimport { floatTwo, fillArray } from '../utils/helpers';\nimport { MIN_BAR_PERCENT_HEIGHT, DEFAULT_AXIS_CHART_TYPE } from '../utils/constants';\n\nexport default class AxisChart extends BaseChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\tthis.isSeries = args.isSeries;\n\t\tthis.valuesOverPoints = args.valuesOverPoints;\n\t\tthis.formatTooltipY = args.formatTooltipY;\n\t\tthis.formatTooltipX = args.formatTooltipX;\n\t\tthis.barOptions = args.barOptions;\n\t\tthis.lineOptions = args.lineOptions;\n\t\tthis.type = args.type || 'line';\n\n\t\tthis.xAxisMode = args.xAxisMode || 'span';\n\t\tthis.yAxisMode = args.yAxisMode || 'span';\n\n\t\tthis.zeroLine = this.height;\n\t\tthis.setTrivialState();\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure();\n\n\t\tthis.config.xAxisMode = args.xAxisMode;\n\t\tthis.config.yAxisMode = args.yAxisMode;\n\t}\n\n\tsetTrivialState() {\n\t\t// Define data and stuff\n\t\tlet xLabels = this.data.labels;\n\t\tthis.state = {\n\t\t\txAxis: {\n\t\t\t\tpositions: [],\n\t\t\t\tlabels: xLabels,\n\t\t\t},\n\t\t\tyAxis: {\n\t\t\t\tpositions: [],\n\t\t\t\tlabels: [],\n\t\t\t},\n\t\t\tdatasetLength: xLabels.length\n\t\t}\n\t\tthis.setObservers();\n\t}\n\n\tsetObservers() {\n\t\t// go through each component and check the keys in this.state it depends on\n\t\t// set an observe() on each of those keys for that component\n\t}\n\n\tsetMargins() {\n\t\tsuper.setMargins();\n\t\tthis.translateXLeft = Y_AXIS_MARGIN;\n\t\tthis.translateXRight = Y_AXIS_MARGIN;\n\t}\n\n\tprepareData(data=this.data) {\n\t\treturn dataPrep(data, this.type);\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\n\t\tthis.calcXPositions();\n\n\t\ts.datasetsLabels = this.data.datasets.map(d => d.name);\n\t\tthis.setYAxis();\n\t\tthis.calcYUnits();\n\t\tthis.calcYMaximums();\n\t\tthis.calcYRegions();\n\n\t}\n\n\tsetYAxis() {\n\t\tthis.calcYAxisParameters(this.state.yAxis, this.getAllYValues(), this.type === 'line');\n\t\tthis.state.zeroLine = this.state.yAxis.zeroLine;\n\t}\n\n\tcalcXPositions() {\n\t\tlet s = this.state;\n\t\tthis.setUnitWidthAndXOffset();\n\t\ts.xAxisPositions = s.xAxis.labels.map((d, i) =>\n\t\t\tfloatTwo(s.xOffset + i * s.unitWidth)\n\t\t);\n\n\t\ts.xUnitPositions = new Array(this.data.datasets.length).fill(s.xAxisPositions);\n\t}\n\n\tcalcYAxisParameters(yAxis, dataValues, withMinimum = 'false') {\n\t\tyAxis.labels = calcChartIntervals(dataValues, withMinimum);\n\t\tconst yPts = yAxis.labels;\n\n\t\tyAxis.scaleMultiplier = this.height / getValueRange(yPts);\n\t\tconst intervalHeight = getIntervalSize(yPts) * yAxis.scaleMultiplier;\n\t\tyAxis.zeroLine = this.height - (getZeroIndex(yPts) * intervalHeight);\n\n\t\tyAxis.positions = yPts.map(d => yAxis.zeroLine - d * yAxis.scaleMultiplier);\n\t}\n\n\tcalcYUnits() {\n\t\tlet s = this.state;\n\t\tthis.data.datasets.map(d => {\n\t\t\td.positions = d.values.map(val =>\n\t\t\t\tfloatTwo(s.yAxis.zeroLine - val * s.yAxis.scaleMultiplier));\n\t\t});\n\n\t\tif(this.barOptions && this.barOptions.stacked) {\n\t\t\tthis.data.datasets.map((d, i) => {\n\t\t\t\td.cumulativePositions = d.cumulativeYs.map(val =>\n\t\t\t\t\tfloatTwo(s.yAxis.zeroLine - val * s.yAxis.scaleMultiplier));\n\t\t\t});\n\t\t}\n\t}\n\n\tcalcYMaximums() {\n\t\tlet s = this.state;\n\t\tif(this.barOptions && this.barOptions.stacked) {\n\t\t\ts.yExtremes = this.data.datasets[this.data.datasets.length - 1].cumulativePositions;\n\t\t\treturn;\n\t\t}\n\t\ts.yExtremes = new Array(s.datasetLength).fill(9999);\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\td.positions.map((pos, j) => {\n\t\t\t\tif(pos < s.yExtremes[j]) {\n\t\t\t\t\ts.yExtremes[j] = pos;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t// Tooltip refresh should not be needed?\n\t\t// this.chartWrapper.removeChild(this.tip.container);\n\t\t// this.make_tooltip();\n\t}\n\n\tcalcYRegions() {\n\t\tlet s = this.state;\n\t\tif(this.data.yMarkers) {\n\t\t\tthis.data.yMarkers = this.data.yMarkers.map(d => {\n\t\t\t\td.position = floatTwo(s.yAxis.zeroLine - d.value * s.yAxis.scaleMultiplier);\n\t\t\t\td.label += ': ' + d.value;\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t\tif(this.data.yRegions) {\n\t\t\tthis.data.yRegions = this.data.yRegions.map(d => {\n\t\t\t\tif(d.end < d.start) {\n\t\t\t\t\t[d.start, d.end] = [d.end, start];\n\t\t\t\t}\n\t\t\t\td.start = floatTwo(s.yAxis.zeroLine - d.start * s.yAxis.scaleMultiplier);\n\t\t\t\td.end = floatTwo(s.yAxis.zeroLine - d.end * s.yAxis.scaleMultiplier);\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t}\n\n\t// Default, as per bar, and mixed. Only line will be a special case\n\tsetUnitWidthAndXOffset() {\n\t\tthis.state.unitWidth = this.width/(this.state.datasetLength);\n\t\tthis.state.xOffset = this.state.unitWidth/2;\n\t}\n\n\tgetAllYValues() {\n\t\t// TODO: yMarkers, regions, sums, every Y value ever\n\n\t\tlet key = 'values';\n\n\t\tif(this.barOptions && this.barOptions.stacked) {\n\t\t\tkey = 'cumulativeYs';\n\t\t\tlet cumulative = new Array(this.state.datasetLength).fill(0);\n\t\t\tthis.data.datasets.map((d, i) => {\n\t\t\t\tlet values = this.data.datasets[i].values;\n\t\t\t\td[key] = cumulative = cumulative.map((c, i) => c + values[i]);\n\t\t\t});\n\t\t}\n\n\t\treturn [].concat(...this.data.datasets.map(d => d[key]));\n\t}\n\n\tinitComponents() {\n\t\tthis.componentConfigs = [\n\t\t\t[\n\t\t\t\t'yAxis',\n\t\t\t\tthis.drawArea,\n\t\t\t\t{\n\t\t\t\t\tmode: this.yAxisMode,\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositions: getRealIntervals(this.height, 4, 0, 0),\n\t\t\t\t\tlabels: getRealIntervals(this.height, 4, 0, 0).map(d => d + \"\"),\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tpositions: s.yAxis.positions,\n\t\t\t\t\t\tlabels: s.yAxis.labels,\n\t\t\t\t\t}\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'xAxis',\n\t\t\t\tthis.drawArea,\n\t\t\t\t{\n\t\t\t\t\tmode: this.xAxisMode,\n\t\t\t\t\theight: this.height,\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpositions: getRealIntervals(this.width, 4, 0, 1),\n\t\t\t\t\tlabels: getRealIntervals(this.width, 4, 0, 1).map(d => d + \"\"),\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tpositions: s.xAxisPositions,\n\t\t\t\t\t\tlabels: s.xAxis.labels,\n\t\t\t\t\t}\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'yRegions',\n\t\t\t\tthis.drawArea,\n\t\t\t\t{\n\t\t\t\t\t// mode: this.yAxisMode,\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tstart: this.height,\n\t\t\t\t\t\tend: this.height,\n\t\t\t\t\t\tlabel: ''\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.data.yRegions || [];\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'yMarkers',\n\t\t\t\tthis.drawArea,\n\t\t\t\t{\n\t\t\t\t\t// mode: this.yAxisMode,\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tposition: this.height,\n\t\t\t\t\t\tlabel: ''\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.data.yMarkers || [];\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\t}\n\tsetupComponents() {\n\t\tlet optionals = ['yMarkers', 'yRegions'];\n\t\tthis.components = this.componentConfigs\n\t\t\t.filter(args => !optionals.includes(args[0]) || this.data[args[0]])\n\t\t\t.map(args => getComponent(...args));\n\t}\n\n\tgetChartComponents() {\n\t\tlet dataUnitsComponents = []\n\t\t// this.state is not defined at this stage\n\t\tthis.data.datasets.forEach((d, index) => {\n\t\t\tif(d.chartType === 'line') {\n\t\t\t\tdataUnitsComponents.push(this.getPathComponent(d, index));\n\t\t\t}\n\n\t\t\tlet renderer = this.unitRenderers[d.chartType];\n\t\t\tdataUnitsComponents.push(this.getDataUnitComponent(\n\t\t\t\tindex, renderer\n\t\t\t));\n\t\t});\n\t\treturn dataUnitsComponents;\n\t}\n\n\tgetDataUnitComponent(index, unitRenderer) {\n\t\treturn new ChartComponent({\n\t\t\tlayerClass: 'dataset-units dataset-' + index,\n\t\t\tmakeElements: () => {\n\t\t\t\t// yPositions, xPostions, color, valuesOverPoints,\n\t\t\t\tlet d = this.data.datasets[index];\n\n\t\t\t\treturn d.positions.map((y, j) => {\n\t\t\t\t\treturn unitRenderer.draw(\n\t\t\t\t\t\tthis.state.xAxisPositions[j],\n\t\t\t\t\t\ty,\n\t\t\t\t\t\tthis.colors[index],\n\t\t\t\t\t\t(this.valuesOverPoints ? (this.barOptions &&\n\t\t\t\t\t\t\tthis.barOptions.stacked ? d.cumulativeYs[j] : d.values[j]) : ''),\n\t\t\t\t\t\tj,\n\t\t\t\t\t\ty - (d.cumulativePositions ? d.cumulativePositions[j] : y)\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t},\n\t\t\tpostMake: function() {\n\t\t\t\tlet translate_layer = () => {\n\t\t\t\t\tthis.layer.setAttribute('transform', `translate(${unitRenderer.consts.width * index}, 0)`);\n\t\t\t\t}\n\n\t\t\t\t// let d = this.data.datasets[index];\n\n\t\t\t\tif(this.meta.type === 'bar' && (!this.meta.barOptions\n\t\t\t\t\t|| !this.meta.barOptions.stacked)) {\n\n\t\t\t\t\ttranslate_layer();\n\t\t\t\t}\n\t\t\t},\n\t\t\tanimate: (svgUnits) => {\n\t\t\t\t// have been updated in axis render;\n\t\t\t\tlet newX = this.state.xAxisPositions;\n\t\t\t\tlet newY = this.data.datasets[index].positions;\n\n\t\t\t\tlet lastUnit = svgUnits[svgUnits.length - 1];\n\t\t\t\tlet parentNode = lastUnit.parentNode;\n\n\t\t\t\tif(this.oldState.xExtra > 0) {\n\t\t\t\t\tfor(var i = 0; i<this.oldState.xExtra; i++) {\n\t\t\t\t\t\tlet unit = lastUnit.cloneNode(true);\n\t\t\t\t\t\tparentNode.appendChild(unit);\n\t\t\t\t\t\tsvgUnits.push(unit);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsvgUnits.map((unit, i) => {\n\t\t\t\t\tif(newX[i] === undefined || newY[i] === undefined) return;\n\t\t\t\t\tthis.elementsToAnimate.push(unitRenderer.animate(\n\t\t\t\t\t\tunit, // unit, with info to replace where it came from in the data\n\t\t\t\t\t\tnewX[i],\n\t\t\t\t\t\tnewY[i],\n\t\t\t\t\t\tindex,\n\t\t\t\t\t\tthis.data.datasets.length\n\t\t\t\t\t));\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tgetPathComponent(d, index) {\n\t\treturn new ChartComponent({\n\t\t\tlayerClass: 'path dataset-path',\n\t\t\tsetData: () => {},\n\t\t\tmakeElements: () => {\n\t\t\t\tlet d = this.data.datasets[index];\n\t\t\t\tlet color = this.colors[index];\n\n\t\t\t\treturn getPaths(\n\t\t\t\t\td.positions,\n\t\t\t\t\tthis.state.xAxisPositions,\n\t\t\t\t\tcolor,\n\t\t\t\t\tthis.config.heatline,\n\t\t\t\t\tthis.config.regionFill\n\t\t\t\t);\n\t\t\t},\n\t\t\tanimate: (paths) => {\n\t\t\t\tlet newX = this.state.xAxisPositions;\n\t\t\t\tlet newY = this.data.datasets[index].positions;\n\n\t\t\t\tlet oldX = this.oldState.xAxisPositions;\n\t\t\t\tlet oldY = this.oldState.datasets[index].positions;\n\n\n\t\t\t\tlet parentNode = paths[0].parentNode;\n\n\t\t\t\t[oldX, newX] = equilizeNoOfElements(oldX, newX);\n\t\t\t\t[oldY, newY] = equilizeNoOfElements(oldY, newY);\n\n\t\t\t\tif(this.oldState.xExtra > 0) {\n\t\t\t\t\tpaths = getPaths(\n\t\t\t\t\t\toldY, oldX, this.colors[index],\n\t\t\t\t\t\tthis.config.heatline,\n\t\t\t\t\t\tthis.config.regionFill\n\t\t\t\t\t);\n\t\t\t\t\tparentNode.textContent = '';\n\t\t\t\t\tpaths.map(path => parentNode.appendChild(path));\n\t\t\t\t}\n\n\t\t\t\tconst newPointsList = newY.map((y, i) => (newX[i] + ',' + y));\n\t\t\t\tthis.elementsToAnimate = this.elementsToAnimate\n\t\t\t\t\t.concat(this.renderer.animatepath(paths, newPointsList.join(\"L\")));\n\t\t\t}\n\t\t});\n\t}\n\n\tbindTooltip() {\n\t\t// TODO: could be in tooltip itself, as it is a given functionality for its parent\n\t\tthis.chartWrapper.addEventListener('mousemove', (e) => {\n\t\t\tlet o = getOffset(this.chartWrapper);\n\t\t\tlet relX = e.pageX - o.left - this.translateXLeft;\n\t\t\tlet relY = e.pageY - o.top - this.translateY;\n\n\t\t\tif(relY < this.height + this.translateY * 2) {\n\t\t\t\tthis.mapTooltipXPosition(relX);\n\t\t\t} else {\n\t\t\t\tthis.tip.hide_tip();\n\t\t\t}\n\t\t});\n\t}\n\n\tmapTooltipXPosition(relX) {\n\t\tlet s = this.state;\n\t\tif(!s.yExtremes) return;\n\n\t\tlet titles = s.xAxis.labels;\n\t\tif(this.formatTooltipX && this.formatTooltipX(titles[0])) {\n\t\t\ttitles = titles.map(d=>this.formatTooltipX(d));\n\t\t}\n\n\t\tlet formatY = this.formatTooltipY && this.formatTooltipY(this.y[0].values[0]);\n\n\t\tfor(var i=s.datasetLength - 1; i >= 0 ; i--) {\n\t\t\tlet xVal = s.xAxisPositions[i];\n\t\t\t// let delta = i === 0 ? s.unitWidth : xVal - s.xAxisPositions[i-1];\n\t\t\tif(relX > xVal - s.unitWidth/2) {\n\t\t\t\tlet x = xVal + this.translateXLeft;\n\t\t\t\tlet y = s.yExtremes[i] + this.translateY;\n\n\t\t\t\tlet values = this.data.datasets.map((set, j) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttitle: set.title,\n\t\t\t\t\t\tvalue: formatY ? this.formatTooltipY(set.values[i]) : set.values[i],\n\t\t\t\t\t\tcolor: this.colors[j],\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\tthis.tip.set_values(x, y, titles[i], '', values);\n\t\t\t\tthis.tip.show_tip();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetDataPoint(index=this.current_index) {\n\t\t// check for length\n\t\tlet data_point = {\n\t\t\tindex: index\n\t\t};\n\t\tlet y = this.y[0];\n\t\t['svg_units', 'yUnitPositions', 'values'].map(key => {\n\t\t\tlet data_key = key.slice(0, key.length-1);\n\t\t\tdata_point[data_key] = y[key][index];\n\t\t});\n\t\tdata_point.label = this.xAxis.labels[index];\n\t\treturn data_point;\n\t}\n\n\tsetCurrentDataPoint(index) {\n\t\tindex = parseInt(index);\n\t\tif(index < 0) index = 0;\n\t\tif(index >= this.xAxis.labels.length) index = this.xAxis.labels.length - 1;\n\t\tif(index === this.current_index) return;\n\t\tthis.current_index = index;\n\t\t$.fire(this.parent, \"data-select\", this.getDataPoint());\n\t}\n\n\t// API\n\n\taddDataPoint(label, datasetValues, index=this.state.datasetLength) {\n\t\tsuper.addDataPoint(label, datasetValues, index);\n\t\t// console.log(label, datasetValues, this.data.labels);\n\t\tthis.data.labels.splice(index, 0, label);\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\td.values.splice(index, 0, datasetValues[i]);\n\t\t});\n\t\t// console.log(this.data);\n\t\tthis.update(this.data);\n\t}\n\n\tremoveDataPoint(index = this.state.datasetLength-1) {\n\t\tsuper.removeDataPoint(index);\n\t\tthis.data.labels.splice(index, 1);\n\t\tthis.data.datasets.map(d => {\n\t\t\td.values.splice(index, 1);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\t// updateData() {\n\t// \t// animate if same no. of datasets,\n\t// \t// else return new chart\n\n\t// \t//\n\t// }\n}\n\n\n// keep a binding at the end of chart\n\n","import LineChart from './LineChart';\n\nexport default class ScatterChart extends LineChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\n\t\tthis.type = 'scatter';\n\n\t\tif(!args.dotRadius) {\n\t\t\tthis.dotRadius = 8;\n\t\t} else {\n\t\t\tthis.dotRadius = args.dotRadius;\n\t\t}\n\n\t\tthis.setup();\n\t}\n\n\tsetup_values() {\n\t\tsuper.setup_values();\n\t\tthis.unit_args = {\n\t\t\ttype: 'dot',\n\t\t\targs: { radius: this.dotRadius }\n\t\t};\n\t}\n\n\tmake_paths() {}\n\tmake_path() {}\n}\n","import AxisChart from './AxisChart';\n// import { ChartComponent } from '../objects/ChartComponents';\nimport { makeSVGGroup, makePath, makeGradient } from '../utils/draw';\nimport { equilizeNoOfElements } from '../utils/draw-utils';\n\nexport default class LineChart extends AxisChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\tthis.type = 'line';\n\n\t\tif(Object.getPrototypeOf(this) !== LineChart.prototype) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.config.xAxisMode = args.xAxisMode || 'span';\n\t\tthis.config.yAxisMode = args.yAxisMode || 'span';\n\n\t\tthis.config.dotRadius = args.dotRadius || 4;\n\n\t\tthis.config.heatline = args.heatline || 0;\n\t\tthis.config.regionFill = args.regionFill || 0;\n\t\tthis.config.showDots = args.showDots || 1;\n\t}\n\n\tconfigUnits() {\n\t\tthis.unitArgs = {\n\t\t\ttype: 'dot',\n\t\t\targs: { radius: this.config.dotRadius }\n\t\t};\n\t}\n\n\t// temp commented\n\tsetUnitWidthAndXOffset() {\n\t\tthis.state.unitWidth = this.width/(this.state.datasetLength - 1);\n\t\tthis.state.xOffset = 0;\n\t}\n\n}\n","import AxisChart from './AxisChart';\nimport { Y_AXIS_MARGIN } from '../utils/constants';\n// import { ChartComponent } from '../objects/ChartComponents';\nimport { floatTwo } from '../utils/helpers';\n\nexport default class MultiAxisChart extends AxisChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\t// this.unitType = args.unitType || 'line';\n\t\t// this.setup();\n\t}\n\n\tpreSetup() {\n\t\tthis.type = 'multiaxis';\n\t}\n\n\tsetMargins() {\n\t\tsuper.setMargins();\n\t\tlet noOfLeftAxes = this.data.datasets.filter(d => d.axisPosition === 'left').length;\n\t\tthis.translateXLeft = (noOfLeftAxes) * Y_AXIS_MARGIN || Y_AXIS_MARGIN;\n\t\tthis.translateXRight = (this.data.datasets.length - noOfLeftAxes) * Y_AXIS_MARGIN || Y_AXIS_MARGIN;\n\t}\n\n\tprepareYAxis() { }\n\n\tprepareData(data) {\n\t\tsuper.prepareData(data);\n\t\tlet sets = this.state.datasets;\n\t\t// let axesLeft = sets.filter(d => d.axisPosition === 'left');\n\t\t// let axesRight = sets.filter(d => d.axisPosition === 'right');\n\t\t// let axesNone = sets.filter(d => !d.axisPosition ||\n\t\t// \t!['left', 'right'].includes(d.axisPosition));\n\n\t\tlet leftCount = 0, rightCount = 0;\n\n\t\tsets.forEach((d, i) => {\n\t\t\td.yAxis = {\n\t\t\t\tposition: d.axisPosition,\n\t\t\t\tindex: d.axisPosition === 'left' ? leftCount++ : rightCount++\n\t\t\t};\n\t\t});\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.config.xAxisMode = args.xAxisMode || 'tick';\n\t\tthis.config.yAxisMode = args.yAxisMode || 'span';\n\t}\n\n\t// setUnitWidthAndXOffset() {\n\t// \tthis.state.unitWidth = this.width/(this.state.datasetLength);\n\t// \tthis.state.xOffset = this.state.unitWidth/2;\n\t// }\n\n\tconfigUnits() {\n\t\tthis.unitArgs = {\n\t\t\ttype: 'bar',\n\t\t\targs: {\n\t\t\t\tspaceWidth: this.state.unitWidth/2,\n\t\t\t}\n\t\t};\n\t}\n\n\tsetYAxis() {\n\t\tthis.state.datasets.map(d => {\n\t\t\tthis.calcYAxisParameters(d.yAxis, d.values, this.unitType === 'line');\n\t\t});\n\t}\n\n\tcalcYUnits() {\n\t\tthis.state.datasets.map(d => {\n\t\t\td.positions = d.values.map(val => floatTwo(d.yAxis.zeroLine - val * d.yAxis.scaleMultiplier));\n\t\t});\n\t}\n\n\t// TODO: function doesn't exist, handle with components\n\trenderConstants() {\n\t\tthis.state.datasets.map(d => {\n\t\t\tlet guidePos = d.yAxis.position === 'left'\n\t\t\t\t? -1 * d.yAxis.index * Y_AXIS_MARGIN\n\t\t\t\t: this.width + d.yAxis.index * Y_AXIS_MARGIN;\n\t\t\tthis.renderer.xLine(guidePos, '', {\n\t\t\t\tpos:'top',\n\t\t\t\tmode: 'span',\n\t\t\t\tstroke: this.colors[i],\n\t\t\t\tclassName: 'y-axis-guide'\n\t\t\t})\n\t\t});\n\t}\n\n\tgetYAxesComponents() {\n\t\treturn this.data.datasets.map((e, i) => {\n\t\t\treturn new ChartComponent({\n\t\t\t\tlayerClass: 'y axis y-axis-' + i,\n\t\t\t\tmake: () => {\n\t\t\t\t\tlet yAxis = this.state.datasets[i].yAxis;\n\t\t\t\t\tthis.renderer.setZeroline(yAxis.zeroline);\n\t\t\t\t\tlet options = {\n\t\t\t\t\t\tpos: yAxis.position,\n\t\t\t\t\t\tmode: 'tick',\n\t\t\t\t\t\toffset: yAxis.index * Y_AXIS_MARGIN,\n\t\t\t\t\t\tstroke: this.colors[i]\n\t\t\t\t\t};\n\n\t\t\t\t\treturn yAxis.positions.map((position, j) =>\n\t\t\t\t\t\tthis.renderer.yLine(position, yAxis.labels[j], options)\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tanimate: () => {}\n\t\t\t});\n\t\t});\n\t}\n\n\t// TODO remove renderer zeroline from above and below\n\tgetChartComponents() {\n\t\treturn this.data.datasets.map((d, index) => {\n\t\t\treturn new ChartComponent({\n\t\t\t\tlayerClass: 'dataset-units dataset-' + index,\n\t\t\t\tmake: () => {\n\t\t\t\t\tlet d = this.state.datasets[index];\n\t\t\t\t\tlet unitType = this.unitArgs;\n\n\t\t\t\t\t// the only difference, should be tied to datasets or default\n\t\t\t\t\tthis.renderer.setZeroline(d.yAxis.zeroLine);\n\n\t\t\t\t\treturn d.positions.map((y, j) => {\n\t\t\t\t\t\treturn this.renderer[unitType.type](\n\t\t\t\t\t\t\tthis.state.xAxisPositions[j],\n\t\t\t\t\t\t\ty,\n\t\t\t\t\t\t\tunitType.args,\n\t\t\t\t\t\t\tthis.colors[index],\n\t\t\t\t\t\t\tj,\n\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\tthis.state.datasetLength\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tanimate: (svgUnits) => {\n\t\t\t\t\tlet d = this.state.datasets[index];\n\t\t\t\t\tlet unitType = this.unitArgs.type;\n\n\t\t\t\t\t// have been updated in axis render;\n\t\t\t\t\tlet newX = this.state.xAxisPositions;\n\t\t\t\t\tlet newY = this.state.datasets[index].positions;\n\n\t\t\t\t\tlet lastUnit = svgUnits[svgUnits.length - 1];\n\t\t\t\t\tlet parentNode = lastUnit.parentNode;\n\n\t\t\t\t\tif(this.oldState.xExtra > 0) {\n\t\t\t\t\t\tfor(var i = 0; i<this.oldState.xExtra; i++) {\n\t\t\t\t\t\t\tlet unit = lastUnit.cloneNode(true);\n\t\t\t\t\t\t\tparentNode.appendChild(unit);\n\t\t\t\t\t\t\tsvgUnits.push(unit);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.renderer.setZeroline(d.yAxis.zeroLine);\n\n\t\t\t\t\tsvgUnits.map((unit, i) => {\n\t\t\t\t\t\tif(newX[i] === undefined || newY[i] === undefined) return;\n\t\t\t\t\t\tthis.elementsToAnimate.push(this.renderer['animate' + unitType](\n\t\t\t\t\t\t\tunit, // unit, with info to replace where it came from in the data\n\t\t\t\t\t\t\tnewX[i],\n\t\t\t\t\t\t\tnewY[i],\n\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\tthis.state.noOfDatasets\n\t\t\t\t\t\t));\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { $, getOffset } from '../utils/dom';\n\nexport default class PercentageChart extends BaseChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\tthis.type = 'percentage';\n\n\t\tthis.max_slices = 10;\n\t\tthis.max_legend_points = 6;\n\n\t\tthis.setup();\n\t}\n\n\tmakeChartArea() {\n\t\tthis.chartWrapper.className += ' ' + 'graph-focus-margin';\n\t\tthis.chartWrapper.style.marginTop = '45px';\n\n\t\tthis.statsWrapper.className += ' ' + 'graph-focus-margin';\n\t\tthis.statsWrapper.style.marginBottom = '30px';\n\t\tthis.statsWrapper.style.paddingTop = '0px';\n\n\t\tthis.chartDiv = $.create('div', {\n\t\t\tclassName: 'div',\n\t\t\tinside: this.chartWrapper\n\t\t});\n\n\t\tthis.chart = $.create('div', {\n\t\t\tclassName: 'progress-chart',\n\t\t\tinside: this.chartDiv\n\t\t});\n\t}\n\n\tsetupLayers() {\n\t\tthis.percentageBar = $.create('div', {\n\t\t\tclassName: 'progress',\n\t\t\tinside: this.chart\n\t\t});\n\t}\n\n\tsetup_values() {\n\t\tthis.slice_totals = [];\n\t\tlet all_totals = this.data.labels.map((d, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, d];\n\t\t}).filter(d => { return d[0] > 0; }); // keep only positive results\n\n\t\tlet totals = all_totals;\n\n\t\tif(all_totals.length > this.max_slices) {\n\t\t\tall_totals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = all_totals.slice(0, this.max_slices-1);\n\t\t\tlet others = all_totals.slice(this.max_slices-1);\n\n\t\t\tlet sum_of_others = 0;\n\t\t\tothers.map(d => {sum_of_others += d[0];});\n\n\t\t\ttotals.push([sum_of_others, 'Rest']);\n\n\t\t\tthis.colors[this.max_slices-1] = 'grey';\n\t\t}\n\n\t\tthis.labels = [];\n\t\ttotals.map(d => {\n\t\t\tthis.slice_totals.push(d[0]);\n\t\t\tthis.labels.push(d[1]);\n\t\t});\n\n\t\tthis.legend_totals = this.slice_totals.slice(0, this.max_legend_points);\n\t}\n\n\trenderComponents() {\n\t\tthis.grand_total = this.slice_totals.reduce((a, b) => a + b, 0);\n\t\tthis.slices = [];\n\t\tthis.slice_totals.map((total, i) => {\n\t\t\tlet slice = $.create('div', {\n\t\t\t\tclassName: `progress-bar`,\n\t\t\t\tinside: this.percentageBar,\n\t\t\t\tstyles: {\n\t\t\t\t\tbackground: this.colors[i],\n\t\t\t\t\twidth: total*100/this.grand_total + \"%\"\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.slices.push(slice);\n\t\t});\n\t}\n\n\tcalc() {}\n\n\tbindTooltip() {\n\t\tthis.slices.map((slice, i) => {\n\t\t\tslice.addEventListener('mouseenter', () => {\n\t\t\t\tlet g_off = getOffset(this.chartWrapper), p_off = getOffset(slice);\n\n\t\t\t\tlet x = p_off.left - g_off.left + slice.offsetWidth/2;\n\t\t\t\tlet y = p_off.top - g_off.top - 6;\n\t\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length>0\n\t\t\t\t\t? this.formatted_labels[i] : this.labels[i]) + ': ';\n\t\t\t\tlet percent = (this.slice_totals[i]*100/this.grand_total).toFixed(1);\n\n\t\t\t\tthis.tip.set_values(x, y, title, percent + \"%\");\n\t\t\t\tthis.tip.show_tip();\n\t\t\t});\n\t\t});\n\t}\n\n\trenderLegend() {\n\t\tlet x_values = this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t? this.formatted_labels : this.labels;\n\t\tthis.legend_totals.map((d, i) => {\n\t\t\tif(d) {\n\t\t\t\tlet stats = $.create('div', {\n\t\t\t\t\tclassName: 'stats',\n\t\t\t\t\tinside: this.statsWrapper\n\t\t\t\t});\n\t\t\t\tstats.innerHTML = `<span class=\"indicator\">\n\t\t\t\t\t<i style=\"background: ${this.colors[i]}\"></i>\n\t\t\t\t\t<span class=\"text-muted\">${x_values[i]}:</span>\n\t\t\t\t\t${d}\n\t\t\t\t</span>`;\n\t\t\t}\n\t\t});\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { $, getOffset } from '../utils/dom';\nimport { makePath } from '../utils/draw';\nimport { lightenDarkenColor } from '../utils/colors';\nimport { runSMILAnimation, transform } from '../utils/animation';\nconst ANGLE_RATIO = Math.PI / 180;\nconst FULL_ANGLE = 360;\n\nexport default class PieChart extends BaseChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\tthis.type = 'pie';\n\t\tthis.elements_to_animate = null;\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.max_slices = 10;\n\t\tthis.max_legend_points = 6;\n\t\tthis.isAnimate = false;\n\t\tthis.startAngle = args.startAngle || 0;\n\t\tthis.clockWise = args.clockWise || false;\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\t\tthis.setup();\n\t}\n\tsetup_values() {\n\t\tthis.centerX = this.width / 2;\n\t\tthis.centerY = this.height / 2;\n\t\tthis.radius = (this.height > this.width ? this.centerX : this.centerY);\n\t\tthis.slice_totals = [];\n\t\tlet all_totals = this.data.labels.map((d, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, d];\n\t\t}).filter(d => { return d[0] > 0; }); // keep only positive results\n\n\t\tlet totals = all_totals;\n\n\t\tif(all_totals.length > this.max_slices) {\n\t\t\tall_totals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = all_totals.slice(0, this.max_slices-1);\n\t\t\tlet others = all_totals.slice(this.max_slices-1);\n\n\t\t\tlet sum_of_others = 0;\n\t\t\tothers.map(d => {sum_of_others += d[0];});\n\n\t\t\ttotals.push([sum_of_others, 'Rest']);\n\n\t\t\tthis.colors[this.max_slices-1] = 'grey';\n\t\t}\n\n\t\tthis.labels = [];\n\t\ttotals.map(d => {\n\t\t\tthis.slice_totals.push(d[0]);\n\t\t\tthis.labels.push(d[1]);\n\t\t});\n\n\t\tthis.legend_totals = this.slice_totals.slice(0, this.max_legend_points);\n\t}\n\n\tstatic getPositionByAngle(angle,radius){\n\t\treturn {\n\t\t\tx:Math.sin(angle * ANGLE_RATIO) * radius,\n\t\t\ty:Math.cos(angle * ANGLE_RATIO) * radius,\n\t\t};\n\t}\n\tmakeArcPath(startPosition,endPosition){\n\t\tconst{centerX,centerY,radius,clockWise} = this;\n\t\treturn `M${centerX} ${centerY} L${centerX+startPosition.x} ${centerY+startPosition.y} A ${radius} ${radius} 0 0 ${clockWise ? 1 : 0} ${centerX+endPosition.x} ${centerY+endPosition.y} z`;\n\t}\n\trenderComponents(init){\n\t\tconst{radius,clockWise} = this;\n\t\tthis.grand_total = this.slice_totals.reduce((a, b) => a + b, 0);\n\t\tconst prevSlicesProperties = this.slicesProperties || [];\n\t\tthis.slices = [];\n\t\tthis.elements_to_animate = [];\n\t\tthis.slicesProperties = [];\n\t\tlet curAngle = 180 - this.startAngle;\n\t\tthis.slice_totals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / this.grand_total) * FULL_ANGLE;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = PieChart.getPositionByAngle(startAngle,radius);\n\t\t\tconst endPosition = PieChart.getPositionByAngle(endAngle,radius);\n\t\t\tconst prevProperty = init && prevSlicesProperties[i];\n\t\t\tlet curStart,curEnd;\n\t\t\tif(init){\n\t\t\t\tcurStart = prevProperty?prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty? prevProperty.endPosition : startPosition;\n\t\t\t}else{\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath = this.makeArcPath(curStart,curEnd);\n\t\t\tlet slice = makePath(curPath, 'pie-path', 'none', this.colors[i]);\n\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\tthis.drawArea.appendChild(slice);\n\n\t\t\tthis.slices.push(slice);\n\t\t\tthis.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: this.grand_total,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle:diffAngle\n\t\t\t});\n\t\t\tif(init){\n\t\t\t\tthis.elements_to_animate.push([{unit: slice, array: this.slices, index: this.slices.length - 1},\n\t\t\t\t\t{d:this.makeArcPath(startPosition,endPosition)},\n\t\t\t\t\t650, \"easein\",null,{\n\t\t\t\t\t\td:curPath\n\t\t\t\t\t}]);\n\t\t\t}\n\n\t\t});\n\t\tif(init){\n\t\t\trunSMILAnimation(this.chartWrapper, this.svg, this.elements_to_animate);\n\t\t}\n\t}\n\n\tcalTranslateByAngle(property){\n\t\tconst{radius,hoverRadio} = this;\n\t\tconst position = PieChart.getPositionByAngle(property.startAngle+(property.angle / 2),radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\thoverSlice(path,i,flag,e){\n\t\tif(!path) return;\n\t\tconst color = this.colors[i];\n\t\tif(flag){\n\t\t\ttransform(path,this.calTranslateByAngle(this.slicesProperties[i]));\n\t\t\tpath.style.fill = lightenDarkenColor(color,50);\n\t\t\tlet g_off = getOffset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length>0\n\t\t\t\t? this.formatted_labels[i] : this.labels[i]) + ': ';\n\t\t\tlet percent = (this.slice_totals[i]*100/this.grand_total).toFixed(1);\n\t\t\tthis.tip.set_values(x, y, title, percent + \"%\");\n\t\t\tthis.tip.show_tip();\n\t\t}else{\n\t\t\ttransform(path,'translate3d(0,0,0)');\n\t\t\tthis.tip.hide_tip();\n\t\t\tpath.style.fill = color;\n\t\t}\n\t}\n\n\tmouseMove(e){\n\t\tconst target = e.target;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevAcitve = this.curActiveSlice;\n\t\tfor(let i = 0; i < this.slices.length; i++){\n\t\t\tif(target === this.slices[i]){\n\t\t\t\tthis.hoverSlice(prevAcitve,prevIndex,false);\n\t\t\t\tthis.curActiveSlice = target;\n\t\t\t\tthis.curActiveSliceIndex = i;\n\t\t\t\tthis.hoverSlice(target,i,true,e);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tmouseLeave(){\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\n\t}\n\tbindTooltip() {\n\t\tthis.drawArea.addEventListener('mousemove',this.mouseMove);\n\t\tthis.drawArea.addEventListener('mouseleave',this.mouseLeave);\n\t}\n\n\trenderLegend() {\n\t\tlet x_values = this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t? this.formatted_labels : this.labels;\n\t\tthis.legend_totals.map((d, i) => {\n\t\t\tconst color = this.colors[i];\n\n\t\t\tif(d) {\n\t\t\t\tlet stats = $.create('div', {\n\t\t\t\t\tclassName: 'stats',\n\t\t\t\t\tinside: this.statsWrapper\n\t\t\t\t});\n\t\t\t\tstats.innerHTML = `<span class=\"indicator\">\n\t\t\t\t\t<i style=\"background-color:${color};\"></i>\n\t\t\t\t\t<span class=\"text-muted\">${x_values[i]}:</span>\n\t\t\t\t\t${d}\n\t\t\t\t</span>`;\n\t\t\t}\n\t\t});\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { makeSVGGroup, makeHeatSquare, makeText } from '../utils/draw';\nimport { addDays, getDdMmYyyy, getWeeksBetween } from '../utils/date-utils';\nimport { calcDistribution, getMaxCheckpoint } from '../utils/intervals';\nimport { isValidColor } from '../utils/colors';\n\nexport default class Heatmap extends BaseChart {\n\tconstructor({\n\t\tstart = '',\n\t\tdomain = '',\n\t\tsubdomain = '',\n\t\tdata = {},\n\t\tdiscrete_domains = 0,\n\t\tcount_label = '',\n\t\tlegend_colors = []\n\t}) {\n\t\tsuper(arguments[0]);\n\n\t\tthis.type = 'heatmap';\n\n\t\tthis.domain = domain;\n\t\tthis.subdomain = subdomain;\n\t\tthis.data = data;\n\t\tthis.discrete_domains = discrete_domains;\n\t\tthis.count_label = count_label;\n\n\t\tlet today = new Date();\n\t\tthis.start = start || addDays(today, 365);\n\n\t\tlegend_colors = legend_colors.slice(0, 5);\n\t\tthis.legend_colors = this.validate_colors(legend_colors)\n\t\t\t? legend_colors\n\t\t\t: ['#ebedf0', '#c6e48b', '#7bc96f', '#239a3b', '#196127'];\n\n\t\t// Fixed 5-color theme,\n\t\t// More colors are difficult to parse visually\n\t\tthis.distribution_size = 5;\n\n\t\tthis.translateX = 0;\n\t\t// this.setup();\n\t}\n\n\tvalidate_colors(colors) {\n\t\tif(colors.length < 5) return 0;\n\n\t\tlet valid = 1;\n\t\tcolors.forEach(function(string) {\n\t\t\tif(!isValidColor(string)) {\n\t\t\t\tvalid = 0;\n\t\t\t\tconsole.warn('\"' + string + '\" is not a valid color.');\n\t\t\t}\n\t\t}, this);\n\n\t\treturn valid;\n\t}\n\n\tconfigure() {\n\t\tsuper.configure();\n\t\tthis.today = new Date();\n\n\t\tif(!this.start) {\n\t\t\tthis.start = new Date();\n\t\t\tthis.start.setFullYear( this.start.getFullYear() - 1 );\n\t\t}\n\t\tthis.first_week_start = new Date(this.start.toDateString());\n\t\tthis.last_week_start = new Date(this.today.toDateString());\n\t\tif(this.first_week_start.getDay() !== 7) {\n\t\t\taddDays(this.first_week_start, (-1) * this.first_week_start.getDay());\n\t\t}\n\t\tif(this.last_week_start.getDay() !== 7) {\n\t\t\taddDays(this.last_week_start, (-1) * this.last_week_start.getDay());\n\t\t}\n\t\tthis.no_of_cols = getWeeksBetween(this.first_week_start + '', this.last_week_start + '') + 1;\n\t}\n\n\tcalcWidth() {\n\t\tthis.baseWidth = (this.no_of_cols + 3) * 12 ;\n\n\t\tif(this.discrete_domains) {\n\t\t\tthis.baseWidth += (12 * 12);\n\t\t}\n\t}\n\n\tsetupLayers() {\n\t\tthis.domain_label_group = this.makeLayer(\n\t\t\t'domain-label-group chart-label');\n\n\t\tthis.data_groups = this.makeLayer(\n\t\t\t'data-groups',\n\t\t\t`translate(0, 20)`\n\t\t);\n\t}\n\n\tsetup_values() {\n\t\tthis.domain_label_group.textContent = '';\n\t\tthis.data_groups.textContent = '';\n\n\t\tlet data_values = Object.keys(this.data).map(key => this.data[key]);\n\t\tthis.distribution = calcDistribution(data_values, this.distribution_size);\n\n\t\tthis.month_names = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n\t\t\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n\t\t];\n\n\t\tthis.render_all_weeks_and_store_x_values(this.no_of_cols);\n\t}\n\n\trender_all_weeks_and_store_x_values(no_of_weeks) {\n\t\tlet current_week_sunday = new Date(this.first_week_start);\n\t\tthis.week_col = 0;\n\t\tthis.current_month = current_week_sunday.getMonth();\n\n\t\tthis.months = [this.current_month + ''];\n\t\tthis.month_weeks = {}, this.month_start_points = [];\n\t\tthis.month_weeks[this.current_month] = 0;\n\t\tthis.month_start_points.push(13);\n\n\t\tfor(var i = 0; i < no_of_weeks; i++) {\n\t\t\tlet data_group, month_change = 0;\n\t\t\tlet day = new Date(current_week_sunday);\n\n\t\t\t[data_group, month_change] = this.get_week_squares_group(day, this.week_col);\n\t\t\tthis.data_groups.appendChild(data_group);\n\t\t\tthis.week_col += 1 + parseInt(this.discrete_domains && month_change);\n\t\t\tthis.month_weeks[this.current_month]++;\n\t\t\tif(month_change) {\n\t\t\t\tthis.current_month = (this.current_month + 1) % 12;\n\t\t\t\tthis.months.push(this.current_month + '');\n\t\t\t\tthis.month_weeks[this.current_month] = 1;\n\t\t\t}\n\t\t\taddDays(current_week_sunday, 7);\n\t\t}\n\t\tthis.render_month_labels();\n\t}\n\n\tget_week_squares_group(current_date, index) {\n\t\tconst no_of_weekdays = 7;\n\t\tconst square_side = 10;\n\t\tconst cell_padding = 2;\n\t\tconst step = 1;\n\t\tconst today_time = this.today.getTime();\n\n\t\tlet month_change = 0;\n\t\tlet week_col_change = 0;\n\n\t\tlet data_group = makeSVGGroup(this.data_groups, 'data-group');\n\n\t\tfor(var y = 0, i = 0; i < no_of_weekdays; i += step, y += (square_side + cell_padding)) {\n\t\t\tlet data_value = 0;\n\t\t\tlet color_index = 0;\n\n\t\t\tlet current_timestamp = current_date.getTime()/1000;\n\t\t\tlet timestamp = Math.floor(current_timestamp - (current_timestamp % 86400)).toFixed(1);\n\n\t\t\tif(this.data[timestamp]) {\n\t\t\t\tdata_value = this.data[timestamp];\n\t\t\t}\n\n\t\t\tif(this.data[Math.round(timestamp)]) {\n\t\t\t\tdata_value = this.data[Math.round(timestamp)];\n\t\t\t}\n\n\t\t\tif(data_value) {\n\t\t\t\tcolor_index = getMaxCheckpoint(data_value, this.distribution);\n\t\t\t}\n\n\t\t\tlet x = 13 + (index + week_col_change) * 12;\n\n\t\t\tlet dataAttr = {\n\t\t\t\t'data-date': getDdMmYyyy(current_date),\n\t\t\t\t'data-value': data_value,\n\t\t\t\t'data-day': current_date.getDay()\n\t\t\t};\n\t\t\tlet heatSquare = makeHeatSquare('day', x, y, square_side,\n\t\t\t\tthis.legend_colors[color_index], dataAttr);\n\n\t\t\tdata_group.appendChild(heatSquare);\n\n\t\t\tlet next_date = new Date(current_date);\n\t\t\taddDays(next_date, 1);\n\t\t\tif(next_date.getTime() > today_time) break;\n\n\n\t\t\tif(next_date.getMonth() - current_date.getMonth()) {\n\t\t\t\tmonth_change = 1;\n\t\t\t\tif(this.discrete_domains) {\n\t\t\t\t\tweek_col_change = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.month_start_points.push(13 + (index + week_col_change) * 12);\n\t\t\t}\n\t\t\tcurrent_date = next_date;\n\t\t}\n\n\t\treturn [data_group, month_change];\n\t}\n\n\trender_month_labels() {\n\t\t// this.first_month_label = 1;\n\t\t// if (this.first_week_start.getDate() > 8) {\n\t\t// \tthis.first_month_label = 0;\n\t\t// }\n\t\t// this.last_month_label = 1;\n\n\t\t// let first_month = this.months.shift();\n\t\t// let first_month_start = this.month_start_points.shift();\n\t\t// render first month if\n\n\t\t// let last_month = this.months.pop();\n\t\t// let last_month_start = this.month_start_points.pop();\n\t\t// render last month if\n\n\t\tthis.months.shift();\n\t\tthis.month_start_points.shift();\n\t\tthis.months.pop();\n\t\tthis.month_start_points.pop();\n\n\t\tthis.month_start_points.map((start, i) => {\n\t\t\tlet month_name =  this.month_names[this.months[i]].substring(0, 3);\n\t\t\tlet text = makeText('y-value-text', start+12, 10, month_name);\n\t\t\tthis.domain_label_group.appendChild(text);\n\t\t});\n\t}\n\n\trenderComponents() {\n\t\tArray.prototype.slice.call(\n\t\t\tthis.container.querySelectorAll('.graph-stats-container, .sub-title, .title')\n\t\t).map(d => {\n\t\t\td.style.display = 'None';\n\t\t});\n\t\tthis.chartWrapper.style.marginTop = '0px';\n\t\tthis.chartWrapper.style.paddingTop = '0px';\n\t}\n\n\tbindTooltip() {\n\t\tArray.prototype.slice.call(\n\t\t\tdocument.querySelectorAll(\".data-group .day\")\n\t\t).map(el => {\n\t\t\tel.addEventListener('mouseenter', (e) => {\n\t\t\t\tlet count = e.target.getAttribute('data-value');\n\t\t\t\tlet date_parts = e.target.getAttribute('data-date').split('-');\n\n\t\t\t\tlet month = this.month_names[parseInt(date_parts[1])-1].substring(0, 3);\n\n\t\t\t\tlet g_off = this.chartWrapper.getBoundingClientRect(), p_off = e.target.getBoundingClientRect();\n\n\t\t\t\tlet width = parseInt(e.target.getAttribute('width'));\n\t\t\t\tlet x = p_off.left - g_off.left + (width+2)/2;\n\t\t\t\tlet y = p_off.top - g_off.top - (width+2)/2;\n\t\t\t\tlet value = count + ' ' + this.count_label;\n\t\t\t\tlet name = ' on ' + month + ' ' + date_parts[0] + ', ' + date_parts[2];\n\n\t\t\t\tthis.tip.set_values(x, y, name, value, [], 1);\n\t\t\t\tthis.tip.show_tip();\n\t\t\t});\n\t\t});\n\t}\n\n\tupdate(data) {\n\t\tthis.data = data;\n\t\tthis.setup_values();\n\t\tthis.bindTooltip();\n\t}\n}\n"],"names":["expr","con","document","querySelector","getOffset","element","rect","getBoundingClientRect","top","documentElement","scrollTop","body","left","scrollLeft","isElementInViewport","el","bottom","window","innerHeight","clientHeight","right","innerWidth","clientWidth","getElementContentWidth","styles","getComputedStyle","padding","parseFloat","paddingLeft","paddingRight","floatTwo","d","toFixed","fillArray","array","count","start","length","fillerArray","Array","Math","abs","fill","concat","getStringWidth","string","charWidth","getBarHeightAndYAttr","yTop","zeroLine","height","y","totalHeight","MIN_BAR_PERCENT_HEIGHT","equilizeNoOfElements","array1","array2","extra_count","translate","unit","oldCoord","newCoord","duration","transform","join","STD_EASING","translateVertLine","xLine","newX","oldX","MARKER_LINE_ANIM_DUR","translateHoriLine","yLine","newY","oldY","animateRegion","rectGroup","newY1","newY2","oldY2","newHeight","childNodes","stroke-dasharray","getAttribute","$","createSVG","tag","o","createElementNS","i","val","appendChild","ref","parentNode","insertBefore","keys","map","style","prop","setAttribute","renderVerticalGradient","svgDefElem","gradientId","setGradientStop","gradElem","offset","color","opacity","makeSVGContainer","parent","className","width","makeSVGDefs","svgContainer","makeSVGGroup","wrapInSVGGroup","elements","g","forEach","e","makePath","pathStr","makeGradient","lighter","gradientDef","opacities","makeHeatSquare","x","size","data","args","key","makeText","content","FONT_SIZE","makeVertLine","label","y1","y2","options","stroke","BASE_LINE_COLOR","l","text","LABEL_MARGIN","line","makeHoriLine","x1","x2","lineType","pos","mode","AXIS_TICK_LENGTH","yMarker","labelSvg","yRegion","region","limitColor","r","lightenDarkenColor","amt","col","getColor","usePound","slice","num","parseInt","b","toString","isValidColor","test","getDifferentChart","type","current_type","ALL_CHART_TYPES","includes","error","COMPATIBLE_CHARTS","useColor","COLOR_COMPATIBLE_CHARTS","Chart","title","colors","undefined","animateSVGElement","props","dur","easingType","oldValues","animElement","cloneNode","newElement","attributeName","animateElement","currentValue","value","animAttr","EASING","webkitTransform","msTransform","mozTransform","oTransform","animateSVG","newElements","animElements","push","replaceChild","animSvg","runSMILAnimation","svgElement","elementsToAnimate","animSvgElement","removeChild","REPLACE_ALL_NEW_DUR","dataPrep","labels","datasetLength","datasets","zeroArray","values","vals","isNaN","index","chartType","DEFAULT_AXIS_CHART_TYPE","getComponent","name","constants","initData","getData","config","componentConfigs","assign","ChartComponent","getPaths","yList","xList","heatline","regionFill","pointsStr","path","gradient_id","this","svgDefs","components","gradient_id_region","state","yAxis","normalize","mantissa","exponent","sig","isFinite","exp","floor","log10","pow","getChartRangeIntervals","max","min","upperBound","ceil","lowerBound","range","noOfParts","partSize","intervals","getChartIntervals","maxValue","minValue","normalMaxValue","normalMinValue","calcChartIntervals","getPositiveFirstIntervals","absMinValue","intervalSize","unshift","withMinimum","pseudoMaxValue","pseudoMinValue","reverse","getZeroIndex","yPts","interval","getIntervalSize","indexOf","getRealIntervals","noOfIntervals","asc","part","orderedArray","getValueRange","calcDistribution","distributionSize","dataMaxValue","distributionStep","distribution","checkpoint","getMaxCheckpoint","filter","treatAsUtc","dateStr","result","Date","setMinutes","getMinutes","getTimezoneOffset","getDdMmYyyy","date","dd","getDate","mm","getMonth","getFullYear","getWeeksBetween","startDateStr","endDateStr","getDaysBetween","addDays","numberOfDays","setDate","getChartByType","AxisChart","chartTypes","create","createElement","SvgTip","title_name","title_value","list_values","title_value_first","setup","make_tooltip","calc_position","container","hide_tip","data_point_list","addEventListener","innerHTML","set","_this2","li","offsetWidth","offsetHeight","max_left","pointer","pointer_offset","refresh","PRESET_COLOR_MAP","refreshState","totalWidth","unitWidth","xAxisMode","yAxisMode","bar","noOfDatasets","avgUnitWidth","dot","cx","cy","paths","pathComponents","animPath","regStartPt","regEndPt","animRegion","DEFAULT_COLORS","BaseChart","subtitle","isNavigable","showLegend","rawChartArgs","arguments","argHeight","currentIndex","prepareData","configure","setColors","setMargins","_this","draw","list","baseHeight","translateY","translateXLeft","translateXRight","validate","_setup","makeContainer","makeTooltip","chartWrapper","statsWrapper","tip","bindTooltip","init","calcWidth","makeChartArea","initComponents","setupComponents","c","make","renderLegend","setupNavigation","update","baseWidth","calc","render","animate","apply","svg","drawArea","makeOverlay","bindOverlay","_this3","event","keyCode","onLeftArrow","onRightArrow","onUpArrow","onDownArrow","onEnterKey","point","dataset","dataPoint","layerClass","layerTransform","makeElements","postMake","animateElements","store","layer","preMake","oldData","textContent","positions","position","newData","newPos","newLabels","oldPos","oldLabels","_this4","marker","_this5","end","_this6","newStarts","oldStarts","yPositions","j","barController","xPositions","valuesOverPoints","stacked","cumulativeYs","cumulativePositions","unitRenderer","consts","AxisChartController","meta","setupArgs","Object","radius","m","barsWidth","spaceRatio","minHeight","dotSize","isSeries","formatTooltipY","formatTooltipX","barOptions","lineOptions","setTrivialState","xLabels","setObservers","s","calcXPositions","datasetsLabels","setYAxis","calcYUnits","calcYMaximums","calcYRegions","calcYAxisParameters","getAllYValues","setUnitWidthAndXOffset","xAxisPositions","xAxis","xOffset","xUnitPositions","dataValues","scaleMultiplier","intervalHeight","yExtremes","yMarkers","yRegions","cumulative","bind","optionals","dataUnitsComponents","getPathComponent","renderer","unitRenderers","getDataUnitComponent","svgUnits","lastUnit","oldState","xExtra","_this7","newPointsList","animatepath","_this8","relX","pageX","pageY","mapTooltipXPosition","titles","_this9","formatY","xVal","set_values","show_tip","current_index","data_point","data_key","fire","getDataPoint","datasetValues","splice","ScatterChart","dotRadius","unit_args","getPrototypeOf","LineChart","prototype","showDots","unitArgs","MultiAxisChart","noOfLeftAxes","axisPosition","leftCount","rightCount","unitType","guidePos","setZeroline","zeroline","PercentageChart","max_slices","max_legend_points","marginTop","marginBottom","paddingTop","chartDiv","chart","percentageBar","slice_totals","all_totals","total","totals","sort","a","sum_of_others","legend_totals","grand_total","reduce","slices","g_off","p_off","formatted_labels","percent","x_values","ANGLE_RATIO","PI","PieChart","elements_to_animate","hoverRadio","isAnimate","startAngle","clockWise","mouseMove","mouseLeave","centerX","centerY","startPosition","endPosition","prevSlicesProperties","slicesProperties","curAngle","originDiffAngle","diffAngle","endAngle","getPositionByAngle","prevProperty","curStart","curEnd","curPath","makeArcPath","transition","property","angle","flag","calTranslateByAngle","target","prevIndex","curActiveSliceIndex","prevAcitve","curActiveSlice","hoverSlice","sin","cos","domain","subdomain","discrete_domains","count_label","legend_colors","today","validate_colors","distribution_size","translateX","valid","warn","setFullYear","first_week_start","toDateString","last_week_start","getDay","no_of_cols","domain_label_group","makeLayer","data_groups","data_values","month_names","render_all_weeks_and_store_x_values","no_of_weeks","current_week_sunday","week_col","current_month","months","month_weeks","month_start_points","data_group","month_change","day","get_week_squares_group","render_month_labels","current_date","today_time","getTime","week_col_change","square_side","data_value","color_index","current_timestamp","timestamp","round","dataAttr","heatSquare","next_date","shift","pop","substring","call","querySelectorAll","display","date_parts","split","month","setup_values","Heatmap"],"mappings":"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"}